import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as t,o as l}from"./app-D4yN_ylH.js";const n={};function h(e,i){return l(),a("div",null,i[0]||(i[0]=[t(`<p>下面是一篇较为完整的文档，详细阐述了从浏览器地址栏输入网址后发生的过程、加载顺序、前端需要注意的地方以及如何优化加载性能。</p><hr><h1 id="浏览器地址栏输入网址后发生了什么" tabindex="-1"><a class="header-anchor" href="#浏览器地址栏输入网址后发生了什么"><span>浏览器地址栏输入网址后发生了什么</span></a></h1><p>当用户在浏览器地址栏输入一个网址并回车后，浏览器会经过一系列步骤来加载和展示页面，主要流程大致如下：</p><h2 id="_1-url解析与网络请求" tabindex="-1"><a class="header-anchor" href="#_1-url解析与网络请求"><span>1. URL解析与网络请求</span></a></h2><h3 id="_1-1-url解析" tabindex="-1"><a class="header-anchor" href="#_1-1-url解析"><span>1.1 URL解析</span></a></h3><ul><li><strong>解析协议、域名和路径</strong>：浏览器首先会解析用户输入的 URL（例如 <code>https://www.example.com/path/page.html</code>），确定协议（HTTP/HTTPS）、域名、端口（如果未指定则使用默认端口）和路径信息。</li></ul><h3 id="_1-2-dns解析" tabindex="-1"><a class="header-anchor" href="#_1-2-dns解析"><span>1.2 DNS解析</span></a></h3><ul><li><strong>DNS查找</strong>：浏览器检查本地缓存、操作系统缓存、路由器缓存及ISP提供的 DNS 缓存，若未命中则向 DNS 服务器发起查询，获取目标域名对应的 IP 地址。</li></ul><h3 id="_1-3-建立网络连接" tabindex="-1"><a class="header-anchor" href="#_1-3-建立网络连接"><span>1.3 建立网络连接</span></a></h3><ul><li><strong>TCP握手</strong>：通过三次握手（SYN、SYN-ACK、ACK）建立与服务器之间的 TCP 连接。</li><li><strong>TLS握手（HTTPS场景）</strong>：如果使用 HTTPS，则在 TCP 连接建立后进行 TLS 握手，协商加密算法、验证证书、生成会话密钥等，以保证数据传输的安全性。</li></ul><h3 id="_1-4-发送-http-请求" tabindex="-1"><a class="header-anchor" href="#_1-4-发送-http-请求"><span>1.4 发送 HTTP 请求</span></a></h3><ul><li><strong>请求报文</strong>：浏览器构造 HTTP 请求头（包含 Cookie、User-Agent、Accept-Encoding 等信息）并发送请求到服务器。</li><li><strong>缓存判断</strong>：浏览器会检查本地缓存，若资源未过期，则可能直接使用缓存数据。</li></ul><h2 id="_2-服务器响应与资源加载" tabindex="-1"><a class="header-anchor" href="#_2-服务器响应与资源加载"><span>2. 服务器响应与资源加载</span></a></h2><h3 id="_2-1-服务器响应" tabindex="-1"><a class="header-anchor" href="#_2-1-服务器响应"><span>2.1 服务器响应</span></a></h3><ul><li><strong>响应报文</strong>：服务器处理请求后返回响应报文，包含状态码、响应头和 HTML 内容（或其他资源，如 CSS、JS、图片等）。</li></ul><h3 id="_2-2-资源请求" tabindex="-1"><a class="header-anchor" href="#_2-2-资源请求"><span>2.2 资源请求</span></a></h3><ul><li><strong>解析 HTML 后继续请求</strong>：浏览器在解析 HTML 时，发现内部引用的外部资源（如 CSS、JS、图片、字体等），会发起相应的 HTTP 请求加载这些资源。</li></ul><hr><h1 id="浏览器的加载与渲染流程" tabindex="-1"><a class="header-anchor" href="#浏览器的加载与渲染流程"><span>浏览器的加载与渲染流程</span></a></h1><h2 id="_1-html解析与-dom-构建" tabindex="-1"><a class="header-anchor" href="#_1-html解析与-dom-构建"><span>1. HTML解析与 DOM 构建</span></a></h2><ul><li><strong>HTML解析</strong>：浏览器从服务器获得 HTML 内容后，从上至下、逐行解析 HTML，构建 DOM（Document Object Model）树。</li><li><strong>阻塞性</strong>：HTML 的解析过程会阻塞页面的渲染。</li></ul><h2 id="_2-css解析与-cssom-构建" tabindex="-1"><a class="header-anchor" href="#_2-css解析与-cssom-构建"><span>2. CSS解析与 CSSOM 构建</span></a></h2><ul><li><strong>CSS解析</strong>：当浏览器遇到 <code>&lt;link&gt;</code> 或 <code>&lt;style&gt;</code> 标签时，会解析 CSS，构建 CSSOM（CSS Object Model）树。</li><li><strong>影响渲染</strong>：CSSOM 与 DOM 树一起构成渲染树（Render Tree），决定页面的最终样式。</li><li><code>CSS 放在 &lt;head&gt; 中：将 CSS 文件放在 &lt;head&gt; 部分，确保在页面内容加载前完成样式的加载和解析，避免页面在无样式或样式突变的情况下呈现。</code></li></ul><h2 id="_3-javascript-解析与执行" tabindex="-1"><a class="header-anchor" href="#_3-javascript-解析与执行"><span>3. JavaScript 解析与执行</span></a></h2><ul><li><strong>阻塞问题</strong>：传统的 <code>&lt;script&gt;</code> 标签（不带 <code>async</code> 或 <code>defer</code>）会阻塞 HTML 解析，直到脚本加载并执行完毕。</li><li><strong>优化方案</strong>：为减少阻塞，可使用 <code>async</code>（脚本异步加载，执行时不阻塞）或 <code>defer</code>（脚本延迟执行，等 HTML 全部解析完成后再执行）。</li><li><code>JavaScript 放在 &lt;body&gt; 底部：将 &lt;script&gt; 标签放在 &lt;body&gt; 底部，确保在页面内容和样式加载完成后再加载和执行脚本，避免阻塞页面的解析和渲染。</code><br> 你提供的内容主要是关于如何<strong>优化 <code>&lt;script&gt;</code> 标签的加载顺序和方式</strong>，以<strong>提升页面的首屏渲染速度和用户体验</strong>。以下是对这段内容的提炼总结和深入解释：</li></ul><hr><h3 id="✅-为什么要优化-script-加载" tabindex="-1"><a class="header-anchor" href="#✅-为什么要优化-script-加载"><span>✅ 为什么要优化 <code>&lt;script&gt;</code> 加载？</span></a></h3><p>当浏览器解析 HTML 时，遇到 <code>&lt;script&gt;</code> 标签，会：</p><ol><li><strong>暂停 HTML 的解析</strong>。</li><li><strong>发起 JS 文件的网络请求</strong>。</li><li>等待加载完成后，<strong>切换至 JavaScript 引擎执行 JS</strong>。</li><li>执行完 JS 后再切回渲染引擎继续解析 HTML。</li></ol><p>因此，<strong>加载和执行 JS 会阻塞页面渲染</strong>，影响首屏速度。</p><hr><h3 id="✅-三种优化方式" tabindex="-1"><a class="header-anchor" href="#✅-三种优化方式"><span>✅ 三种优化方式</span></a></h3><h3 id="_1-async-属性" tabindex="-1"><a class="header-anchor" href="#_1-async-属性"><span>1. <code>async</code> 属性</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>加载行为</strong>：异步请求，不阻塞 HTML 解析。</li><li><strong>执行时机</strong>：一旦加载完成，立即中断 HTML 解析去执行。</li><li><strong>适合场景</strong>：<strong>无依赖关系的脚本</strong>（如统计代码、广告等）。</li></ul><blockquote><p>⚠️ 多个 async 脚本 <strong>执行顺序不可控</strong>（谁先加载完谁先执行）。</p></blockquote><hr><h3 id="_2-defer-属性" tabindex="-1"><a class="header-anchor" href="#_2-defer-属性"><span>2. <code>defer</code> 属性</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> defer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>加载行为</strong>：异步请求，不阻塞 HTML 解析。</li><li><strong>执行时机</strong>：<strong>HTML 全部解析完后统一执行</strong>，按声明顺序执行。</li><li><strong>适合场景</strong>：<strong>主业务脚本</strong>（尤其是依赖 DOM 的 JS）。</li></ul><blockquote><p>✅ 推荐默认使用 <code>defer</code>，尤其是多个脚本间有依赖时。</p></blockquote><hr><h3 id="_3-type-module" tabindex="-1"><a class="header-anchor" href="#_3-type-module"><span>3. <code>type=&quot;module&quot;</code></span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;module&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>加载行为</strong>：类比 <code>defer</code>，异步加载、延迟执行。</li><li><strong>模块特性</strong>：支持 <code>import</code>/<code>export</code>，自动使用严格模式。</li><li><strong>适合场景</strong>：<strong>使用 ES6 模块化语法的脚本</strong>。</li></ul><blockquote><p>⚠️ 不可与 <code>nomodule</code> 的旧浏览器兼容写法混用。</p></blockquote><hr><h2 id="✅-补充-为何-script-放在-body-前" tabindex="-1"><a class="header-anchor" href="#✅-补充-为何-script-放在-body-前"><span>✅ 补充：为何 <code>&lt;script&gt;</code> 放在 <code>&lt;/body&gt;</code> 前？</span></a></h2><ul><li><p>在早期没有 <code>async</code>/<code>defer</code> 时，脚本会阻塞页面解析。</p></li><li><p>所以构建工具默认把 <code>&lt;script&gt;</code> 标签放在 HTML 底部：</p><ul><li>保证 HTML 优先渲染，避免“白屏”。</li><li>等 DOM 基本加载完，再执行 JS 脚本更安全。</li></ul></li></ul><hr><h2 id="✅-小结表格对比" tabindex="-1"><a class="header-anchor" href="#✅-小结表格对比"><span>✅ 小结表格对比</span></a></h2><table><thead><tr><th>属性 / 特性</th><th>是否异步加载</th><th>是否阻塞解析</th><th>执行时机</th><th>执行顺序</th><th>推荐用途</th></tr></thead><tbody><tr><td>默认（无属性）</td><td>否</td><td>✅ 是</td><td>加载完立即执行</td><td>按出现顺序</td><td>最不推荐</td></tr><tr><td><code>async</code></td><td>✅ 是</td><td>❌ 否</td><td>加载完立即执行</td><td>不确定</td><td>独立脚本</td></tr><tr><td><code>defer</code></td><td>✅ 是</td><td>❌ 否</td><td>HTML 解析完后执行</td><td>✅ 有序</td><td>主业务逻辑</td></tr><tr><td><code>type=&quot;module&quot;</code></td><td>✅ 是</td><td>❌ 否（类似 defer）</td><td>HTML 解析完后执行</td><td>✅ 有序</td><td>模块化脚本</td></tr></tbody></table><hr><h2 id="_4-构建渲染树、布局与绘制" tabindex="-1"><a class="header-anchor" href="#_4-构建渲染树、布局与绘制"><span>4. 构建渲染树、布局与绘制</span></a></h2><ul><li><strong>渲染树构建</strong>：将 DOM 树和 CSSOM 树结合，生成渲染树，其中每个节点都是需要呈现的对象，并计算它们的样式和位置。</li><li><strong>Layout（回流）</strong>：浏览器根据渲染树计算每个节点的几何属性（位置和尺寸）。</li><li><strong>Painting（绘制）</strong>：根据渲染树的内容，将各个节点绘制到屏幕上。</li></ul><h2 id="_5-合成与显示" tabindex="-1"><a class="header-anchor" href="#_5-合成与显示"><span>5. 合成与显示</span></a></h2><ul><li><strong>合成层</strong>：浏览器会将页面分成多个图层，进行合成处理（尤其在启用硬件加速时），最后显示在屏幕上。</li></ul><hr><h1 id="前端需要注意的加载顺序及优化策略" tabindex="-1"><a class="header-anchor" href="#前端需要注意的加载顺序及优化策略"><span>前端需要注意的加载顺序及优化策略</span></a></h1><h2 id="_1-资源加载顺序的注意点" tabindex="-1"><a class="header-anchor" href="#_1-资源加载顺序的注意点"><span>1. 资源加载顺序的注意点</span></a></h2><ul><li><strong>优先加载关键资源</strong>：确保影响页面首屏渲染的 CSS 和 JavaScript 优先加载；将不影响首屏的资源延迟加载或异步加载。</li><li><strong>减少阻塞</strong>：使用 <code>async</code> 或 <code>defer</code> 加载脚本，避免阻塞 HTML 解析。对于非关键 JS，可考虑放在页面底部。</li><li><strong>利用缓存</strong>：合理设置 HTTP 缓存头部（如 ETag、Cache-Control 等），减少不必要的网络请求。</li><li><strong>合并与压缩</strong>：将多个 CSS、JS 文件合并为一个文件，并使用工具压缩代码，减少请求次数和文件体积。</li></ul><h2 id="_2-优化加载性能的策略" tabindex="-1"><a class="header-anchor" href="#_2-优化加载性能的策略"><span>2. 优化加载性能的策略</span></a></h2><h3 id="_2-1-使用-cdn-加速资源加载" tabindex="-1"><a class="header-anchor" href="#_2-1-使用-cdn-加速资源加载"><span>2.1 使用 CDN 加速资源加载</span></a></h3><ul><li><strong>静态资源托管</strong>：将常用的库（如 jQuery、React、Vue 等）部署在 CDN 上，利用地理位置优势加快加载速度。</li></ul><h3 id="_2-2-资源预加载与预取" tabindex="-1"><a class="header-anchor" href="#_2-2-资源预加载与预取"><span>2.2 资源预加载与预取</span></a></h3><ul><li><p><strong>预加载（preload）</strong>：使用 <code>&lt;link rel=&quot;preload&quot;&gt;</code> 告诉浏览器优先加载关键资源。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preload&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;styles.css&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;style&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>预取（prefetch）</strong>：对于将来可能需要的资源，使用 <code>&lt;link rel=&quot;prefetch&quot;&gt;</code>，在空闲时间加载。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;next-page.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h2 id="✅-link-标签资源预处理优化总结" tabindex="-1"><a class="header-anchor" href="#✅-link-标签资源预处理优化总结"><span>✅ <code>&lt;link&gt;</code> 标签资源预处理优化总结</span></a></h2><table><thead><tr><th>rel 值</th><th>作用</th><th>使用场景</th><th>特点</th></tr></thead><tbody><tr><td><code>dns-prefetch</code></td><td>DNS 预解析</td><td>引用外部资源，如 CDN、API 域名等</td><td>提前将域名解析为 IP，减少延迟</td></tr><tr><td><code>preconnect</code></td><td>提前建立连接</td><td>使用第三方服务（如字体、图片）前</td><td>提前完成 DNS、TCP、TLS，减少延迟</td></tr><tr><td><code>prefetch</code></td><td>空闲时预下载资源</td><td>未来页面使用的资源（低优先级）</td><td>浏览器空闲时下载，可能被忽略</td></tr><tr><td><code>preload</code></td><td>明确指示预加载资源</td><td>当前页面即将使用的关键资源</td><td>高优先级、开发者控制资源类型</td></tr><tr><td><code>prerender</code></td><td>预加载并渲染页面</td><td>用户极有可能跳转的下一页面</td><td>会真正渲染页面，资源消耗大</td></tr></tbody></table><hr><h2 id="_1-dns-prefetch-–-dns-预解析" tabindex="-1"><a class="header-anchor" href="#_1-dns-prefetch-–-dns-预解析"><span>1. <code>dns-prefetch</code> – DNS 预解析</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;dns-prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;//cdn.example.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>提前解析域名，减少 DNS 查询时间。</li><li>适合第三方域名（如图片、字体、CDN 脚本等）。</li></ul><hr><h2 id="_2-preconnect-–-提前建立连接-dns-tcp-tls" tabindex="-1"><a class="header-anchor" href="#_2-preconnect-–-提前建立连接-dns-tcp-tls"><span>2. <code>preconnect</code> – 提前建立连接（DNS + TCP + TLS）</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preconnect&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://api.example.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><strong>比 <code>dns-prefetch</code> 更进一步</strong>，建立整个连接。</p></li><li><p>推荐同时加上 <code>crossorigin</code>：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preconnect&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://cdn.example.com&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> crossorigin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h2 id="_3-prefetch-–-预获取资源-用于未来可能使用的资源" tabindex="-1"><a class="header-anchor" href="#_3-prefetch-–-预获取资源-用于未来可能使用的资源"><span>3. <code>prefetch</code> – 预获取资源（用于<strong>未来</strong>可能使用的资源）</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/next-page.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;script&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>资源在<strong>浏览器空闲时</strong>加载，用于<strong>下一页面或未来操作</strong>。</li><li>优先级低，可能被浏览器忽略。</li></ul><hr><h2 id="_4-preload-–-预加载资源-用于当前页面即将使用的资源" tabindex="-1"><a class="header-anchor" href="#_4-preload-–-预加载资源-用于当前页面即将使用的资源"><span>4. <code>preload</code> – 预加载资源（用于<strong>当前页面即将使用</strong>的资源）</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preload&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/main-font.woff2&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;font&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;font/woff2&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> crossorigin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>明确告诉浏览器这是个“重要资源”，强制优先加载。</li><li>可指定资源类型：<code>script</code>、<code>style</code>、<code>font</code>、<code>image</code>、<code>fetch</code> 等。</li><li>注意要正确设置 <code>as</code> 属性。</li></ul><hr><h2 id="_5-prerender-–-预渲染整个页面" tabindex="-1"><a class="header-anchor" href="#_5-prerender-–-预渲染整个页面"><span>5. <code>prerender</code> – 预渲染整个页面</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prerender&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/next-page.html&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>会下载并执行该页面的 HTML、JS、CSS 等资源</strong>。</li><li>页面被提前渲染，用户跳转时“秒开”。</li><li>缺点：资源消耗大，可能浪费带宽。</li></ul><hr><h2 id="✅-选择建议" tabindex="-1"><a class="header-anchor" href="#✅-选择建议"><span>✅ 选择建议</span></a></h2><table><thead><tr><th>目的</th><th>使用方法</th></tr></thead><tbody><tr><td>提前解析域名</td><td><code>&lt;link rel=&quot;dns-prefetch&quot;&gt;</code></td></tr><tr><td>提前建立连接</td><td><code>&lt;link rel=&quot;preconnect&quot;&gt;</code></td></tr><tr><td>当前页面用到的资源</td><td><code>&lt;link rel=&quot;preload&quot;&gt;</code></td></tr><tr><td>未来页面或操作的资源</td><td><code>&lt;link rel=&quot;prefetch&quot;&gt;</code></td></tr><tr><td>用户很可能跳转的页面</td><td><code>&lt;link rel=&quot;prerender&quot;&gt;</code></td></tr></tbody></table><hr><h2 id="✍️-示例组合" tabindex="-1"><a class="header-anchor" href="#✍️-示例组合"><span>✍️ 示例组合</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 提前处理 CDN 域名 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;dns-prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;//cdn.example.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preconnect&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://cdn.example.com&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> crossorigin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 加载关键字体 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preload&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/fonts/main.woff2&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;font&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;font/woff2&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> crossorigin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 未来使用的 JS --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/next-page.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;script&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 预渲染下一页 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prerender&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/dashboard.html&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-3-懒加载-lazy-loading" tabindex="-1"><a class="header-anchor" href="#_2-3-懒加载-lazy-loading"><span>2.3 懒加载（Lazy Loading）</span></a></h3><ul><li><p><strong>图片和非关键资源</strong>：利用懒加载技术，仅在用户滚动到相应位置时加载图片或其他资源。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;placeholder.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;real-image.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lazy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 JavaScript 监听滚动事件来加载真正的图片。</p></li></ul><h3 id="_2-4-服务端渲染与代码分割" tabindex="-1"><a class="header-anchor" href="#_2-4-服务端渲染与代码分割"><span>2.4 服务端渲染与代码分割</span></a></h3><ul><li><strong>服务端渲染（SSR）</strong>：减少前端渲染时间，提升首屏加载速度。</li><li><strong>代码分割</strong>：使用 Webpack 或 Vite 的代码分割功能，将应用拆分成多个小模块，按需加载，减少首屏下载量。</li></ul><hr><h1 id="实际应用示例" tabindex="-1"><a class="header-anchor" href="#实际应用示例"><span>实际应用示例</span></a></h1><h3 id="示例-1-使用-async-和-defer-优化脚本加载" tabindex="-1"><a class="header-anchor" href="#示例-1-使用-async-和-defer-优化脚本加载"><span>示例 1：使用 <code>async</code> 和 <code>defer</code> 优化脚本加载</span></a></h3><ul><li><p>defer 属性：脚本会在 HTML 解析完成后执行，多个带 defer 的脚本会按照顺序执行。</p></li><li><p>async 属性：脚本会异步加载并立即执行，多个带 async 的脚本执行顺序不确定。</p></li></ul><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DOCTYPE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;加载优化示例&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- 关键 CSS 优先加载 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stylesheet&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;styles.css&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- 预加载关键 JS（如果需要） --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preload&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;critical.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;script&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;欢迎访问优化示例页面&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- 非关键脚本，使用 defer 延迟执行 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;non-critical.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> defer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- 异步加载的脚本 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;analytics.js&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-2-使用懒加载图片" tabindex="-1"><a class="header-anchor" href="#示例-2-使用懒加载图片"><span>示例 2：使用懒加载图片</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DOCTYPE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;懒加载示例&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      background: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">f0f0f0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;图片懒加载示例&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;real-image1.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lazy&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Image 1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;real-image2.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lazy&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Image 2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DOMContentLoaded&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> lazyImages</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelectorAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;img.lazy&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> observer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> IntersectionObserver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">observer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        entries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entry</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">isIntersecting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> img</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;data-src&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">classList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;lazy&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            observer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unobserve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      lazyImages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">img</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> observer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">observe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h1><p>从浏览器地址栏输入网址到页面渲染完成，经历了 URL 解析、DNS 查询、TCP/TLS 握手、HTTP 请求与响应、HTML/CSS/JS 的加载和解析，再到渲染树构建、布局与绘制等一系列过程。前端开发者应注意：</p><ul><li>合理安排资源加载顺序，确保首屏关键资源优先加载；</li><li>避免阻塞性加载（使用 async、defer）；</li><li>利用缓存、CDN、预加载/预取、懒加载等技术提升页面加载速度；</li><li>使用服务端渲染、代码分割等现代技术进一步优化用户体验。</li></ul><p>通过这些优化策略，不仅能提升页面加载性能，也能改善用户体验和 SEO 效果</p><h2 id="📌重绘-repaint-和重排-reflow" tabindex="-1"><a class="header-anchor" href="#📌重绘-repaint-和重排-reflow"><span>📌<strong>重绘（Repaint）<strong>和</strong>重排（Reflow</strong></span></a></h2><p>在前端开发中，**重绘（Repaint）<strong>和</strong>重排（Reflow）**是浏览器渲染机制中的两个重要概念。理解它们有助于优化页面性能，提升用户体验。</p><p><strong>重绘（Repaint）</strong></p><p>当元素的外观样式（如颜色、背景等）发生变化，但不影响布局时，浏览器会重新绘制该元素，这个过程称为重绘。重绘仅涉及元素的外观更新，不会引发布局的重新计算。</p><p><strong>触发重绘的常见操作：</strong></p><ul><li>更改元素的颜色、背景色、边框颜色等样式属性。</li><li>修改元素的可见性（如 <code>visibility</code> 属性）。</li></ul><p><strong>重排（Reflow）</strong></p><p>当页面的布局结构发生变化，导致元素的几何属性（如尺寸、位置）需要重新计算时，浏览器会进行重排。重排会触发重新计算元素的布局，并可能导致整个页面或部分页面的重新渲染。</p><p><strong>触发重排的常见操作：</strong></p><ul><li>添加或删除可见的 DOM 元素。</li><li>更改元素的尺寸（宽度、高度、内外边距、边框等）。</li><li>修改元素的定位方式（如 <code>position</code>、<code>top</code>、<code>left</code> 等）。</li><li>更改浏览器窗口的尺寸（触发 <code>resize</code> 事件）。</li><li>读取布局信息（如 <code>offsetWidth</code>、<code>clientHeight</code> 等），浏览器为确保数据准确性，会先进行重排。</li></ul><p><strong>重绘与重排的关系</strong></p><p>重排一定会导致重绘，因为布局的变化需要重新绘制元素；但重绘不一定会引发重排，因为外观的变化可能不涉及布局的调整。</p><p><strong>性能影响</strong></p><p>重排和重绘都会消耗浏览器的计算资源，频繁的重排尤其影响性能，可能导致页面渲染卡顿。因此，在开发中应尽量减少不必要的重排和重绘操作。</p><p><strong>优化建议</strong></p><ul><li>避免频繁地对样式进行修改，尤其是会导致重排的属性。</li><li>对 DOM 进行批量操作，减少对页面布局的多次影响。</li><li>使用文档片段（<code>DocumentFragment</code>）或虚拟 DOM 技术，减少直接对真实 DOM 的操作次数。</li><li>避免在布局信息读取和写入之间交替进行操作，尽量将读取和写入分开，以减少重复的重排。</li></ul><p>通过理解并优化重绘和重排，可以有效提升页面的渲染性能，提供更流畅的用户体验。</p>`,130)]))}const d=s(n,[["render",h]]),r=JSON.parse('{"path":"/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5Url.html","title":"浏览器输入URL后发生了什么？","lang":"zh-CN","frontmatter":{"title":"浏览器输入URL后发生了什么？","date":"2019-05-19T00:00:00.000Z","tags":["CSS"],"description":"下面是一篇较为完整的文档，详细阐述了从浏览器地址栏输入网址后发生的过程、加载顺序、前端需要注意的地方以及如何优化加载性能。 浏览器地址栏输入网址后发生了什么 当用户在浏览器地址栏输入一个网址并回车后，浏览器会经过一系列步骤来加载和展示页面，主要流程大致如下： 1. URL解析与网络请求 1.1 URL解析 解析协议、域名和路径：浏览器首先会解析用户输入...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zy-vuepress/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5Url.html"}],["meta",{"property":"og:site_name","content":"我的基地"}],["meta",{"property":"og:title","content":"浏览器输入URL后发生了什么？"}],["meta",{"property":"og:description","content":"下面是一篇较为完整的文档，详细阐述了从浏览器地址栏输入网址后发生的过程、加载顺序、前端需要注意的地方以及如何优化加载性能。 浏览器地址栏输入网址后发生了什么 当用户在浏览器地址栏输入一个网址并回车后，浏览器会经过一系列步骤来加载和展示页面，主要流程大致如下： 1. URL解析与网络请求 1.1 URL解析 解析协议、域名和路径：浏览器首先会解析用户输入..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-21T08:09:38.000Z"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:published_time","content":"2019-05-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-21T08:09:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器输入URL后发生了什么？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-21T08:09:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mrs.Zoe\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. URL解析与网络请求","slug":"_1-url解析与网络请求","link":"#_1-url解析与网络请求","children":[{"level":3,"title":"1.1 URL解析","slug":"_1-1-url解析","link":"#_1-1-url解析","children":[]},{"level":3,"title":"1.2 DNS解析","slug":"_1-2-dns解析","link":"#_1-2-dns解析","children":[]},{"level":3,"title":"1.3 建立网络连接","slug":"_1-3-建立网络连接","link":"#_1-3-建立网络连接","children":[]},{"level":3,"title":"1.4 发送 HTTP 请求","slug":"_1-4-发送-http-请求","link":"#_1-4-发送-http-请求","children":[]}]},{"level":2,"title":"2. 服务器响应与资源加载","slug":"_2-服务器响应与资源加载","link":"#_2-服务器响应与资源加载","children":[{"level":3,"title":"2.1 服务器响应","slug":"_2-1-服务器响应","link":"#_2-1-服务器响应","children":[]},{"level":3,"title":"2.2 资源请求","slug":"_2-2-资源请求","link":"#_2-2-资源请求","children":[]}]},{"level":2,"title":"1. HTML解析与 DOM 构建","slug":"_1-html解析与-dom-构建","link":"#_1-html解析与-dom-构建","children":[]},{"level":2,"title":"2. CSS解析与 CSSOM 构建","slug":"_2-css解析与-cssom-构建","link":"#_2-css解析与-cssom-构建","children":[]},{"level":2,"title":"3. JavaScript 解析与执行","slug":"_3-javascript-解析与执行","link":"#_3-javascript-解析与执行","children":[{"level":3,"title":"✅ 为什么要优化 <script> 加载？","slug":"✅-为什么要优化-script-加载","link":"#✅-为什么要优化-script-加载","children":[]},{"level":3,"title":"✅ 三种优化方式","slug":"✅-三种优化方式","link":"#✅-三种优化方式","children":[]},{"level":3,"title":"1. async 属性","slug":"_1-async-属性","link":"#_1-async-属性","children":[]},{"level":3,"title":"2. defer 属性","slug":"_2-defer-属性","link":"#_2-defer-属性","children":[]},{"level":3,"title":"3. type=\\"module\\"","slug":"_3-type-module","link":"#_3-type-module","children":[]}]},{"level":2,"title":"✅ 补充：为何 <script> 放在 </body> 前？","slug":"✅-补充-为何-script-放在-body-前","link":"#✅-补充-为何-script-放在-body-前","children":[]},{"level":2,"title":"✅ 小结表格对比","slug":"✅-小结表格对比","link":"#✅-小结表格对比","children":[]},{"level":2,"title":"4. 构建渲染树、布局与绘制","slug":"_4-构建渲染树、布局与绘制","link":"#_4-构建渲染树、布局与绘制","children":[]},{"level":2,"title":"5. 合成与显示","slug":"_5-合成与显示","link":"#_5-合成与显示","children":[]},{"level":2,"title":"1. 资源加载顺序的注意点","slug":"_1-资源加载顺序的注意点","link":"#_1-资源加载顺序的注意点","children":[]},{"level":2,"title":"2. 优化加载性能的策略","slug":"_2-优化加载性能的策略","link":"#_2-优化加载性能的策略","children":[{"level":3,"title":"2.1 使用 CDN 加速资源加载","slug":"_2-1-使用-cdn-加速资源加载","link":"#_2-1-使用-cdn-加速资源加载","children":[]},{"level":3,"title":"2.2 资源预加载与预取","slug":"_2-2-资源预加载与预取","link":"#_2-2-资源预加载与预取","children":[]}]},{"level":2,"title":"✅ <link> 标签资源预处理优化总结","slug":"✅-link-标签资源预处理优化总结","link":"#✅-link-标签资源预处理优化总结","children":[]},{"level":2,"title":"1. dns-prefetch – DNS 预解析","slug":"_1-dns-prefetch-–-dns-预解析","link":"#_1-dns-prefetch-–-dns-预解析","children":[]},{"level":2,"title":"2. preconnect – 提前建立连接（DNS + TCP + TLS）","slug":"_2-preconnect-–-提前建立连接-dns-tcp-tls","link":"#_2-preconnect-–-提前建立连接-dns-tcp-tls","children":[]},{"level":2,"title":"3. prefetch – 预获取资源（用于未来可能使用的资源）","slug":"_3-prefetch-–-预获取资源-用于未来可能使用的资源","link":"#_3-prefetch-–-预获取资源-用于未来可能使用的资源","children":[]},{"level":2,"title":"4. preload – 预加载资源（用于当前页面即将使用的资源）","slug":"_4-preload-–-预加载资源-用于当前页面即将使用的资源","link":"#_4-preload-–-预加载资源-用于当前页面即将使用的资源","children":[]},{"level":2,"title":"5. prerender – 预渲染整个页面","slug":"_5-prerender-–-预渲染整个页面","link":"#_5-prerender-–-预渲染整个页面","children":[]},{"level":2,"title":"✅ 选择建议","slug":"✅-选择建议","link":"#✅-选择建议","children":[]},{"level":2,"title":"✍️ 示例组合","slug":"✍️-示例组合","link":"#✍️-示例组合","children":[{"level":3,"title":"2.3 懒加载（Lazy Loading）","slug":"_2-3-懒加载-lazy-loading","link":"#_2-3-懒加载-lazy-loading","children":[]},{"level":3,"title":"2.4 服务端渲染与代码分割","slug":"_2-4-服务端渲染与代码分割","link":"#_2-4-服务端渲染与代码分割","children":[]},{"level":3,"title":"示例 1：使用 async 和 defer 优化脚本加载","slug":"示例-1-使用-async-和-defer-优化脚本加载","link":"#示例-1-使用-async-和-defer-优化脚本加载","children":[]},{"level":3,"title":"示例 2：使用懒加载图片","slug":"示例-2-使用懒加载图片","link":"#示例-2-使用懒加载图片","children":[]}]},{"level":2,"title":"📌重绘（Repaint）和重排（Reflow","slug":"📌重绘-repaint-和重排-reflow","link":"#📌重绘-repaint-和重排-reflow","children":[]}],"git":{"createdTime":1741933402000,"updatedTime":1747814978000,"contributors":[{"name":"zy","username":"zy","email":"891374900@qq.com","commits":4,"url":"https://github.com/zy"}]},"readingTime":{"minutes":12.32,"words":3697},"filePathRelative":"posts/浏览器渲染/浏览器输入Url.md","localizedDate":"2019年5月19日","excerpt":"<p>下面是一篇较为完整的文档，详细阐述了从浏览器地址栏输入网址后发生的过程、加载顺序、前端需要注意的地方以及如何优化加载性能。</p>\\n<hr>\\n<h1>浏览器地址栏输入网址后发生了什么</h1>\\n<p>当用户在浏览器地址栏输入一个网址并回车后，浏览器会经过一系列步骤来加载和展示页面，主要流程大致如下：</p>\\n<h2>1. URL解析与网络请求</h2>\\n<h3>1.1 URL解析</h3>\\n<ul>\\n<li><strong>解析协议、域名和路径</strong>：浏览器首先会解析用户输入的 URL（例如 <code>https://www.example.com/path/page.html</code>），确定协议（HTTP/HTTPS）、域名、端口（如果未指定则使用默认端口）和路径信息。</li>\\n</ul>","autoDesc":true}');export{d as comp,r as data};
