import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as s,o as i}from"./app-D4yN_ylH.js";const r={};function n(o,e){return i(),a("div",null,e[0]||(e[0]=[s(`<hr><h2 id="_1-版本校验与-ci-测试" tabindex="-1"><a class="header-anchor" href="#_1-版本校验与-ci-测试"><span>1. 版本校验与 CI 测试</span></a></h2><h3 id="_1-1-版本校验" tabindex="-1"><a class="header-anchor" href="#_1-1-版本校验"><span>1.1 版本校验</span></a></h3><ul><li>发布前会校验 Git 工作区是否干净、目标版本号是否存在冲突，确保不会重复打相同 tag。</li><li>这一逻辑在 <code>scripts/release.ts</code> 中通过检查 <code>package.json</code> 中的 <code>version</code> 字段及 Git tag 列表实现。</li></ul><h3 id="_1-2-ci-测试" tabindex="-1"><a class="header-anchor" href="#_1-2-ci-测试"><span>1.2 CI 测试</span></a></h3><ul><li>在本地或 CI 环境中执行 <code>pnpm test</code>（或 <code>npm run test:unit</code>、<code>npm run test:e2e</code>）以确保单元测试和端到端测试全部通过。</li><li>若 CI 检测未通过，则中断发布，防止有缺陷的代码进入发行渠道 (<a href="https://juejin.cn/post/7211539869805674551?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Vue 是如何发布的- Vue 源码学习记录 - 稀土掘金</a>)。</li></ul><hr><h2 id="_2-版本更新与变更日志" tabindex="-1"><a class="header-anchor" href="#_2-版本更新与变更日志"><span>2. 版本更新与变更日志</span></a></h2><h3 id="_2-1-多包版本管理" tabindex="-1"><a class="header-anchor" href="#_2-1-多包版本管理"><span>2.1 多包版本管理</span></a></h3><ul><li>Vue 3 仓库采用 <strong>pnpm workspace</strong>（见根目录下的 <code>pnpm-workspace.yaml</code>），各子包位于 <code>packages/*</code>。</li><li>发布时，需要统一更新所有包的 <code>package.json</code> 版本号，以及核心包（如 <code>@vue/reactivity</code>、<code>@vue/runtime-core</code>）间的内部依赖版本。</li></ul><h3 id="_2-2-变更日志生成" tabindex="-1"><a class="header-anchor" href="#_2-2-变更日志生成"><span>2.2 变更日志生成</span></a></h3><ul><li>Vue 3 在根目录维护了一个 <code>changelogs/</code> 文件夹，每次发布前会基于 <code>CHANGELOG.md</code> 模板生成新版本条目。</li><li>源码中调用了 <code>scripts/release.ts</code>，自动将对应版本的变更摘要插入到 <code>CHANGELOG.md</code> 中并格式化 (<a href="https://github.com/vuejs/core/blob/main/CHANGELOG.md?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">core/CHANGELOG.md at main · vuejs/core - GitHub</a>)。</li></ul><hr><h2 id="_3-构建打包" tabindex="-1"><a class="header-anchor" href="#_3-构建打包"><span>3. 构建打包</span></a></h2><h3 id="_3-1-rollup-打包" tabindex="-1"><a class="header-anchor" href="#_3-1-rollup-打包"><span>3.1 Rollup 打包</span></a></h3><ul><li>根目录下的 <code>rollup.config.js</code> 和 <code>rollup.dts.config.js</code> 定义了多种输出格式： <ul><li><strong>ESM</strong>（<code>esm-bundler</code>、<code>esm-browser</code>）</li><li><strong>CJS</strong>（<code>cjs</code>）</li><li><strong>UMD / IIFE</strong>（用于直接 <code>&lt;script&gt;</code> 引入）</li></ul></li><li>打包同时负责生成 <code>.d.ts</code> 类型声明文件，确保 TypeScript 用户体验 (<a href="https://github.com/vuejs/vue-next" target="_blank" rel="noopener noreferrer">GitHub - vuejs/core: Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.</a>)。</li></ul><h3 id="_3-2-构建命令" tabindex="-1"><a class="header-anchor" href="#_3-2-构建命令"><span>3.2 构建命令</span></a></h3><ul><li>在根 <code>package.json</code> 中，预定义了如下脚本：<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;scripts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;build&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pnpm build:packages &amp;&amp; pnpm build:docs&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;build:packages&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rollup -c rollup.config.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;build:docs&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vitepress build docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>发布流程中会依次执行这些脚本，以生成最新的发行包与文档站点。</li></ul><hr><h2 id="_4-github-actions-与自动化" tabindex="-1"><a class="header-anchor" href="#_4-github-actions-与自动化"><span>4. GitHub Actions 与自动化</span></a></h2><h3 id="_4-1-release-workflow" tabindex="-1"><a class="header-anchor" href="#_4-1-release-workflow"><span>4.1 Release Workflow</span></a></h3><ul><li>官方仓库在 <code>.github/workflows/release.yml</code> 中配置了 <strong>Release</strong> Job，监听 <code>push</code> 到 <code>main</code> 分支或新 tag 的事件 (<a href="https://github.com/vuejs/core/actions/workflows/release.yml?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Release · Workflow runs · vuejs/core - GitHub</a>)。</li><li>该 Workflow 会： <ol><li>Checkout 代码</li><li>安装依赖并构建</li><li>运行 <code>scripts/release.ts</code> 进行版本校验、更新、打 tag</li><li>如配置 <code>NPM_TOKEN</code>，可自动执行 <code>npm publish</code></li></ol></li></ul><h3 id="_4-2-canary-beta-发布" tabindex="-1"><a class="header-anchor" href="#_4-2-canary-beta-发布"><span>4.2 Canary／Beta 发布</span></a></h3><ul><li>除了稳定版，Vue 3 每周还会从 <code>main</code> 分支发布 <strong>Canary</strong> 版本，用于早期实验和集成测试，不影响 npm 上的 <code>latest</code> 镜像 (<a href="https://vuejs.org/about/releases?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Releases - Vue.js</a>)。</li></ul><hr><h2 id="_5-versioning-工具链-changesets" tabindex="-1"><a class="header-anchor" href="#_5-versioning-工具链-changesets"><span>5. Versioning 工具链：Changesets</span></a></h2><p>虽然 Vue 官方不完全依赖 Changesets，但社区和部分辅助包已广泛采用它来管理多包版本：</p><ol><li><strong><code>@changesets/cli</code></strong>：在代码变更时生成 <code>.changeset/*.md</code> 记录变更意图</li><li><strong><code>changeset version</code></strong>：根据所有变更记录，一键批量更新 <code>package.json</code> 版本和 <code>CHANGELOG.md</code> (<a href="https://github.com/changesets/changesets?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">changesets/changesets: A way to manage your versioning ... - GitHub</a>)</li><li><strong><code>changeset publish</code></strong>：发布所有已更新的包到 npm，并打上对应 tag</li><li><strong>GitHub Action</strong>：<code>changesets/action@v1</code> 支持自动生成版本 Pull Request，Merge 触发实际发布 (<a href="https://github.com/changesets/action?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">changesets/action - GitHub</a>)</li></ol><hr><h2 id="_6-发布渠道与版本标签" tabindex="-1"><a class="header-anchor" href="#_6-发布渠道与版本标签"><span>6. 发布渠道与版本标签</span></a></h2><table><thead><tr><th>渠道</th><th>npm dist-tag</th><th>说明</th></tr></thead><tbody><tr><td>稳定版</td><td><code>latest</code></td><td>主干通过的稳定版本</td></tr><tr><td>次要预览版</td><td><code>beta</code></td><td>Minor / Major 版本的 Beta 发布</td></tr><tr><td>Canary</td><td><code>canary</code></td><td>针对 <code>main</code> 分支的周度 Canary 构建 (<a href="https://vuejs.org/about/releases?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Releases - Vue.js</a>)</td></tr></tbody></table><p>发布时 CI 会根据版本号自动选择对应的 <code>dist-tag</code>，保证用户安装时得到预期版本。</p><hr><h2 id="_7-回滚与维护" tabindex="-1"><a class="header-anchor" href="#_7-回滚与维护"><span>7. 回滚与维护</span></a></h2><ul><li>若线上发现严重缺陷，可通过 <code>git checkout vX.Y.Z</code> 进入任意历史版本，并基于该版本创建 Hotfix 分支。</li><li>对应的 Patch 发布与主流程一致，仅更新少量补丁并重新执行打包与发布步骤。</li></ul><hr><h3 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h3><ul><li>Vue 官方 Release Cycle (<a href="https://vuejs.org/about/releases?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Releases - Vue.js</a>)</li><li>稀土掘金 “Vue 是如何发布的” 主流程 (<a href="https://juejin.cn/post/7211539869805674551?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Vue 是如何发布的- Vue 源码学习记录 - 稀土掘金</a>)</li><li>Vue 3 Monorepo 结构 &amp; Rollup 配置 (<a href="https://github.com/vuejs/vue-next" target="_blank" rel="noopener noreferrer">GitHub - vuejs/core: Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.</a>)</li><li>Vue 核心 <a href="http://CHANGELOG.md" target="_blank" rel="noopener noreferrer">CHANGELOG.md</a> (<a href="https://github.com/vuejs/core/blob/main/CHANGELOG.md?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">core/CHANGELOG.md at main · vuejs/core - GitHub</a>)</li><li>Changesets 项目简介 (<a href="https://github.com/changesets/changesets?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">changesets/changesets: A way to manage your versioning ... - GitHub</a>)</li><li>Changesets GitHub Action (<a href="https://github.com/changesets/action?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">changesets/action - GitHub</a>)</li><li>Vue 官方 GitHub Release Workflow (<a href="https://github.com/vuejs/core/actions/workflows/release.yml?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Release · Workflow runs · vuejs/core - GitHub</a>)</li><li>官方文档 Canary 发布说明 (<a href="https://vuejs.org/about/releases?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Releases - Vue.js</a>)</li></ul>`,38)]))}const h=t(r,[["render",n]]),d=JSON.parse('{"path":"/posts/vue/vue3/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86%E5%8C%85%E5%8F%91%E5%B8%83..html","title":"Vue3 发布全流程","lang":"zh-CN","frontmatter":{"title":"Vue3 发布全流程","tags":["vue"],"description":"1. 版本校验与 CI 测试 1.1 版本校验 发布前会校验 Git 工作区是否干净、目标版本号是否存在冲突，确保不会重复打相同 tag。 这一逻辑在 scripts/release.ts 中通过检查 package.json 中的 version 字段及 Git tag 列表实现。 1.2 CI 测试 在本地或 CI 环境中执行 pnpm test（...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zy-vuepress/posts/vue/vue3/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86%E5%8C%85%E5%8F%91%E5%B8%83..html"}],["meta",{"property":"og:site_name","content":"我的基地"}],["meta",{"property":"og:title","content":"Vue3 发布全流程"}],["meta",{"property":"og:description","content":"1. 版本校验与 CI 测试 1.1 版本校验 发布前会校验 Git 工作区是否干净、目标版本号是否存在冲突，确保不会重复打相同 tag。 这一逻辑在 scripts/release.ts 中通过检查 package.json 中的 version 字段及 Git tag 列表实现。 1.2 CI 测试 在本地或 CI 环境中执行 pnpm test（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-20T07:48:26.000Z"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:modified_time","content":"2025-05-20T07:48:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue3 发布全流程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-20T07:48:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mrs.Zoe\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 版本校验与 CI 测试","slug":"_1-版本校验与-ci-测试","link":"#_1-版本校验与-ci-测试","children":[{"level":3,"title":"1.1 版本校验","slug":"_1-1-版本校验","link":"#_1-1-版本校验","children":[]},{"level":3,"title":"1.2 CI 测试","slug":"_1-2-ci-测试","link":"#_1-2-ci-测试","children":[]}]},{"level":2,"title":"2. 版本更新与变更日志","slug":"_2-版本更新与变更日志","link":"#_2-版本更新与变更日志","children":[{"level":3,"title":"2.1 多包版本管理","slug":"_2-1-多包版本管理","link":"#_2-1-多包版本管理","children":[]},{"level":3,"title":"2.2 变更日志生成","slug":"_2-2-变更日志生成","link":"#_2-2-变更日志生成","children":[]}]},{"level":2,"title":"3. 构建打包","slug":"_3-构建打包","link":"#_3-构建打包","children":[{"level":3,"title":"3.1 Rollup 打包","slug":"_3-1-rollup-打包","link":"#_3-1-rollup-打包","children":[]},{"level":3,"title":"3.2 构建命令","slug":"_3-2-构建命令","link":"#_3-2-构建命令","children":[]}]},{"level":2,"title":"4. GitHub Actions 与自动化","slug":"_4-github-actions-与自动化","link":"#_4-github-actions-与自动化","children":[{"level":3,"title":"4.1 Release Workflow","slug":"_4-1-release-workflow","link":"#_4-1-release-workflow","children":[]},{"level":3,"title":"4.2 Canary／Beta 发布","slug":"_4-2-canary-beta-发布","link":"#_4-2-canary-beta-发布","children":[]}]},{"level":2,"title":"5. Versioning 工具链：Changesets","slug":"_5-versioning-工具链-changesets","link":"#_5-versioning-工具链-changesets","children":[]},{"level":2,"title":"6. 发布渠道与版本标签","slug":"_6-发布渠道与版本标签","link":"#_6-发布渠道与版本标签","children":[]},{"level":2,"title":"7. 回滚与维护","slug":"_7-回滚与维护","link":"#_7-回滚与维护","children":[{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}]}],"git":{"createdTime":1745897858000,"updatedTime":1747727306000,"contributors":[{"name":"zy","username":"zy","email":"891374900@qq.com","commits":2,"url":"https://github.com/zy"},{"name":"zouyu","username":"zouyu","email":"891374900@qq.com","commits":1,"url":"https://github.com/zouyu"}]},"readingTime":{"minutes":3.53,"words":1060},"filePathRelative":"posts/vue/vue3/自动化管理包发布..md","localizedDate":"2025年4月29日","excerpt":"<hr>\\n<h2>1. 版本校验与 CI 测试</h2>\\n<h3>1.1 版本校验</h3>\\n<ul>\\n<li>发布前会校验 Git 工作区是否干净、目标版本号是否存在冲突，确保不会重复打相同 tag。</li>\\n<li>这一逻辑在 <code>scripts/release.ts</code> 中通过检查 <code>package.json</code> 中的 <code>version</code> 字段及 Git tag 列表实现。</li>\\n</ul>\\n<h3>1.2 CI 测试</h3>\\n<ul>\\n<li>在本地或 CI 环境中执行 <code>pnpm test</code>（或 <code>npm run test:unit</code>、<code>npm run test:e2e</code>）以确保单元测试和端到端测试全部通过。</li>\\n<li>若 CI 检测未通过，则中断发布，防止有缺陷的代码进入发行渠道  (<a href=\\"https://juejin.cn/post/7211539869805674551?utm_source=chatgpt.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Vue 是如何发布的- Vue 源码学习记录 - 稀土掘金</a>)。</li>\\n</ul>","autoDesc":true}');export{h as comp,d as data};
