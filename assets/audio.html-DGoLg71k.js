import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as l}from"./app-D4yN_ylH.js";const n={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[e(`<h2 id="web-端音频播放的问题howler-js" tabindex="-1"><a class="header-anchor" href="#web-端音频播放的问题howler-js"><span>web 端音频播放的问题<strong>Howler.js</strong></span></a></h2><ol><li>iphone 低端设备 同时播放音频 重音</li><li>iphone 低端设备 连续播放按键音 播放不出来<br><strong>Howler.js</strong> 解决了 Web 端音频播放的多个兼容性问题，主要体现在 <strong>跨浏览器支持、移动端适配、Web Audio API 兼容性</strong> 等方面。以下是 Howler.js 处理的一些核心兼容性问题：</li></ol><hr><h2 id="_1-跨浏览器音频格式兼容" tabindex="-1"><a class="header-anchor" href="#_1-跨浏览器音频格式兼容"><span><strong>1. 跨浏览器音频格式兼容</strong></span></a></h2><p>不同浏览器支持的音频格式不同，比如：</p><ul><li><strong>Chrome、Firefox</strong> 支持 <strong>OGG、MP3、WAV、WebM</strong></li><li><strong>Safari</strong> 仅支持 <strong>MP3、AAC、WAV</strong></li><li><strong>IE/Edge</strong> 主要支持 <strong>MP3、AAC、WAV</strong></li></ul><h3 id="howler-js-解决方案" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li><strong>自动选择最佳音频格式</strong>，开发者只需提供多个格式的音频文件：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sound</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Howl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  src</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;audio.mp3&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;audio.ogg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;audio.wav&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 按浏览器支持情况自动选择</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>确保音频能在所有现代浏览器播放</strong>，避免格式兼容问题。</li></ul><hr><h2 id="_2-web-audio-api-与-audio-兼容" tabindex="-1"><a class="header-anchor" href="#_2-web-audio-api-与-audio-兼容"><span><strong>2. Web Audio API 与 <code>&lt;audio&gt;</code> 兼容</strong></span></a></h2><ul><li><strong>Web Audio API</strong> 提供更高质量的音频控制（音量、滤波器、3D 音效等）。</li><li>但 <strong>部分老浏览器（IE 11 及以下）或低版本 Safari 不支持 Web Audio API</strong>，只能用 <code>&lt;audio&gt;</code> 播放。</li></ul><h3 id="howler-js-解决方案-1" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案-1"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li><strong>自动检测</strong>浏览器是否支持 Web Audio API，优先使用 Web Audio API，否则回退到 <code>&lt;audio&gt;</code>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Howler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usingWebAudio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// true: 使用 Web Audio API, false: 退回 &lt;audio&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>无需手动处理 API 差异</strong>，Howler.js 自动兼容。</li></ul><hr><h2 id="_3-解决移动端-play-受阻问题" tabindex="-1"><a class="header-anchor" href="#_3-解决移动端-play-受阻问题"><span><strong>3. 解决移动端 <code>play()</code> 受阻问题</strong></span></a></h2><ul><li><strong>iOS Safari &amp; Chrome for Android</strong> 要求<strong>用户交互后才能播放音频</strong>，否则 <code>play()</code> 调用会被阻止。</li><li>这会导致<strong>自动播放失败</strong>，出现 <code>Uncaught (in promise) DOMException</code> 错误。</li></ul><h3 id="howler-js-解决方案-2" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案-2"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li>提供 <code>Howler.autoUnlock</code> 机制，在 <strong>用户交互（点击/触摸）后自动解锁音频</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Howler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">autoUnlock</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Howler.js 会在用户交互后自动解锁音频</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>解决自动播放失败</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;click&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  sound</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 触摸屏幕后才会播放</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>内部处理 <code>resumeAudioContext()</code></strong>，确保音频在移动端能正常播放。</li></ul><hr><h2 id="_4-ios-safari-不能同时播放多个音频" tabindex="-1"><a class="header-anchor" href="#_4-ios-safari-不能同时播放多个音频"><span><strong>4. iOS Safari 不能同时播放多个音频</strong></span></a></h2><ul><li><strong>iOS 设备默认只允许一个音频实例播放</strong>（即使 <code>muted</code>）。</li><li>在 Safari 上，如果播放新音频，旧音频会被自动暂停。</li></ul><h3 id="howler-js-解决方案-3" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案-3"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li>通过 <strong>Web Audio API 处理多个音频流</strong>，绕过 Safari 限制：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Howler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usingWebAudio</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 强制启用 Web Audio API</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>让多个音频同时播放</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sound1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Howl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;sound1.mp3&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sound2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Howl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;sound2.mp3&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sound1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sound2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 在 Safari 上也不会导致 sound1 停止</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h2 id="_5-低版本浏览器的-audiocontext-兼容" tabindex="-1"><a class="header-anchor" href="#_5-低版本浏览器的-audiocontext-兼容"><span><strong>5. 低版本浏览器的 <code>AudioContext</code> 兼容</strong></span></a></h2><ul><li>旧版 <strong>Chrome（&lt; 66）和 Safari</strong> 的 <code>AudioContext</code> 必须在 <strong>用户交互后</strong> 创建，否则会报错：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>The AudioContext was not allowed to start. It must be created or resumed after a user gesture.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="howler-js-解决方案-4" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案-4"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li><strong>自动检测 <code>AudioContext</code> 是否需要解锁</strong>，如果被锁定，会在 <strong>用户操作后</strong> 重新启用：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Howler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">autoUnlock</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>避免手动 hack <code>AudioContext.resume()</code></strong>。</li></ul><hr><h2 id="_6-解决-android-webview-无法播放音频问题" tabindex="-1"><a class="header-anchor" href="#_6-解决-android-webview-无法播放音频问题"><span><strong>6. 解决 Android WebView 无法播放音频问题</strong></span></a></h2><ul><li>在 <strong>Android WebView（如微信内置浏览器）</strong>，某些情况下音频无法播放。</li><li>可能的原因： <ul><li><code>autoplay</code> 不被支持</li><li><code>muted</code> 的音频可能无法启动</li><li>Web Audio API 可能受到限制</li></ul></li></ul><h3 id="howler-js-解决方案-5" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案-5"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li><strong>手动触发 <code>play()</code></strong> 并监听 <code>canplaythrough</code> 事件：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sound</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">once</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;canplaythrough&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;音频可以正常播放&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  sound</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>使用 <code>muted</code> + <code>autoplay</code> 方案绕过限制</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> silentAudio</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Howl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  src</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;silent.mp3&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  autoplay</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  loop</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  volume</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">silentAudio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">once</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;end&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;静音音频已播放，可解锁音频&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  sound</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h2 id="_7-兼容音量控制-3d-音效" tabindex="-1"><a class="header-anchor" href="#_7-兼容音量控制-3d-音效"><span><strong>7. 兼容音量控制 &amp; 3D 音效</strong></span></a></h2><ul><li>部分浏览器（如 Safari）对 <code>gainNode</code>（音量控制）支持不同。</li><li>旧版浏览器不支持 <strong>3D 音效（如 <code>positionalAudio</code>）</strong>。</li></ul><h3 id="howler-js-解决方案-6" tabindex="-1"><a class="header-anchor" href="#howler-js-解决方案-6"><span><strong>Howler.js 解决方案</strong></span></a></h3><ul><li><strong>自动管理 <code>gainNode</code> 以兼容所有浏览器</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sound</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">volume</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 无需担心 Web Audio API 兼容性</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>内置 3D 音效支持</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sound</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Howl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  src</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;audio.mp3&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  positional</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 开启 3D 音效</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  panningModel</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;HRTF&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h2 id="总结-howler-js-解决的核心兼容性问题" tabindex="-1"><a class="header-anchor" href="#总结-howler-js-解决的核心兼容性问题"><span><strong>总结：Howler.js 解决的核心兼容性问题</strong></span></a></h2><table><thead><tr><th>兼容性问题</th><th>传统方案的难点</th><th>Howler.js 解决方案</th></tr></thead><tbody><tr><td><strong>音频格式兼容</strong></td><td>各浏览器支持不同格式</td><td><strong>自动选择最佳格式</strong>（MP3、OGG、WAV 等）</td></tr><tr><td><strong>Web Audio API vs <code>&lt;audio&gt;</code></strong></td><td>需要手动判断 API 支持情况</td><td><strong>自动检测 API 并回退</strong></td></tr><tr><td><strong>移动端 <code>play()</code> 限制</strong></td><td><code>play()</code> 需用户交互，否则失败</td><td><strong><code>Howler.autoUnlock</code> 自动解锁</strong></td></tr><tr><td><strong>iOS Safari 只能播放一个音频</strong></td><td>手动 <code>resume()</code> 仍然有问题</td><td><strong>通过 Web Audio API 处理多个音频流</strong></td></tr><tr><td><strong><code>AudioContext</code> 旧版本兼容</strong></td><td>需手动 <code>resume()</code></td><td><strong>自动检测 &amp; 解决</strong></td></tr><tr><td><strong>Android WebView 音频播放问题</strong></td><td>需要 hack 处理</td><td><strong><code>canplaythrough</code> 监听 + 静音音频解锁</strong></td></tr><tr><td><strong>3D 音效 &amp; 音量控制兼容</strong></td><td><code>gainNode</code> 旧版浏览器不支持</td><td><strong>自动兼容所有浏览器</strong></td></tr></tbody></table><hr><h3 id="结论" tabindex="-1"><a class="header-anchor" href="#结论"><span><strong>结论</strong></span></a></h3><p>如果你需要<strong>跨浏览器、跨设备</strong>的音频播放支持，Howler.js 处理了很多底层兼容性问题，减少了手动处理的麻烦。</p>`,44)]))}const k=s(n,[["render",t]]),p=JSON.parse('{"path":"/posts/%E7%9F%A5%E8%AF%86%E9%9B%86%E9%94%A6/audio.html","title":"web 端音频播放","lang":"zh-CN","frontmatter":{"title":"web 端音频播放","tags":["Audio"],"description":"web 端音频播放的问题Howler.js iphone 低端设备 同时播放音频 重音 iphone 低端设备 连续播放按键音 播放不出来 Howler.js 解决了 Web 端音频播放的多个兼容性问题，主要体现在 跨浏览器支持、移动端适配、Web Audio API 兼容性 等方面。以下是 Howler.js 处理的一些核心兼容性问题： 1. 跨浏览...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zy-vuepress/posts/%E7%9F%A5%E8%AF%86%E9%9B%86%E9%94%A6/audio.html"}],["meta",{"property":"og:site_name","content":"我的基地"}],["meta",{"property":"og:title","content":"web 端音频播放"}],["meta",{"property":"og:description","content":"web 端音频播放的问题Howler.js iphone 低端设备 同时播放音频 重音 iphone 低端设备 连续播放按键音 播放不出来 Howler.js 解决了 Web 端音频播放的多个兼容性问题，主要体现在 跨浏览器支持、移动端适配、Web Audio API 兼容性 等方面。以下是 Howler.js 处理的一些核心兼容性问题： 1. 跨浏览..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-22T02:16:29.000Z"}],["meta",{"property":"article:tag","content":"Audio"}],["meta",{"property":"article:modified_time","content":"2025-05-22T02:16:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"web 端音频播放\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-22T02:16:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mrs.Zoe\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"web 端音频播放的问题Howler.js","slug":"web-端音频播放的问题howler-js","link":"#web-端音频播放的问题howler-js","children":[]},{"level":2,"title":"1. 跨浏览器音频格式兼容","slug":"_1-跨浏览器音频格式兼容","link":"#_1-跨浏览器音频格式兼容","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案","link":"#howler-js-解决方案","children":[]}]},{"level":2,"title":"2. Web Audio API 与 <audio> 兼容","slug":"_2-web-audio-api-与-audio-兼容","link":"#_2-web-audio-api-与-audio-兼容","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案-1","link":"#howler-js-解决方案-1","children":[]}]},{"level":2,"title":"3. 解决移动端 play() 受阻问题","slug":"_3-解决移动端-play-受阻问题","link":"#_3-解决移动端-play-受阻问题","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案-2","link":"#howler-js-解决方案-2","children":[]}]},{"level":2,"title":"4. iOS Safari 不能同时播放多个音频","slug":"_4-ios-safari-不能同时播放多个音频","link":"#_4-ios-safari-不能同时播放多个音频","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案-3","link":"#howler-js-解决方案-3","children":[]}]},{"level":2,"title":"5. 低版本浏览器的 AudioContext 兼容","slug":"_5-低版本浏览器的-audiocontext-兼容","link":"#_5-低版本浏览器的-audiocontext-兼容","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案-4","link":"#howler-js-解决方案-4","children":[]}]},{"level":2,"title":"6. 解决 Android WebView 无法播放音频问题","slug":"_6-解决-android-webview-无法播放音频问题","link":"#_6-解决-android-webview-无法播放音频问题","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案-5","link":"#howler-js-解决方案-5","children":[]}]},{"level":2,"title":"7. 兼容音量控制 & 3D 音效","slug":"_7-兼容音量控制-3d-音效","link":"#_7-兼容音量控制-3d-音效","children":[{"level":3,"title":"Howler.js 解决方案","slug":"howler-js-解决方案-6","link":"#howler-js-解决方案-6","children":[]}]},{"level":2,"title":"总结：Howler.js 解决的核心兼容性问题","slug":"总结-howler-js-解决的核心兼容性问题","link":"#总结-howler-js-解决的核心兼容性问题","children":[{"level":3,"title":"结论","slug":"结论","link":"#结论","children":[]}]}],"git":{"createdTime":1742297446000,"updatedTime":1747880189000,"contributors":[{"name":"zy","username":"zy","email":"891374900@qq.com","commits":3,"url":"https://github.com/zy"}]},"readingTime":{"minutes":3.93,"words":1179},"filePathRelative":"posts/知识集锦/audio.md","localizedDate":"2025年3月18日","excerpt":"<h2>web 端音频播放的问题<strong>Howler.js</strong></h2>\\n<ol>\\n<li>iphone 低端设备 同时播放音频 重音</li>\\n<li>iphone 低端设备 连续播放按键音 播放不出来<br>\\n<strong>Howler.js</strong> 解决了 Web 端音频播放的多个兼容性问题，主要体现在 <strong>跨浏览器支持、移动端适配、Web Audio API 兼容性</strong> 等方面。以下是 Howler.js 处理的一些核心兼容性问题：</li>\\n</ol>\\n<hr>\\n<h2><strong>1. 跨浏览器音频格式兼容</strong></h2>","autoDesc":true}');export{k as comp,p as data};
