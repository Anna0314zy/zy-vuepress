import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as n,o as t}from"./app-D4yN_ylH.js";const e={};function l(h,s){return t(),a("div",null,s[0]||(s[0]=[n(`<ul><li><a href="https://juejin.cn/post/7166517557124415518" target="_blank" rel="noopener noreferrer">nextTick</a></li></ul><hr><h3 id="✅-nexttick-的本质作用" tabindex="-1"><a class="header-anchor" href="#✅-nexttick-的本质作用"><span>✅ <code>nextTick</code> 的本质作用：</span></a></h3><p><code>nextTick()</code> 的作用是：</p><blockquote><p>等待 Vue 完成<strong>当前响应式数据更新</strong>后，再执行一个回调函数 —— 此时<strong>虚拟 DOM 已经 patch 完成，更新任务已经提交给浏览器</strong>，但<strong>实际 DOM 可能还未真正渲染到页面上</strong>。</p></blockquote><hr><h3 id="🚫-它不能保证" tabindex="-1"><a class="header-anchor" href="#🚫-它不能保证"><span>🚫 它<strong>不能保证</strong>：</span></a></h3><ul><li>DOM 节点已插入页面（特别是涉及 v-for、v-if、懒加载等异步逻辑时）</li><li>浏览器已经完成重排和绘制（reflow + repaint）</li></ul><hr><h3 id="✅-举个例子" tabindex="-1"><a class="header-anchor" href="#✅-举个例子"><span>✅ 举个例子：</span></a></h3><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> v-if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;visible&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;box&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Hello&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nextTick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> visible</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> showBoxAndMeasure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  visible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  nextTick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> boxEl</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $refs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">box</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">boxEl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">offsetHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ⚠️ 有可能还是 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子里，虽然 <code>boxEl</code> 已经存在于 DOM 中，但有可能浏览器<strong>还没完成重排</strong>，所以高度可能还是 <code>0</code>。</p><hr><h3 id="✅-如何确保真实-dom-完全可测" tabindex="-1"><a class="header-anchor" href="#✅-如何确保真实-dom-完全可测"><span>✅ 如何确保真实 DOM 完全可测？</span></a></h3><p>可以使用：</p><h4 id="_1-nexttick-settimeout" tabindex="-1"><a class="header-anchor" href="#_1-nexttick-settimeout"><span>1. <code>nextTick + setTimeout</code></span></a></h4><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> nextTick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // DOM 已完成渲染，可以放心获取尺寸</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-requestanimationframe" tabindex="-1"><a class="header-anchor" href="#_2-requestanimationframe"><span>2. <code>requestAnimationFrame</code></span></a></h4><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> nextTick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">requestAnimationFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 更精细的下一帧执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-或高级方案-mutationobserver" tabindex="-1"><a class="header-anchor" href="#_3-或高级方案-mutationobserver"><span>3. 或高级方案：<code>MutationObserver</code></span></a></h4><hr><h3 id="✅-总结一句话" tabindex="-1"><a class="header-anchor" href="#✅-总结一句话"><span>✅ 总结一句话：</span></a></h3><blockquote><p><code>nextTick</code> 保证响应式更新 → 虚拟 DOM patch 完成，但 <strong>并不保证真实 DOM 已被浏览器渲染完成或布局完成</strong>。</p></blockquote><hr><h3 id="✅-watch" tabindex="-1"><a class="header-anchor" href="#✅-watch"><span>✅ watch</span></a></h3><h3 id="✅-flush-post" tabindex="-1"><a class="header-anchor" href="#✅-flush-post"><span>✅ <code>flush: &#39;post&#39;</code></span></a></h3><hr><h3 id="🧠-默认行为-flush-pre" tabindex="-1"><a class="header-anchor" href="#🧠-默认行为-flush-pre"><span>🧠 默认行为（<code>flush: &#39;pre&#39;</code>）：</span></a></h3><ul><li><code>watch</code> 回调在 <strong>数据变更但 DOM 尚未更新之前</strong> 执行。</li></ul><hr><h3 id="✅-flush-post-的效果" tabindex="-1"><a class="header-anchor" href="#✅-flush-post-的效果"><span>✅ <code>flush: &#39;post&#39;</code> 的效果：</span></a></h3><ul><li>让 <code>watch</code> 的回调在 <strong>DOM 更新之后（即浏览器渲染完成之后）再执行</strong>。</li></ul><hr><h3 id="✅-用法示例" tabindex="-1"><a class="header-anchor" href="#✅-用法示例"><span>✅ 用法示例：</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> props</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 此时 DOM 已更新完毕，可以访问正确的高度等信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> el</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;target-id&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">scrollIntoView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">behavior</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;smooth&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    flush</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;post&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 👈 关键点</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    immediate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 如果你希望初次执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="🚀-flush-参数的选项总结" tabindex="-1"><a class="header-anchor" href="#🚀-flush-参数的选项总结"><span>🚀 flush 参数的选项总结：</span></a></h3><table><thead><tr><th>flush 值</th><th>何时调用回调函数</th><th>适用场景</th></tr></thead><tbody><tr><td><code>&#39;pre&#39;</code></td><td>在组件更新前（默认）</td><td>需要在 DOM 更新前处理数据逻辑</td></tr><tr><td><code>&#39;post&#39;</code></td><td>在组件更新并渲染完成后</td><td>需要操作 DOM，比如测量、滚动等</td></tr><tr><td><code>&#39;sync&#39;</code></td><td>同步执行</td><td>特殊情况，一般不推荐使用</td></tr></tbody></table><hr>`,39)]))}const r=i(e,[["render",l]]),d=JSON.parse(`{"path":"/posts/vue/nextTick.html","title":"nextTick","lang":"zh-CN","frontmatter":{"title":"nextTick","tags":["vue"],"description":"nextTick ✅ nextTick 的本质作用： nextTick() 的作用是： 等待 Vue 完成当前响应式数据更新后，再执行一个回调函数 —— 此时虚拟 DOM 已经 patch 完成，更新任务已经提交给浏览器，但实际 DOM 可能还未真正渲染到页面上。 🚫 它不能保证： DOM 节点已插入页面（特别是涉及 v-for、v-if、懒加载等异...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zy-vuepress/posts/vue/nextTick.html"}],["meta",{"property":"og:site_name","content":"我的基地"}],["meta",{"property":"og:title","content":"nextTick"}],["meta",{"property":"og:description","content":"nextTick ✅ nextTick 的本质作用： nextTick() 的作用是： 等待 Vue 完成当前响应式数据更新后，再执行一个回调函数 —— 此时虚拟 DOM 已经 patch 完成，更新任务已经提交给浏览器，但实际 DOM 可能还未真正渲染到页面上。 🚫 它不能保证： DOM 节点已插入页面（特别是涉及 v-for、v-if、懒加载等异..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-04T06:28:37.000Z"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:modified_time","content":"2025-06-04T06:28:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nextTick\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-04T06:28:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mrs.Zoe\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"✅ nextTick 的本质作用：","slug":"✅-nexttick-的本质作用","link":"#✅-nexttick-的本质作用","children":[]},{"level":3,"title":"🚫 它不能保证：","slug":"🚫-它不能保证","link":"#🚫-它不能保证","children":[]},{"level":3,"title":"✅ 举个例子：","slug":"✅-举个例子","link":"#✅-举个例子","children":[]},{"level":3,"title":"✅ 如何确保真实 DOM 完全可测？","slug":"✅-如何确保真实-dom-完全可测","link":"#✅-如何确保真实-dom-完全可测","children":[]},{"level":3,"title":"✅ 总结一句话：","slug":"✅-总结一句话","link":"#✅-总结一句话","children":[]},{"level":3,"title":"✅  watch","slug":"✅-watch","link":"#✅-watch","children":[]},{"level":3,"title":"✅ flush: 'post'","slug":"✅-flush-post","link":"#✅-flush-post","children":[]},{"level":3,"title":"🧠 默认行为（flush: 'pre'）：","slug":"🧠-默认行为-flush-pre","link":"#🧠-默认行为-flush-pre","children":[]},{"level":3,"title":"✅ flush: 'post' 的效果：","slug":"✅-flush-post-的效果","link":"#✅-flush-post-的效果","children":[]},{"level":3,"title":"✅ 用法示例：","slug":"✅-用法示例","link":"#✅-用法示例","children":[]},{"level":3,"title":"🚀 flush 参数的选项总结：","slug":"🚀-flush-参数的选项总结","link":"#🚀-flush-参数的选项总结","children":[]}],"git":{"createdTime":1749018517000,"updatedTime":1749018517000,"contributors":[{"name":"zouyu","username":"zouyu","email":"891374900@qq.com","commits":1,"url":"https://github.com/zouyu"}]},"readingTime":{"minutes":1.69,"words":507},"filePathRelative":"posts/vue/nextTick.md","localizedDate":"2025年6月4日","excerpt":"<ul>\\n<li><a href=\\"https://juejin.cn/post/7166517557124415518\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">nextTick</a></li>\\n</ul>\\n<hr>\\n<h3>✅ <code>nextTick</code> 的本质作用：</h3>\\n<p><code>nextTick()</code> 的作用是：</p>\\n<blockquote>\\n<p>等待 Vue 完成<strong>当前响应式数据更新</strong>后，再执行一个回调函数 —— 此时<strong>虚拟 DOM 已经 patch 完成，更新任务已经提交给浏览器</strong>，但<strong>实际 DOM 可能还未真正渲染到页面上</strong>。</p>\\n</blockquote>","autoDesc":true}`);export{r as comp,d as data};
