import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as t,o as l}from"./app-D4yN_ylH.js";const n={};function h(e,i){return l(),a("div",null,i[0]||(i[0]=[t(`<h1 id="react-状态管理方案全面对比与选型指南" tabindex="-1"><a class="header-anchor" href="#react-状态管理方案全面对比与选型指南"><span>React 状态管理方案全面对比与选型指南</span></a></h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ol><li><a href="#%E6%96%B9%E6%A1%88%E6%A6%82%E8%A7%88">方案概览</a></li><li><a href="#%E6%A0%B8%E5%BF%83%E7%BB%B4%E5%BA%A6%E5%AF%B9%E6%AF%94">核心维度对比</a></li><li><a href="#%E8%AF%A6%E7%BB%86%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90">详细方案分析</a><ul><li><a href="#redux">Redux</a></li><li><a href="#rematch">Rematch</a></li><li><a href="#mobx">MobX</a></li><li><a href="#recoil">Recoil</a></li><li><a href="#hox">Hox</a></li><li><a href="#react-query">React Query</a></li></ul></li><li><a href="#%E9%80%89%E5%9E%8B%E5%86%B3%E7%AD%96%E7%9F%A9%E9%98%B5">选型决策矩阵</a></li><li><a href="#%E5%85%B8%E5%9E%8B%E5%9C%BA%E6%99%AF%E6%8E%A8%E8%8D%90">典型场景推荐</a></li><li><a href="#%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8%E7%AD%96%E7%95%A5">组合使用策略</a></li><li><a href="#%E8%BF%81%E7%A7%BB%E6%88%90%E6%9C%AC%E8%80%83%E9%87%8F">迁移成本考量</a></li><li><a href="#%E6%9C%AA%E6%9D%A5%E8%B6%8B%E5%8A%BF%E5%B1%95%E6%9C%9B">未来趋势展望</a></li></ol><h2 id="方案概览" tabindex="-1"><a class="header-anchor" href="#方案概览"><span>方案概览</span></a></h2><table><thead><tr><th>方案</th><th>理念</th><th>数据流</th><th>学习曲线</th><th>包大小</th><th>维护状态</th></tr></thead><tbody><tr><td>Redux</td><td>单一不可变存储</td><td>单向</td><td>高</td><td>7KB</td><td>活跃</td></tr><tr><td>Rematch</td><td>简化版Redux</td><td>单向</td><td>中</td><td>3KB</td><td>活跃</td></tr><tr><td>MobX</td><td>响应式状态管理</td><td>双向</td><td>中</td><td>16KB</td><td>活跃</td></tr><tr><td>Recoil</td><td>原子状态管理</td><td>混合</td><td>中低</td><td>14KB</td><td>实验性</td></tr><tr><td>Hox</td><td>极简模型化状态</td><td>混合</td><td>低</td><td>1KB</td><td>活跃</td></tr><tr><td>React Query</td><td>服务器状态管理</td><td>单向</td><td>中</td><td>12KB</td><td>活跃</td></tr></tbody></table><h2 id="核心维度对比" tabindex="-1"><a class="header-anchor" href="#核心维度对比"><span>核心维度对比</span></a></h2><h3 id="_1-状态类型支持" tabindex="-1"><a class="header-anchor" href="#_1-状态类型支持"><span>1. 状态类型支持</span></a></h3><ul><li><strong>客户端状态</strong>：Redux、Rematch、MobX、Recoil、Hox</li><li><strong>服务器状态</strong>：React Query</li><li><strong>混合状态</strong>：Recoil + React Query</li></ul><h3 id="_2-数据流模式" tabindex="-1"><a class="header-anchor" href="#_2-数据流模式"><span>2. 数据流模式</span></a></h3><table><thead><tr><th>方案</th><th>数据流</th><th>更新方式</th><th>不可变性</th></tr></thead><tbody><tr><td>Redux</td><td>单向</td><td>显式dispatch</td><td>强制</td></tr><tr><td>Rematch</td><td>单向</td><td>方法调用</td><td>推荐</td></tr><tr><td>MobX</td><td>双向</td><td>直接修改</td><td>不要求</td></tr><tr><td>Recoil</td><td>混合</td><td>Setter函数</td><td>可选</td></tr><tr><td>Hox</td><td>混合</td><td>直接修改</td><td>不要求</td></tr><tr><td>React Query</td><td>单向</td><td>自动/手动</td><td>自动处理</td></tr></tbody></table><h3 id="_3-性能特征" tabindex="-1"><a class="header-anchor" href="#_3-性能特征"><span>3. 性能特征</span></a></h3><table><thead><tr><th>方案</th><th>更新粒度</th><th>渲染优化</th><th>内存开销</th></tr></thead><tbody><tr><td>Redux</td><td>中等</td><td>手动优化</td><td>低</td></tr><tr><td>Rematch</td><td>中等</td><td>手动优化</td><td>低</td></tr><tr><td>MobX</td><td>细粒度</td><td>自动</td><td>中</td></tr><tr><td>Recoil</td><td>原子级</td><td>自动</td><td>中</td></tr><tr><td>Hox</td><td>组件级</td><td>中等</td><td>低</td></tr><tr><td>React Query</td><td>查询级</td><td>自动</td><td>中</td></tr></tbody></table><h3 id="_4-开发体验" tabindex="-1"><a class="header-anchor" href="#_4-开发体验"><span>4. 开发体验</span></a></h3><table><thead><tr><th>方案</th><th>样板代码量</th><th>TypeScript支持</th><th>调试工具</th><th>测试友好度</th></tr></thead><tbody><tr><td>Redux</td><td>多</td><td>优秀</td><td>优秀</td><td>高</td></tr><tr><td>Rematch</td><td>少</td><td>优秀</td><td>良好</td><td>高</td></tr><tr><td>MobX</td><td>少</td><td>优秀</td><td>优秀</td><td>中</td></tr><tr><td>Recoil</td><td>中</td><td>优秀</td><td>有限</td><td>中</td></tr><tr><td>Hox</td><td>极少</td><td>良好</td><td>有限</td><td>高</td></tr><tr><td>React Query</td><td>少</td><td>优秀</td><td>优秀</td><td>高</td></tr></tbody></table><h2 id="详细方案分析" tabindex="-1"><a class="header-anchor" href="#详细方案分析"><span>详细方案分析</span></a></h2><h3 id="redux" tabindex="-1"><a class="header-anchor" href="#redux"><span>Redux</span></a></h3><p><strong>核心优势</strong>：</p><ul><li>可预测的状态管理</li><li>强大的中间件生态（thunk/saga/observable）</li><li>优秀的时间旅行调试</li><li>适合大型复杂应用</li></ul><p><strong>痛点</strong>：</p><ul><li>样板代码过多</li><li>概念复杂度高（action/reducer/store）</li><li>需要手动优化性能</li></ul><p><strong>典型代码</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// action</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> addTodo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ADD_TODO&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">payload</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// reducer</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> todos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">state</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [], </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ADD_TODO&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">text</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">payload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// store</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> store</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">todos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">applyMiddleware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">thunk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>大型企业级应用</li><li>需要严格状态历史追溯的系统</li><li>已有Redux技术栈的团队</li></ul><h3 id="rematch" tabindex="-1"><a class="header-anchor" href="#rematch"><span>Rematch</span></a></h3><p><strong>核心优势</strong>：</p><ul><li>保留Redux核心优势</li><li>减少约80%样板代码</li><li>内置异步处理</li><li>兼容现有Redux生态</li></ul><p><strong>痛点</strong>：</p><ul><li>社区生态小于Redux</li><li>调试工具支持略弱</li></ul><p><strong>典型代码</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// model</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> todos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  state</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  reducers</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  effects</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">dispatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ({</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    async</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> addAsync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      await</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> delay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      dispatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">todos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// store</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> store</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">models</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">todos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>想要Redux但嫌复杂的中型应用</li><li>需要快速开发的项目</li><li>渐进式迁移Redux的项目</li></ul><h3 id="mobx" tabindex="-1"><a class="header-anchor" href="#mobx"><span>MobX</span></a></h3><p><strong>核心优势</strong>：</p><ul><li>极简代码实现复杂逻辑</li><li>自动依赖追踪</li><li>细粒度更新</li><li>响应式编程范式</li></ul><p><strong>痛点</strong>：</p><ul><li>过于灵活导致规范难统一</li><li>黑盒特性导致调试难度</li><li>兼容性问题（Proxy）</li></ul><p><strong>典型代码</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TodoStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">observable</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> todos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">action</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  addTodo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">todos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">computed</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">  get</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">todos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> store</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> TodoStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>数据关系复杂的富交互应用</li><li>需要快速迭代的中小型项目</li><li>熟悉响应式编程的团队</li></ul><h3 id="recoil" tabindex="-1"><a class="header-anchor" href="#recoil"><span>Recoil</span></a></h3><p><strong>核心优势</strong>：</p><ul><li>原生React式API设计</li><li>原子级状态管理</li><li>自动渲染优化</li><li>并发模式兼容</li></ul><p><strong>痛点</strong>：</p><ul><li>仍处于实验阶段</li><li>生态不成熟</li><li>调试工具有限</li></ul><p><strong>典型代码</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> textState</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> atom</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  key</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;textState&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  default</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> charCountState</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> selector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  key</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;charCountState&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  get</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ({</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">textState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CharacterCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> useRecoilValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">charCountState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&gt;Character Count: </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/&gt;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>实验性/前沿项目</li><li>大量局部状态需要共享</li><li>计划使用React并发模式</li></ul><h3 id="hox" tabindex="-1"><a class="header-anchor" href="#hox"><span>Hox</span></a></h3><p><strong>核心优势</strong>：</p><ul><li>极简API设计</li><li>零学习成本</li><li>超轻量级</li><li>完美契合Hooks</li></ul><p><strong>痛点</strong>：</p><ul><li>功能较为基础</li><li>缺乏高级特性</li><li>不适合复杂场景</li></ul><p><strong>典型代码</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// store</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> useCounter</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">setCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> increment</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">increment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">useCounter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// component</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">increment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> useModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">counterModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>小型应用或组件状态共享</li><li>需要轻量级解决方案</li><li>快速原型开发</li></ul><h3 id="react-query" tabindex="-1"><a class="header-anchor" href="#react-query"><span>React Query</span></a></h3><p><strong>核心优势</strong>：</p><ul><li>专业的服务器状态管理</li><li>内置缓存/重试/轮询</li><li>自动垃圾回收</li><li>与UI状态解耦</li></ul><p><strong>痛点</strong>：</p><ul><li>仅处理服务器状态</li><li>需要配合客户端状态方案</li></ul><p><strong>典型代码</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">isLoading</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> useQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &#39;todos&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fetch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/api/todos&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    staleTime</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    retry</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">mutate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> useMutation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">newTodo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> axios</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/api/todos&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">newTodo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    onSuccess</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> queryClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">invalidateQueries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;todos&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>数据驱动的应用</li><li>需要复杂数据同步逻辑</li><li>频繁与后端交互的系统</li></ul><h2 id="选型决策矩阵" tabindex="-1"><a class="header-anchor" href="#选型决策矩阵"><span>选型决策矩阵</span></a></h2><h3 id="评估维度权重" tabindex="-1"><a class="header-anchor" href="#评估维度权重"><span>评估维度权重</span></a></h3><ol><li><strong>项目规模</strong> (30%)：小型/中型/大型</li><li><strong>团队经验</strong> (20%)：熟悉度/学习成本</li><li><strong>状态复杂度</strong> (25%)：简单/中等/复杂</li><li><strong>性能需求</strong> (15%)：一般/高要求</li><li><strong>未来扩展</strong> (10%)：维护性/生态</li></ol><h3 id="评分表-1-5分" tabindex="-1"><a class="header-anchor" href="#评分表-1-5分"><span>评分表（1-5分）</span></a></h3><table><thead><tr><th>方案</th><th>小型项目</th><th>中型项目</th><th>大型项目</th><th>新手团队</th><th>复杂状态</th><th>高性能需求</th></tr></thead><tbody><tr><td>Redux</td><td>2</td><td>4</td><td>5</td><td>2</td><td>5</td><td>4</td></tr><tr><td>Rematch</td><td>3</td><td>5</td><td>4</td><td>4</td><td>4</td><td>4</td></tr><tr><td>MobX</td><td>5</td><td>4</td><td>3</td><td>3</td><td>5</td><td>5</td></tr><tr><td>Recoil</td><td>4</td><td>4</td><td>3</td><td>4</td><td>4</td><td>5</td></tr><tr><td>Hox</td><td>5</td><td>3</td><td>2</td><td>5</td><td>2</td><td>3</td></tr><tr><td>React Query</td><td>4</td><td>5</td><td>5</td><td>3</td><td>5*</td><td>5</td></tr></tbody></table><blockquote><p>*仅针对服务器状态管理</p></blockquote><h2 id="典型场景推荐" tabindex="-1"><a class="header-anchor" href="#典型场景推荐"><span>典型场景推荐</span></a></h2><h3 id="场景1-大型管理后台" tabindex="-1"><a class="header-anchor" href="#场景1-大型管理后台"><span>场景1：大型管理后台</span></a></h3><ul><li><strong>需求特点</strong>：复杂业务逻辑、严格状态追踪、团队协作</li><li><strong>推荐方案</strong>：Redux + React Query</li><li><strong>理由</strong>： <ul><li>Redux提供严格的状态管理</li><li>React Query处理API状态</li><li>完善的调试工具支持</li></ul></li><li><strong>替代方案</strong>：Rematch + SWR</li></ul><h3 id="场景2-数据可视化仪表盘" tabindex="-1"><a class="header-anchor" href="#场景2-数据可视化仪表盘"><span>场景2：数据可视化仪表盘</span></a></h3><ul><li><strong>需求特点</strong>：高频状态更新、细粒度渲染</li><li><strong>推荐方案</strong>：MobX</li><li><strong>理由</strong>： <ul><li>自动依赖追踪</li><li>最小化渲染开销</li><li>响应式编程适合数据流</li></ul></li><li><strong>替代方案</strong>：Recoil</li></ul><h3 id="场景3-中小型toc应用" tabindex="-1"><a class="header-anchor" href="#场景3-中小型toc应用"><span>场景3：中小型ToC应用</span></a></h3><ul><li><strong>需求特点</strong>：快速迭代、中等复杂度</li><li><strong>推荐方案</strong>：Rematch + Hox</li><li><strong>理由</strong>： <ul><li>Rematch提供核心状态管理</li><li>Hox处理局部共享状态</li><li>平衡开发效率与可维护性</li></ul></li><li><strong>替代方案</strong>：MobX</li></ul><h3 id="场景4-next-js-ssr应用" tabindex="-1"><a class="header-anchor" href="#场景4-next-js-ssr应用"><span>场景4：Next.js SSR应用</span></a></h3><ul><li><strong>需求特点</strong>：同构渲染、数据预取</li><li><strong>推荐方案</strong>：Recoil + React Query</li><li><strong>理由</strong>： <ul><li>Recoil良好支持SSR</li><li>React Query处理数据预取</li><li>原子状态适合组件化架构</li></ul></li><li><strong>替代方案</strong>：Redux Toolkit + SWR</li></ul><h2 id="组合使用策略" tabindex="-1"><a class="header-anchor" href="#组合使用策略"><span>组合使用策略</span></a></h2><h3 id="_1-客户端-服务端状态分离" tabindex="-1"><a class="header-anchor" href="#_1-客户端-服务端状态分离"><span>1. 客户端+服务端状态分离</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pie</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    title 状态管理分工</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &quot;React Query&quot; : 45</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &quot;Redux/Rematch&quot; : 35</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &quot;本地useState&quot; : 20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-分层架构示例" tabindex="-1"><a class="header-anchor" href="#_2-分层架构示例"><span>2. 分层架构示例</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 顶层配置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> App</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">QueryClientProvider</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> client</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">queryClient</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Provider</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> store</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">store</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">RecoilRoot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">MainApp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">RecoilRoot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Provider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">QueryClientProvider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 状态分工：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// - 用户偏好：Redux</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// - API缓存：React Query </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// - 表单状态：Recoil</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// - 组件状态：useState</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// - 共享UI状态：Hox</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-渐进式迁移路径" tabindex="-1"><a class="header-anchor" href="#_3-渐进式迁移路径"><span>3. 渐进式迁移路径</span></a></h3><ol><li>从纯React开始，使用Context/useState</li><li>引入Hox处理跨组件状态</li><li>复杂模块采用Rematch</li><li>API状态迁移到React Query</li><li>特殊场景考虑Recoil</li></ol><h2 id="迁移成本考量" tabindex="-1"><a class="header-anchor" href="#迁移成本考量"><span>迁移成本考量</span></a></h2><h3 id="从redux迁移" tabindex="-1"><a class="header-anchor" href="#从redux迁移"><span>从Redux迁移</span></a></h3><table><thead><tr><th>目标方案</th><th>成本</th><th>主要工作</th></tr></thead><tbody><tr><td>Rematch</td><td>低</td><td>重写reducer为model</td></tr><tr><td>MobX</td><td>中高</td><td>重构状态更新逻辑</td></tr><tr><td>Recoil</td><td>高</td><td>完全重写状态逻辑</td></tr></tbody></table><h3 id="从mobx迁移" tabindex="-1"><a class="header-anchor" href="#从mobx迁移"><span>从MobX迁移</span></a></h3><table><thead><tr><th>目标方案</th><th>成本</th><th>挑战点</th></tr></thead><tbody><tr><td>Redux</td><td>高</td><td>不可变数据处理</td></tr><tr><td>Recoil</td><td>中</td><td>响应式到原子式思维转换</td></tr></tbody></table><h3 id="从context迁移" tabindex="-1"><a class="header-anchor" href="#从context迁移"><span>从Context迁移</span></a></h3><table><thead><tr><th>目标方案</th><th>成本</th><th>优势点</th></tr></thead><tbody><tr><td>Hox</td><td>低</td><td>几乎无学习成本</td></tr><tr><td>Recoil</td><td>中</td><td>更好的性能</td></tr><tr><td>Redux</td><td>中高</td><td>获得完整工具链</td></tr></tbody></table><h2 id="未来趋势展望" tabindex="-1"><a class="header-anchor" href="#未来趋势展望"><span>未来趋势展望</span></a></h2><ol><li><strong>服务器状态专业化</strong>：React Query/SWR将成为标配</li><li><strong>原子化状态</strong>：Recoil/Jotai模式可能成为主流</li><li><strong>编译时优化</strong>：类似Valtio的proxy方案演进</li><li><strong>微前端集成</strong>：状态方案需要更好支持模块化</li><li><strong>并发模式适配</strong>：与React 18+深度集成</li></ol><h2 id="最终建议" tabindex="-1"><a class="header-anchor" href="#最终建议"><span>最终建议</span></a></h2><ol><li><strong>新手团队</strong>：从Hox开始，逐步引入Rematch</li><li><strong>大型项目</strong>：Redux + React Query黄金组合</li><li><strong>交互密集型</strong>：优先考虑MobX</li><li><strong>实验性项目</strong>：尝试Recoil新特性</li><li><strong>全栈团队</strong>：React Query + 轻量客户端方案</li></ol><p><strong>核心原则</strong>：</p><ul><li>从简单方案开始，按需演进</li><li>区分客户端与服务器状态</li><li>考虑团队熟悉度重于技术新颖性</li><li>为未来2-3年的扩展留有余地</li></ul>`,104)]))}const p=s(n,[["render",h]]),r=JSON.parse('{"path":"/posts/react/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E5%AF%B9%E6%AF%94.html","title":"React 状态管理方案全面对比与选型指南","lang":"zh-CN","frontmatter":{"description":"React 状态管理方案全面对比与选型指南 目录 方案概览 核心维度对比 详细方案分析 Redux Rematch MobX Recoil Hox React Query 选型决策矩阵 典型场景推荐 组合使用策略 迁移成本考量 未来趋势展望 方案概览 核心维度对比 1. 状态类型支持 客户端状态：Redux、Rematch、MobX、Recoil、Ho...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zy-vuepress/posts/react/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E5%AF%B9%E6%AF%94.html"}],["meta",{"property":"og:site_name","content":"我的基地"}],["meta",{"property":"og:title","content":"React 状态管理方案全面对比与选型指南"}],["meta",{"property":"og:description","content":"React 状态管理方案全面对比与选型指南 目录 方案概览 核心维度对比 详细方案分析 Redux Rematch MobX Recoil Hox React Query 选型决策矩阵 典型场景推荐 组合使用策略 迁移成本考量 未来趋势展望 方案概览 核心维度对比 1. 状态类型支持 客户端状态：Redux、Rematch、MobX、Recoil、Ho..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-07T05:44:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-07T05:44:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"React 状态管理方案全面对比与选型指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-07T05:44:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mrs.Zoe\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"方案概览","slug":"方案概览","link":"#方案概览","children":[]},{"level":2,"title":"核心维度对比","slug":"核心维度对比","link":"#核心维度对比","children":[{"level":3,"title":"1. 状态类型支持","slug":"_1-状态类型支持","link":"#_1-状态类型支持","children":[]},{"level":3,"title":"2. 数据流模式","slug":"_2-数据流模式","link":"#_2-数据流模式","children":[]},{"level":3,"title":"3. 性能特征","slug":"_3-性能特征","link":"#_3-性能特征","children":[]},{"level":3,"title":"4. 开发体验","slug":"_4-开发体验","link":"#_4-开发体验","children":[]}]},{"level":2,"title":"详细方案分析","slug":"详细方案分析","link":"#详细方案分析","children":[{"level":3,"title":"Redux","slug":"redux","link":"#redux","children":[]},{"level":3,"title":"Rematch","slug":"rematch","link":"#rematch","children":[]},{"level":3,"title":"MobX","slug":"mobx","link":"#mobx","children":[]},{"level":3,"title":"Recoil","slug":"recoil","link":"#recoil","children":[]},{"level":3,"title":"Hox","slug":"hox","link":"#hox","children":[]},{"level":3,"title":"React Query","slug":"react-query","link":"#react-query","children":[]}]},{"level":2,"title":"选型决策矩阵","slug":"选型决策矩阵","link":"#选型决策矩阵","children":[{"level":3,"title":"评估维度权重","slug":"评估维度权重","link":"#评估维度权重","children":[]},{"level":3,"title":"评分表（1-5分）","slug":"评分表-1-5分","link":"#评分表-1-5分","children":[]}]},{"level":2,"title":"典型场景推荐","slug":"典型场景推荐","link":"#典型场景推荐","children":[{"level":3,"title":"场景1：大型管理后台","slug":"场景1-大型管理后台","link":"#场景1-大型管理后台","children":[]},{"level":3,"title":"场景2：数据可视化仪表盘","slug":"场景2-数据可视化仪表盘","link":"#场景2-数据可视化仪表盘","children":[]},{"level":3,"title":"场景3：中小型ToC应用","slug":"场景3-中小型toc应用","link":"#场景3-中小型toc应用","children":[]},{"level":3,"title":"场景4：Next.js SSR应用","slug":"场景4-next-js-ssr应用","link":"#场景4-next-js-ssr应用","children":[]}]},{"level":2,"title":"组合使用策略","slug":"组合使用策略","link":"#组合使用策略","children":[{"level":3,"title":"1. 客户端+服务端状态分离","slug":"_1-客户端-服务端状态分离","link":"#_1-客户端-服务端状态分离","children":[]},{"level":3,"title":"2. 分层架构示例","slug":"_2-分层架构示例","link":"#_2-分层架构示例","children":[]},{"level":3,"title":"3. 渐进式迁移路径","slug":"_3-渐进式迁移路径","link":"#_3-渐进式迁移路径","children":[]}]},{"level":2,"title":"迁移成本考量","slug":"迁移成本考量","link":"#迁移成本考量","children":[{"level":3,"title":"从Redux迁移","slug":"从redux迁移","link":"#从redux迁移","children":[]},{"level":3,"title":"从MobX迁移","slug":"从mobx迁移","link":"#从mobx迁移","children":[]},{"level":3,"title":"从Context迁移","slug":"从context迁移","link":"#从context迁移","children":[]}]},{"level":2,"title":"未来趋势展望","slug":"未来趋势展望","link":"#未来趋势展望","children":[]},{"level":2,"title":"最终建议","slug":"最终建议","link":"#最终建议","children":[]}],"git":{"createdTime":1746596675000,"updatedTime":1746596675000,"contributors":[{"name":"zouyu","username":"zouyu","email":"891374900@qq.com","commits":1,"url":"https://github.com/zouyu"}]},"readingTime":{"minutes":7.04,"words":2111},"filePathRelative":"posts/react/状态管理/状态管理方案对比.md","localizedDate":"2025年5月7日","excerpt":"\\n<h2>目录</h2>\\n<ol>\\n<li><a href=\\"#%E6%96%B9%E6%A1%88%E6%A6%82%E8%A7%88\\">方案概览</a></li>\\n<li><a href=\\"#%E6%A0%B8%E5%BF%83%E7%BB%B4%E5%BA%A6%E5%AF%B9%E6%AF%94\\">核心维度对比</a></li>\\n<li><a href=\\"#%E8%AF%A6%E7%BB%86%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90\\">详细方案分析</a>\\n<ul>\\n<li><a href=\\"#redux\\">Redux</a></li>\\n<li><a href=\\"#rematch\\">Rematch</a></li>\\n<li><a href=\\"#mobx\\">MobX</a></li>\\n<li><a href=\\"#recoil\\">Recoil</a></li>\\n<li><a href=\\"#hox\\">Hox</a></li>\\n<li><a href=\\"#react-query\\">React Query</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E9%80%89%E5%9E%8B%E5%86%B3%E7%AD%96%E7%9F%A9%E9%98%B5\\">选型决策矩阵</a></li>\\n<li><a href=\\"#%E5%85%B8%E5%9E%8B%E5%9C%BA%E6%99%AF%E6%8E%A8%E8%8D%90\\">典型场景推荐</a></li>\\n<li><a href=\\"#%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8%E7%AD%96%E7%95%A5\\">组合使用策略</a></li>\\n<li><a href=\\"#%E8%BF%81%E7%A7%BB%E6%88%90%E6%9C%AC%E8%80%83%E9%87%8F\\">迁移成本考量</a></li>\\n<li><a href=\\"#%E6%9C%AA%E6%9D%A5%E8%B6%8B%E5%8A%BF%E5%B1%95%E6%9C%9B\\">未来趋势展望</a></li>\\n</ol>","autoDesc":true}');export{p as comp,r as data};
