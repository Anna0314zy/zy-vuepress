import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,e as a,o as l}from"./app-D4yN_ylH.js";const e={};function t(p,s){return l(),n("div",null,s[0]||(s[0]=[a(`<h2 id="_1️⃣-流程概览" tabindex="-1"><a class="header-anchor" href="#_1️⃣-流程概览"><span><strong>1️⃣ 流程概览</strong></span></a></h2><ol><li><p><strong>开发者 push 代码到 GitHub</strong></p><ul><li><code>develop</code> 分支 → 测试环境</li><li><code>main</code> 分支 → 生产环境</li></ul></li><li><p><strong>GitHub Actions 监听对应分支</strong></p><ul><li>自动触发 CI 流程</li></ul></li><li><p><strong>执行前端构建</strong></p><ul><li><code>pnpm build --mode dev</code> → 测试环境</li><li><code>pnpm build --mode prod</code> → 生产环境</li></ul></li><li><p><strong>构建 Docker 镜像</strong></p><ul><li>将对应构建好的 <code>dist</code>（或 <code>build</code>）放入 Nginx 容器</li></ul></li><li><p><strong>推送镜像到镜像仓库</strong></p><ul><li>Docker Hub / GitHub Packages / 私有仓库</li></ul></li><li><p><strong>服务器拉取最新镜像 &amp; 更新容器</strong></p><ul><li>SSH 连接到服务器</li><li>拉取最新镜像、启动新容器、停止旧容器</li><li>实现 <strong>零停机更新</strong></li></ul></li></ol><p>整个过程 <strong>全自动</strong>，不需要人工干预。</p><hr><h2 id="_2️⃣-github-actions-配置分支监听" tabindex="-1"><a class="header-anchor" href="#_2️⃣-github-actions-配置分支监听"><span><strong>2️⃣ GitHub Actions 配置分支监听</strong></span></a></h2><p><code>.github/workflows/deploy.yml</code> 示例：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Build and Deploy Frontend</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">develop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  build-and-deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/checkout@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          fetch-depth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Setup pnpm</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pnpm/action-setup@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;9.x&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Setup Node.js</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/setup-node@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          node-version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">22</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pnpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pnpm install --frozen-lockfile</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Login to Docker Hub</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker/login-action@v3</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ vars.DOCKER_USERNAME }}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ secrets.DOCKER_PASSWORD }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Set Environment Variables</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          if [ &quot;\${GITHUB_REF}&quot; == &quot;refs/heads/main&quot; ]; then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            TAG=prod</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            BUILD_ENV=production</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          else</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            TAG=test</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            BUILD_ENV=development</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          DOCKER_IMAGE=react-demo</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          VERSION=$(jq -r &#39;.version&#39; package.json)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          DOCKER_TAG=&quot;$TAG-$VERSION&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          # 写入 GitHub Actions 环境变量</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          echo &quot;BUILD_ENV=$BUILD_ENV&quot; &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          echo &quot;TAG=$TAG&quot; &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          echo &quot;DOCKER_IMAGE=$DOCKER_IMAGE&quot; &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          echo &quot;DOCKER_TAG=$DOCKER_TAG&quot; &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Build and Push Docker Image</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          echo &quot;Building Docker image  \${{ vars.DOCKER_USERNAME }}/$DOCKER_IMAGE:$DOCKER_TAG&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          docker build --build-arg BUILD_ENV=$BUILD_ENV \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            -t  \${{ vars.DOCKER_USERNAME }}/$DOCKER_IMAGE:$DOCKER_TAG .</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          docker push  \${{ vars.DOCKER_USERNAME }}/$DOCKER_IMAGE:$DOCKER_TAG</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # SSH 到服务器部署</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_3️⃣-关键点解析" tabindex="-1"><a class="header-anchor" href="#_3️⃣-关键点解析"><span><strong>3️⃣ 关键点解析</strong></span></a></h2><ol><li><strong>监听分支</strong></li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">develop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>GitHub Actions 会在对应分支有 push 自动触发。</li></ul><ol start="2"><li><strong>构建不同环境</strong></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --mode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prod</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 生产</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --mode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 测试/预发</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--mode</code> 决定前端环境变量，例如 API 地址等。</li></ul><ol start="3"><li><strong>Docker 镜像打包</strong></li></ol><ul><li>构建完成后，把 <code>dist/</code> 放进 Nginx 镜像</li><li>用 <strong>镜像 TAG</strong> 区分环境（prod/staging）</li></ul><ol start="4"><li><strong>通知 Nginx / 部署</strong></li></ol><ul><li><p>通过 SSH 在服务器执行：</p><ul><li><code>docker pull</code> 拉最新镜像</li><li><code>docker run</code> 启动临时容器</li><li>停掉旧容器、rename 临时容器 → 零停机更新</li></ul></li></ul><hr><p>✅ <strong>优点</strong></p><ul><li><strong>自动化</strong>：push 代码 → 自动构建 → 自动部署</li><li><strong>多环境</strong>：通过分支区分测试/生产</li><li><strong>零停机</strong>：部署过程中服务不断线</li><li><strong>可扩展</strong>：可加预发、灰度发布等</li></ul><hr><p><code>push 分支 → Actions 构建 → Docker 镜像 → 服务器零停机部署 → Nginx 服务上线</code></p><h2 id="github-action" tabindex="-1"><a class="header-anchor" href="#github-action"><span>github action</span></a></h2><p>GitHubActions [<a href="https://juejin.cn/post/7213911755067310137" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7213911755067310137</a>]</p>`,26)]))}const k=i(e,[["render",t]]),r=JSON.parse('{"path":"/posts/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/docker/%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE.html","title":"部署前端项目","lang":"zh-CN","frontmatter":{"title":"部署前端项目","tags":["docker"],"description":"1️⃣ 流程概览 开发者 push 代码到 GitHub develop 分支 → 测试环境 main 分支 → 生产环境 GitHub Actions 监听对应分支 自动触发 CI 流程 执行前端构建 pnpm build --mode dev → 测试环境 pnpm build --mode prod → 生产环境 构建 Docker 镜像 将对应...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zy-vuepress/posts/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/docker/%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE.html"}],["meta",{"property":"og:site_name","content":"我的基地"}],["meta",{"property":"og:title","content":"部署前端项目"}],["meta",{"property":"og:description","content":"1️⃣ 流程概览 开发者 push 代码到 GitHub develop 分支 → 测试环境 main 分支 → 生产环境 GitHub Actions 监听对应分支 自动触发 CI 流程 执行前端构建 pnpm build --mode dev → 测试环境 pnpm build --mode prod → 生产环境 构建 Docker 镜像 将对应..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-18T06:34:09.000Z"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:modified_time","content":"2025-08-18T06:34:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署前端项目\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-18T06:34:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mrs.Zoe\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1️⃣ 流程概览","slug":"_1️⃣-流程概览","link":"#_1️⃣-流程概览","children":[]},{"level":2,"title":"2️⃣ GitHub Actions 配置分支监听","slug":"_2️⃣-github-actions-配置分支监听","link":"#_2️⃣-github-actions-配置分支监听","children":[]},{"level":2,"title":"3️⃣ 关键点解析","slug":"_3️⃣-关键点解析","link":"#_3️⃣-关键点解析","children":[]},{"level":2,"title":"github action","slug":"github-action","link":"#github-action","children":[]}],"git":{"createdTime":1755498849000,"updatedTime":1755498849000,"contributors":[{"name":"zouyu","username":"zouyu","email":"891374900@qq.com","commits":1,"url":"https://github.com/zouyu"}]},"readingTime":{"minutes":1.91,"words":573},"filePathRelative":"posts/前端工程化/docker/部署前端项目.md","localizedDate":"2025年8月18日","excerpt":"<h2><strong>1️⃣ 流程概览</strong></h2>\\n<ol>\\n<li>\\n<p><strong>开发者 push 代码到 GitHub</strong></p>\\n<ul>\\n<li><code>develop</code> 分支 → 测试环境</li>\\n<li><code>main</code> 分支 → 生产环境</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>GitHub Actions 监听对应分支</strong></p>\\n<ul>\\n<li>自动触发 CI 流程</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>执行前端构建</strong></p>\\n<ul>\\n<li><code>pnpm build --mode dev</code> → 测试环境</li>\\n<li><code>pnpm build --mode prod</code> → 生产环境</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>构建 Docker 镜像</strong></p>\\n<ul>\\n<li>将对应构建好的 <code>dist</code>（或 <code>build</code>）放入 Nginx 容器</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>推送镜像到镜像仓库</strong></p>\\n<ul>\\n<li>Docker Hub / GitHub Packages / 私有仓库</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>服务器拉取最新镜像 &amp; 更新容器</strong></p>\\n<ul>\\n<li>SSH 连接到服务器</li>\\n<li>拉取最新镜像、启动新容器、停止旧容器</li>\\n<li>实现 <strong>零停机更新</strong></li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{k as comp,r as data};
