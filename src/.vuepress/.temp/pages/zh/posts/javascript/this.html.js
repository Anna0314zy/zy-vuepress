import comp from "/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/zh/posts/javascript/this.html.vue"
const data = JSON.parse("{\"path\":\"/zh/posts/javascript/this.html\",\"title\":\"this关键字\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"this关键字\",\"date\":\"2019-09-09T00:00:00.000Z\",\"tags\":[\"Javascript\"],\"gitInclude\":[],\"description\":\"为什么要学习this关键字 面试会问啊！ 总有一些面试官喜欢问你一段不可能这么写的代码。 看一道经典且古老的面试题(学完本文后，末尾会有一道更复杂的面试题等着你哦！) 代码如下: 我在读 Events 的 lib/events 源码的时候发现多次用到call关键字，看来有必要搞懂 this 与 call 相关的所有内容。 其中几句代码是这样写的 箭头函...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/zy-vuepress/zh/posts/javascript/this.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"我的博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"this关键字\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"为什么要学习this关键字 面试会问啊！ 总有一些面试官喜欢问你一段不可能这么写的代码。 看一道经典且古老的面试题(学完本文后，末尾会有一道更复杂的面试题等着你哦！) 代码如下: 我在读 Events 的 lib/events 源码的时候发现多次用到call关键字，看来有必要搞懂 this 与 call 相关的所有内容。 其中几句代码是这样写的 箭头函...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://user-gold-cdn.xitu.io/2019/9/11/16d1dc3fe9fe710a?w=880&h=966&f=jpeg&s=141780 ':size=600'\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Javascript\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2019-09-09T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"this关键字\\\",\\\"image\\\":[\\\"https://user-gold-cdn.xitu.io/2019/9/11/16d1dc3fe9fe710a?w=880&h=966&f=jpeg&s=141780 ':size=600'\\\"],\\\"datePublished\\\":\\\"2019-09-09T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"zoe\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"为什么要学习this关键字\",\"slug\":\"为什么要学习this关键字\",\"link\":\"#为什么要学习this关键字\",\"children\":[]},{\"level\":2,\"title\":\"文章概览图\",\"slug\":\"文章概览图\",\"link\":\"#文章概览图\",\"children\":[]},{\"level\":2,\"title\":\"函数调用\",\"slug\":\"函数调用\",\"link\":\"#函数调用\",\"children\":[{\"level\":3,\"title\":\"Node.js 环境下指向全局的this关键字说明(你可能不知道)\",\"slug\":\"node-js-环境下指向全局的this关键字说明-你可能不知道\",\"link\":\"#node-js-环境下指向全局的this关键字说明-你可能不知道\",\"children\":[]},{\"level\":3,\"title\":\"[]语法中的this关键字\",\"slug\":\"语法中的this关键字\",\"link\":\"#语法中的this关键字\",\"children\":[]}]},{\"level\":2,\"title\":\"this绑定原则\",\"slug\":\"this绑定原则\",\"link\":\"#this绑定原则\",\"children\":[{\"level\":3,\"title\":\"默认绑定\",\"slug\":\"默认绑定\",\"link\":\"#默认绑定\",\"children\":[]},{\"level\":3,\"title\":\"隐式绑定\",\"slug\":\"隐式绑定\",\"link\":\"#隐式绑定\",\"children\":[]},{\"level\":3,\"title\":\"显式绑定\",\"slug\":\"显式绑定\",\"link\":\"#显式绑定\",\"children\":[]},{\"level\":3,\"title\":\"new 绑定\",\"slug\":\"new-绑定\",\"link\":\"#new-绑定\",\"children\":[]}]},{\"level\":2,\"title\":\"this绑定优先级\",\"slug\":\"this绑定优先级\",\"link\":\"#this绑定优先级\",\"children\":[]},{\"level\":2,\"title\":\"箭头函数中的 this\",\"slug\":\"箭头函数中的-this\",\"link\":\"#箭头函数中的-this\",\"children\":[{\"level\":3,\"title\":\"箭头函数\",\"slug\":\"箭头函数\",\"link\":\"#箭头函数\",\"children\":[]},{\"level\":3,\"title\":\"自执行函数\",\"slug\":\"自执行函数\",\"link\":\"#自执行函数\",\"children\":[]}]},{\"level\":2,\"title\":\"this应用场景\",\"slug\":\"this应用场景\",\"link\":\"#this应用场景\",\"children\":[]},{\"level\":2,\"title\":\"学后小练习\",\"slug\":\"学后小练习\",\"link\":\"#学后小练习\",\"children\":[]},{\"level\":2,\"title\":\"参考文章\",\"slug\":\"参考文章\",\"link\":\"#参考文章\",\"children\":[]}],\"readingTime\":{\"minutes\":11.52,\"words\":3457},\"filePathRelative\":\"zh/posts/javascript/this.md\",\"localizedDate\":\"2019年9月9日\",\"excerpt\":\"<h2>为什么要学习this关键字</h2>\\n<ol>\\n<li>\\n<p>面试会问啊！<br>\\n总有一些面试官喜欢问你一段不可能这么写的代码。<br>\\n看一道经典且古老的面试题(学完本文后，末尾会有一道更复杂的面试题等着你哦！)</p>\\n<p>代码如下:</p>\\n<div class=\\\"language-javascript line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"javascript\\\" data-title=\\\"javascript\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">var</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\"> a</span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 5</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">var</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\"> obj</span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">  a </span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\\">:</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 10</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">  foo</span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\\">:</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> function</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(){</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">    console</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">log</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">this</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">a</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">var</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\"> bar</span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\"> obj</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">foo</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">obj</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">foo</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">bar</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">()</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>我在读 Events 的 lib/events 源码的时候发现多次用到call关键字，看来有必要搞懂 this 与 call 相关的所有内容。</p>\\n<p>其中几句代码是这样写的</p>\\n<div class=\\\"language-javascript line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"javascript\\\" data-title=\\\"javascript\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// 场景1:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">function</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> EventEmitter</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">  EventEmitter</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">init</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">call</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">this</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// 场景2:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">return</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\"> this</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">listener</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">call</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">this</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">target</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// 场景3:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">return</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\"> listenerCount</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">call</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">emitter</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">, </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">type</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>箭头函数使用不当报错，在封装 Node.js 的一个 ORM 映射框架 Sequelize 时，封装表关联关系，由于使用箭头函数造成了读到的上下文发生变化，不是想要的 model 信息，而是指向了全局 。</p>\\n</li>\\n<li>\\n<p>call 关键字在写代码过程中还是比较常用的，有时候我们常常会使用 call 关键字来指定某个函数运行时的上下文，有时候还使用 call 关键字实现继承。</p>\\n</li>\\n</ol>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
