import comp from "/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/vue-quick/vue-up-1.html.vue"
const data = JSON.parse("{\"path\":\"/posts/vue-quick/vue-up-1.html\",\"title\":\"进阶Vue篇（一）\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"进阶Vue篇（一）\",\"date\":\"2019-07-14T00:00:00.000Z\",\"tags\":[\"Javascript\"],\"gitInclude\":[],\"description\":\"进阶Vue篇（一） 一.什么是库？什么是框架? 库是将代码集合成一个产品,库是我们调用库中的方法实现自己的功能。 框架则是为解决一类问题而开发的产品,框架是我们在指定的位置编写好代码，框架帮我们调用。 二.MVC 和 MVVM 区别 传统的 MVC 指的是,用户操作会请求服务端路由，路由会调用对应的控制器来处理,控制器会获取数 据。将结果返回给前端,页...\"},\"headers\":[{\"level\":2,\"title\":\"一.什么是库？什么是框架?\",\"slug\":\"一-什么是库-什么是框架\",\"link\":\"#一-什么是库-什么是框架\",\"children\":[]},{\"level\":2,\"title\":\"二.MVC 和 MVVM 区别\",\"slug\":\"二-mvc-和-mvvm-区别\",\"link\":\"#二-mvc-和-mvvm-区别\",\"children\":[]},{\"level\":2,\"title\":\"三.Vue的基本使用\",\"slug\":\"三-vue的基本使用\",\"link\":\"#三-vue的基本使用\",\"children\":[{\"level\":3,\"title\":\"快速安装\",\"slug\":\"快速安装\",\"link\":\"#快速安装\",\"children\":[]},{\"level\":3,\"title\":\"Vue中的模板\",\"slug\":\"vue中的模板\",\"link\":\"#vue中的模板\",\"children\":[]},{\"level\":3,\"title\":\"模板语法\",\"slug\":\"模板语法\",\"link\":\"#模板语法\",\"children\":[]},{\"level\":3,\"title\":\"响应式原则\",\"slug\":\"响应式原则\",\"link\":\"#响应式原则\",\"children\":[]},{\"level\":3,\"title\":\"实例方法\",\"slug\":\"实例方法\",\"link\":\"#实例方法\",\"children\":[]}]},{\"level\":2,\"title\":\"四.指令的使用\",\"slug\":\"四-指令的使用\",\"link\":\"#四-指令的使用\",\"children\":[{\"level\":3,\"title\":\"常见指令\",\"slug\":\"常见指令\",\"link\":\"#常见指令\",\"children\":[]},{\"level\":3,\"title\":\"v-show和v-if区别\",\"slug\":\"v-show和v-if区别\",\"link\":\"#v-show和v-if区别\",\"children\":[]},{\"level\":3,\"title\":\"v-for和v-if连用问题\",\"slug\":\"v-for和v-if连用问题\",\"link\":\"#v-for和v-if连用问题\",\"children\":[]},{\"level\":3,\"title\":\"v-for为什么要加key\",\"slug\":\"v-for为什么要加key\",\"link\":\"#v-for为什么要加key\",\"children\":[]},{\"level\":3,\"title\":\"v-model原理\",\"slug\":\"v-model原理\",\"link\":\"#v-model原理\",\"children\":[]}]},{\"level\":2,\"title\":\"五.自定义指令\",\"slug\":\"五-自定义指令\",\"link\":\"#五-自定义指令\",\"children\":[{\"level\":3,\"title\":\"钩子函数\",\"slug\":\"钩子函数\",\"link\":\"#钩子函数\",\"children\":[]},{\"level\":3,\"title\":\"练习1.clickOutSide\",\"slug\":\"练习1-clickoutside\",\"link\":\"#练习1-clickoutside\",\"children\":[]},{\"level\":3,\"title\":\"练习2.v-lazy\",\"slug\":\"练习2-v-lazy\",\"link\":\"#练习2-v-lazy\",\"children\":[]}]},{\"level\":2,\"title\":\"六.总结:\",\"slug\":\"六-总结\",\"link\":\"#六-总结\",\"children\":[{\"level\":3,\"title\":\"1.关于框架和库的说法正确的是：\",\"slug\":\"_1-关于框架和库的说法正确的是\",\"link\":\"#_1-关于框架和库的说法正确的是\",\"children\":[]},{\"level\":3,\"title\":\"2.关#于MVC 和 MVVM说法正确的是：\",\"slug\":\"_2-关-于mvc-和-mvvm说法正确的是\",\"link\":\"#_2-关-于mvc-和-mvvm说法正确的是\",\"children\":[]},{\"level\":3,\"title\":\"3.关于render和template属性说法正确的是：\",\"slug\":\"_3-关于render和template属性说法正确的是\",\"link\":\"#_3-关于render和template属性说法正确的是\",\"children\":[]},{\"level\":3,\"title\":\"4.响应式原理说法正确的是：\",\"slug\":\"_4-响应式原理说法正确的是\",\"link\":\"#_4-响应式原理说法正确的是\",\"children\":[]},{\"level\":3,\"title\":\"5.v-if和v-show的区别\",\"slug\":\"_5-v-if和v-show的区别\",\"link\":\"#_5-v-if和v-show的区别\",\"children\":[]},{\"level\":3,\"title\":\"6.关于v-for说法正确的是?\",\"slug\":\"_6-关于v-for说法正确的是\",\"link\":\"#_6-关于v-for说法正确的是\",\"children\":[]},{\"level\":3,\"title\":\"7.关于v-model说法正确的是？\",\"slug\":\"_7-关于v-model说法正确的是\",\"link\":\"#_7-关于v-model说法正确的是\",\"children\":[]}]}],\"readingTime\":{\"minutes\":8.81,\"words\":2644},\"filePathRelative\":\"posts/vue-quick/vue-up-1.md\",\"localizedDate\":\"July 14, 2019\",\"excerpt\":\"\\n<h2>一.什么是库？什么是框架?</h2>\\n<p>库是将代码集合成一个产品,库是我们调用库中的方法实现自己的功能。<br>\\n框架则是为解决一类问题而开发的产品,框架是我们在指定的位置编写好代码，框架帮我们调用。</p>\\n<h2>二.MVC 和 MVVM 区别</h2>\\n<ul>\\n<li>传统的 MVC 指的是,用户操作会请求服务端路由，路由会调用对应的控制器来处理,控制器会获取数 据。将结果返回给前端,页面重新渲染</li>\\n<li>MVVM :传统的前端会将数据手动渲染到页面上, MVVM 模式不需要用户收到操作 dom 元素,将数据绑 定到 viewModel 层上，会自动将数据渲染到页面中，视图变化会通知 viewModel层 更新数据。 ViewModel 就是我们 MVVM 模式中的桥梁.<br>\\nVue并没有完全遵循MVVM模型，严格的MVVM模式中,View层不能直接和Model层通信,只能通过ViewModel来进行通信。</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
