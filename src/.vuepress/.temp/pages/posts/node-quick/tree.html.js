import comp from "/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/tree.html.vue"
const data = JSON.parse("{\"path\":\"/posts/node-quick/tree.html\",\"title\":\"树\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"树\",\"date\":\"2019-01-06T00:00:00.000Z\",\"tags\":[\"Node.js\"],\"gitInclude\":[],\"description\":\"树 一.树形结构 像数组、栈、队列、默认都是线性结构类型。常见的树形结构有二叉树和多叉树（大于两个叉的树）。 开发中常见的树形结构有: 文件夹目录、DOM结构、路由的配置...... （树的数据结构是非常重要的） 常见概念 节点 （根节点、父节点、字节点、兄弟节点） 子树 （左子树、右子树）,子树的个数称之为度 叶子节点 （度为0的节点） 非叶子节点 ...\"},\"headers\":[{\"level\":2,\"title\":\"一.树形结构\",\"slug\":\"一-树形结构\",\"link\":\"#一-树形结构\",\"children\":[]},{\"level\":2,\"title\":\"常见概念\",\"slug\":\"常见概念\",\"link\":\"#常见概念\",\"children\":[]},{\"level\":2,\"title\":\"二.二叉树\",\"slug\":\"二-二叉树\",\"link\":\"#二-二叉树\",\"children\":[]},{\"level\":2,\"title\":\"二叉树的常见概念\",\"slug\":\"二叉树的常见概念\",\"link\":\"#二叉树的常见概念\",\"children\":[]},{\"level\":2,\"title\":\"三.二叉搜索树\",\"slug\":\"三-二叉搜索树\",\"link\":\"#三-二叉搜索树\",\"children\":[{\"level\":3,\"title\":\"1.什么是二叉搜索树？\",\"slug\":\"_1-什么是二叉搜索树\",\"link\":\"#_1-什么是二叉搜索树\",\"children\":[]},{\"level\":3,\"title\":\"2.二叉搜索树的主要操作\",\"slug\":\"_2-二叉搜索树的主要操作\",\"link\":\"#_2-二叉搜索树的主要操作\",\"children\":[]},{\"level\":3,\"title\":\"3.实现二叉搜索树\",\"slug\":\"_3-实现二叉搜索树\",\"link\":\"#_3-实现二叉搜索树\",\"children\":[]},{\"level\":3,\"title\":\"4.复杂数据的存储\",\"slug\":\"_4-复杂数据的存储\",\"link\":\"#_4-复杂数据的存储\",\"children\":[]}]},{\"level\":2,\"title\":\"四.二叉树的遍历\",\"slug\":\"四-二叉树的遍历\",\"link\":\"#四-二叉树的遍历\",\"children\":[{\"level\":3,\"title\":\"1.二叉树的遍历方式\",\"slug\":\"_1-二叉树的遍历方式\",\"link\":\"#_1-二叉树的遍历方式\",\"children\":[]},{\"level\":3,\"title\":\"2.前序遍历\",\"slug\":\"_2-前序遍历\",\"link\":\"#_2-前序遍历\",\"children\":[]},{\"level\":3,\"title\":\"3.中序遍历\",\"slug\":\"_3-中序遍历\",\"link\":\"#_3-中序遍历\",\"children\":[]},{\"level\":3,\"title\":\"4.后续遍历\",\"slug\":\"_4-后续遍历\",\"link\":\"#_4-后续遍历\",\"children\":[]},{\"level\":3,\"title\":\"5.层序遍历\",\"slug\":\"_5-层序遍历\",\"link\":\"#_5-层序遍历\",\"children\":[]}]},{\"level\":2,\"title\":\"五.遍历树对节点进行操作\",\"slug\":\"五-遍历树对节点进行操作\",\"link\":\"#五-遍历树对节点进行操作\",\"children\":[]},{\"level\":2,\"title\":\"六.翻转二叉树\",\"slug\":\"六-翻转二叉树\",\"link\":\"#六-翻转二叉树\",\"children\":[]},{\"level\":2,\"title\":\"七.前驱节点 & 后继节点\",\"slug\":\"七-前驱节点-后继节点\",\"link\":\"#七-前驱节点-后继节点\",\"children\":[]},{\"level\":2,\"title\":\"八.删除节点\",\"slug\":\"八-删除节点\",\"link\":\"#八-删除节点\",\"children\":[]}],\"readingTime\":{\"minutes\":5.98,\"words\":1794},\"filePathRelative\":\"posts/node-quick/tree.md\",\"localizedDate\":\"January 6, 2019\",\"excerpt\":\"\\n<h2>一.树形结构</h2>\\n<p>像数组、栈、队列、默认都是线性结构类型。常见的树形结构有二叉树和多叉树（大于两个叉的树）。</p>\\n<p>开发中常见的树形结构有: 文件夹目录、DOM结构、路由的配置...... （树的数据结构是非常重要的）</p>\\n<h2>常见概念</h2>\\n<ul>\\n<li>\\n<p>节点 （根节点、父节点、字节点、兄弟节点）</p>\\n</li>\\n<li>\\n<p>子树 （左子树、右子树）,子树的个数称之为度</p>\\n</li>\\n<li>\\n<p>叶子节点 （度为0的节点） 非叶子节点 （度不为0的节点）</p>\\n</li>\\n<li>\\n<p>节点的深度 （从根节点到当前节点所经过的节点总数）</p>\\n</li>\\n<li>\\n<p>节点的高度 （从当前节点到最远叶子节点经过的节点总数）</p>\\n</li>\\n<li>\\n<p>树的层数 （树的高度、树的深度）</p>\\n</li>\\n<li>\\n<p>有序树( 节点按照顺序排列）、无序树</p>\\n</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
