import comp from "/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/react/react1.html.vue"
const data = JSON.parse("{\"path\":\"/posts/react/react1.html\",\"title\":\"React面试\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"React面试\",\"date\":\"2019-01-06T00:00:00.000Z\",\"tags\":[\"react\"],\"gitInclude\":[],\"description\":\"01 | 你真的了解 React 吗？ 你真的了解 React 吗？我们在面试中往往涉及 React 时，第一个问题就是“解释 React 是什么”。解释一种技术是什么，在面试中也是非常常见的引起 话题的题目。所以本讲我就带你通过讲解“如何解释 React 是什么”，让你掌握这一类概念题在面试中的解答技巧。 破题 “如何解释 React 是什么？”还有...\"},\"headers\":[{\"level\":2,\"title\":\"01 | 你真的了解 React 吗？\",\"slug\":\"_01-你真的了解-react-吗\",\"link\":\"#_01-你真的了解-react-吗\",\"children\":[]},{\"level\":2,\"title\":\"02 | 为什么 React 要用 JSX？\",\"slug\":\"_02-为什么-react-要用-jsx\",\"link\":\"#_02-为什么-react-要用-jsx\",\"children\":[]},{\"level\":2,\"title\":\"03 | 如何避免生命周期中的坑？\",\"slug\":\"_03-如何避免生命周期中的坑\",\"link\":\"#_03-如何避免生命周期中的坑\",\"children\":[]},{\"level\":2,\"title\":\"04 | 类组件与函数组件有什么区别呢？\",\"slug\":\"_04-类组件与函数组件有什么区别呢\",\"link\":\"#_04-类组件与函数组件有什么区别呢\",\"children\":[]},{\"level\":2,\"title\":\"05 | 如何设计 React 组件？\",\"slug\":\"_05-如何设计-react-组件\",\"link\":\"#_05-如何设计-react-组件\",\"children\":[]},{\"level\":2,\"title\":\"06 | setState 是同步更新还是异步更新？\",\"slug\":\"_06-setstate-是同步更新还是异步更新\",\"link\":\"#_06-setstate-是同步更新还是异步更新\",\"children\":[]},{\"level\":2,\"title\":\"07 | 如何面向组件跨层级通信？\",\"slug\":\"_07-如何面向组件跨层级通信\",\"link\":\"#_07-如何面向组件跨层级通信\",\"children\":[]},{\"level\":2,\"title\":\"08 | 列举一种你了解的 React 状态管理框架\",\"slug\":\"_08-列举一种你了解的-react-状态管理框架\",\"link\":\"#_08-列举一种你了解的-react-状态管理框架\",\"children\":[]},{\"level\":2,\"title\":\"09 | Virtual DOM 的工作原理是什么？\",\"slug\":\"_09-virtual-dom-的工作原理是什么\",\"link\":\"#_09-virtual-dom-的工作原理是什么\",\"children\":[]},{\"level\":2,\"title\":\"10 | 与其他框架相比，React 的 diff 算法有何不同？\",\"slug\":\"_10-与其他框架相比-react-的-diff-算法有何不同\",\"link\":\"#_10-与其他框架相比-react-的-diff-算法有何不同\",\"children\":[]},{\"level\":2,\"title\":\"11 | 如何解释 React 的渲染流程？\",\"slug\":\"_11-如何解释-react-的渲染流程\",\"link\":\"#_11-如何解释-react-的渲染流程\",\"children\":[]},{\"level\":2,\"title\":\"12 | React 的渲染异常会造成什么后果？\",\"slug\":\"_12-react-的渲染异常会造成什么后果\",\"link\":\"#_12-react-的渲染异常会造成什么后果\",\"children\":[]},{\"level\":2,\"title\":\"13 | 如何分析和调优性能瓶颈？\",\"slug\":\"_13-如何分析和调优性能瓶颈\",\"link\":\"#_13-如何分析和调优性能瓶颈\",\"children\":[]},{\"level\":2,\"title\":\"14 | 如何避免重复渲染？\",\"slug\":\"_14-如何避免重复渲染\",\"link\":\"#_14-如何避免重复渲染\",\"children\":[]},{\"level\":2,\"title\":\"15 | 如何提升 React 代码可维护性？\",\"slug\":\"_15-如何提升-react-代码可维护性\",\"link\":\"#_15-如何提升-react-代码可维护性\",\"children\":[]},{\"level\":2,\"title\":\"16 | React Hook 的使用限制有哪些？\",\"slug\":\"_16-react-hook-的使用限制有哪些\",\"link\":\"#_16-react-hook-的使用限制有哪些\",\"children\":[]},{\"level\":2,\"title\":\"17 | useEffect 与 useLayoutEffect 区别在哪里？\",\"slug\":\"_17-useeffect-与-uselayouteffect-区别在哪里\",\"link\":\"#_17-useeffect-与-uselayouteffect-区别在哪里\",\"children\":[]},{\"level\":2,\"title\":\"18 | 谈谈 React Hook 的设计模式\",\"slug\":\"_18-谈谈-react-hook-的设计模式\",\"link\":\"#_18-谈谈-react-hook-的设计模式\",\"children\":[]},{\"level\":2,\"title\":\"19 | React-Router 的实现原理及工作方式分别是什么？\",\"slug\":\"_19-react-router-的实现原理及工作方式分别是什么\",\"link\":\"#_19-react-router-的实现原理及工作方式分别是什么\",\"children\":[]},{\"level\":2,\"title\":\"20 | React 中你常用的工具库有哪些？\",\"slug\":\"_20-react-中你常用的工具库有哪些\",\"link\":\"#_20-react-中你常用的工具库有哪些\",\"children\":[]}],\"readingTime\":{\"minutes\":234.99,\"words\":70498},\"filePathRelative\":\"posts/react/react1.md\",\"localizedDate\":\"January 6, 2019\",\"excerpt\":\"<h2>01 | 你真的了解 React 吗？</h2>\\n<p>你真的了解 React 吗？我们在面试中往往涉及 React 时，第一个问题就是“解释 React 是什么”。解释一种技术是什么，在面试中也是非常常见的引起 话题的题目。所以本讲我就带你通过讲解“如何解释 React 是什么”，让你掌握这一类概念题在面试中的解答技巧。</p>\\n<p><strong>破题</strong></p>\\n<p>“如何解释 React 是什么？”还有一种常见的问法是这样的：“谈一谈你对 React 的理解”。</p>\\n<p>这个题目看似很容易，却很不好回答，因为大部分人拿到这个问题首先会“线性思考”，即一种直线的、单向的思维方式，表现为：想到哪儿讲到哪儿，缺乏全盘考虑。然后凭直觉作答，这样显然是不行的。可以看看这样一个在面试中很常见的场景。</p>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
