export const redirects = JSON.parse("{\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/1.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/1.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/async-await.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/async-await.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/class.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/class.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/classInherit.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/classInherit.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/decorator.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/decorator.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/ejs.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/ejs.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/promise.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/promise.html\",\"/posts/%5Bes6%5D%E7%B3%BB%E5%88%97/questions.html\":\"/posts/es6_%E7%B3%BB%E5%88%97/questions.html\"}")

export const routes = Object.fromEntries([
  ["/", { loader: () => import(/* webpackChunkName: "index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/index.html.js"), meta: {"t":"博客主页","i":"house"} }],
  ["/intro.html", { loader: () => import(/* webpackChunkName: "intro.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/intro.html.js"), meta: {"v":"/assets/images/cover3.jpg","e":"\n<p>将你的个人介绍和档案放置在此处。</p>\n","r":{"minutes":0.08,"words":23},"t":"介绍页","i":"circle-info","y":"a"} }],
  ["/demo/", { loader: () => import(/* webpackChunkName: "demo_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/demo/index.html.js"), meta: {"c":["使用指南"],"r":{"minutes":0.07,"words":22},"t":"主要功能与配置演示","i":"laptop-code","y":"a"} }],
  ["/demo/disable.html", { loader: () => import(/* webpackChunkName: "demo_disable.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/demo/disable.html.js"), meta: {"c":["使用指南"],"g":["禁用"],"e":"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n","r":{"minutes":0.43,"words":128},"t":"布局与功能禁用","i":"gears","O":4,"y":"a"} }],
  ["/demo/encrypt.html", { loader: () => import(/* webpackChunkName: "demo_encrypt.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/demo/encrypt.html.js"), meta: {"c":["使用指南"],"g":["加密"],"n":true,"r":{"minutes":0.51,"words":154},"t":"密码加密的文章","i":"lock","y":"a"} }],
  ["/demo/layout.html", { loader: () => import(/* webpackChunkName: "demo_layout.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/demo/layout.html.js"), meta: {"c":["指南"],"g":["布局"],"e":"<p>布局包括:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/navbar.html\" target=\"_blank\" rel=\"noopener noreferrer\">导航栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html\" target=\"_blank\" rel=\"noopener noreferrer\">侧边栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/footer.html\" target=\"_blank\" rel=\"noopener noreferrer\">页脚</a></li>\n</ul>","r":{"minutes":0.53,"words":159},"t":"布局","i":"object-group","O":2,"y":"a"} }],
  ["/demo/markdown.html", { loader: () => import(/* webpackChunkName: "demo_markdown.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/demo/markdown.html.js"), meta: {"c":["使用指南"],"g":["Markdown"],"e":"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n","r":{"minutes":3.47,"words":1041},"t":"Markdown 展示","i":"fa6-brands:markdown","O":2,"y":"a"} }],
  ["/demo/page.html", { loader: () => import(/* webpackChunkName: "demo_page.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/demo/page.html.js"), meta: {"a":"Ms.Hope","d":1577836800000,"l":"2020年1月1日","c":["使用指南"],"g":["页面配置","使用指南"],"u":true,"v":"/assets/images/cover1.jpg","e":"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n","r":{"minutes":1.76,"words":529},"t":"页面配置","i":"file","O":3,"y":"a"} }],
  ["/posts/book.html", { loader: () => import(/* webpackChunkName: "posts_book.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/book.html.js"), meta: {"d":1556668800000,"l":"2019年5月1日","g":["电子书"],"e":"<blockquote>\n<p>扫码关注公众号《程序员成长指北》，回复: 电子书。 即可领取部分电子书</p>\n</blockquote>\n<h2>Javascript系列</h2>\n<p><a href=\"/recommend/book\" target=\"_blank\" rel=\"noopener noreferrer\">《JavaScript高级程序设计（第3版）》</a>作者: Nicholas C. Zakas 豆瓣评分9.3, 内容由浅入深，讲得很生动、透彻，提升 JS 水平的经典红宝书。</p>\n<p><a href=\"/recommend/book\" target=\"_blank\" rel=\"noopener noreferrer\">《你不知道的JavaScript》</a> 分上中下三本, 个人推荐上必看,中可看, 下选看。</p>","r":{"minutes":0.88,"words":263},"t":"书籍推荐","y":"a"} }],
  ["/posts/project.html", { loader: () => import(/* webpackChunkName: "posts_project.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/project.html.js"), meta: {"d":1562716800000,"l":"2019年7月10日","g":["其他"],"e":"\n<blockquote>\n<p>许多小伙伴都在找各个框架的项目, 想要学习; 这里给大家整理了一些, 希望对大家有帮助</p>\n</blockquote>\n<h2>vue开源项目</h2>\n<ul>\n<li><a href=\"https://github.com/bailicangdu/vue2-elm\" target=\"_blank\" rel=\"noopener noreferrer\">重写饿了么webappp</a>  github <code>star 30.6k</code></li>\n<li><a href=\"https://github.com/github1586/nuxt-bnhcp\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js + express + vue + Nuxt 实现的在线商城</a> github <code>star 1.6k</code></li>\n</ul>","r":{"minutes":1.07,"words":320},"t":"开源项目汇总","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/1.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_1.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/1.html.js"), meta: {"d":1564876800000,"l":"2019年8月4日","g":["ES6"],"e":"<h2>es6 目录</h2>\n<h2>reduce - compose</h2>\n<p>初级compose</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> compose</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">fns</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fn</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fns</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pop</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fns</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">reduceRight</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">), </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.81,"words":243},"t":"常见面试题","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/async-await.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_async-await.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/async-await.html.js"), meta: {"d":1557446400000,"l":"2019年5月10日","g":["ES6","await","async"],"e":"<h3>声明async函数的几个方法</h3>\n<p>//普通的函数声明</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">async</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> A</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":3.45,"words":1035},"t":"async和await的讲解","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/class.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_class.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/class.html.js"), meta: {"d":1560124800000,"l":"2019年6月10日","g":["ES6","class"],"e":"<h2>前言</h2>\n<p>先上两段代码：<br>\njava中定义类:</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Person</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> int</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">   </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Person</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">int</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getInfo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){ </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":5.71,"words":1713},"t":"es6中的class学习(对比java)","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/classInherit.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_classInherit.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/classInherit.html.js"), meta: {"d":1560124800000,"l":"2019年6月10日","g":["ES6","class"],"e":"<h2>前言</h2>\n<p>先上两段代码：<br>\njava中定义类:</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Person</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> int</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">   </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Person</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">int</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getInfo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){ </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":5.71,"words":1713},"t":"es6中的class学习(对比java)","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/decorator.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_decorator.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/decorator.html.js"), meta: {"d":1560124800000,"l":"2019年6月10日","g":["ES6","class"],"e":"<h2>类的修饰</h2>\n<blockquote>\n<p>decorator(target) {}</p>\n</blockquote>\n<p>许多面向对象的语言都有修饰器（Decorator）函数，用来修改类的行为。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">testable</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> MyClass</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> testable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">isTestable</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">grade</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 为类添加实例属性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">MyClass</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">isTestable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// true</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.75,"words":825},"t":"装饰器","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/ejs.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_ejs.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/ejs.html.js"), meta: {"d":1560124800000,"l":"2019年6月10日","g":["ES6","class"],"e":"<h2>模拟实现ejs</h2>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ejs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'ejs'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'fs'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> templateStr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">readFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'./index.html'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'utf8'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//把&lt;%%&gt;语法替换掉，把我们需要的内容用str拼接</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//实现一个with(obj)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//new Function 让字符串变函数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> render</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">templateStr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> start</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> `let str</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\r\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    start</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> `with(obj){</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\r\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    start</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'str=`'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  //匹配&lt;%%&gt;，替换&lt;%成反引号，替换%&gt;成templ+=`,构成模板字符串</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  //&lt;%=%&gt;替换成${xxx}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  templateStr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> templateStr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">replace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">/&lt;%=(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">\\s\\S</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">]</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#D19A66\">*?</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">)%&gt;/</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">g</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> () {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '${'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '}'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  })</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    templateStr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> templateStr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">replace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">/&lt;%(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">\\s\\S</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">]</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#D19A66\">+?</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">)%&gt;/</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">g</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">       </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '`</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\r\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\r\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">str+=`'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> tail</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '`</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\r\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\r\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> return str'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fnStr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'obj'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">start</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> templateStr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> tail</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // console.log(fnStr.toString())</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fnStr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">   </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">templateStr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> render</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">templateStr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.66,"words":199},"t":"模板字符串","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/promise.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_promise.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/promise.html.js"), meta: {"d":1564876800000,"l":"2019年8月4日","g":["ES6"],"e":"<h2>为什么出现Promise</h2>\n<p>在javascript开发过程中，代码是单线程执行的，同步操作，彼此之间不会等待，这可以说是它的优势，但是也有它的弊端，如一些网络操作，浏览器事件，文件等操作等，都必须异步执行，针对这些情况，起初的操作都是使用回调函数实现。</p>\n<p>实现方式如下（伪代码）：</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> One</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">callback</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">success</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        callback</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        callback</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">One</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //执行完One函数内的内容，成功的结果回调回来向下执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":6.83,"words":2048},"t":"ES6中的Promise","y":"a"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/questions.html", { loader: () => import(/* webpackChunkName: "posts_es6_系列_questions.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/questions.html.js"), meta: {"d":1564876800000,"l":"2019年8月4日","g":["ES6"],"e":"<h2>数组的并集 交集 差集</h2>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> arr1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//[1,2,3,4]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> arr2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//[2,3,4,5] 差集 [1]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//并集</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> union</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">([</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">])];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//交集 [2,3]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> inserction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">s1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">x</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> =&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> s2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">has</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">inserction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">())</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> deff</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">s1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">x</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> =&gt;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">s2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">has</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.89,"words":568},"t":"常见面试题","y":"a"} }],
  ["/posts/css/1.html", { loader: () => import(/* webpackChunkName: "posts_css_1.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/css/1.html.js"), meta: {"d":1558224000000,"l":"2019年5月19日","g":["CSS"],"e":"<h2>快速导航</h2>\n<ul>\n<li><a href=\"#%E5%BF%AB%E9%80%9F%E5%AF%BC%E8%88%AA\">快速导航</a></li>\n<li><a href=\"#1bfc%E6%9C%BA%E5%88%B6\">1.BFC机制</a></li>\n<li><a href=\"#2css3%E4%B8%AD%E6%96%B0%E5%A2%9E%E7%9A%84%E9%80%89%E6%8B%A9%E5%99%A8%E4%BB%A5%E5%8F%8A%E5%B1%9E%E6%80%A7\">2.CSS3中新增的选择器以及属性</a></li>\n<li><a href=\"#3%E5%B1%85%E4%B8%AD%E5%B8%83%E5%B1%80\">3.居中布局</a></li>\n<li><a href=\"#4%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95%E5%90%84%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E7%BC%BA%E7%82%B9\">4.清除浮动有哪些方法,各有什么优缺点</a></li>\n<li><a href=\"#5%E7%94%A8%E7%BA%AFcss%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88\">5.用纯CSS创建一个三角形的原理是什么</a></li>\n<li><a href=\"#6%E5%AE%9E%E7%8E%B0%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95-%E5%88%86%E5%88%AB%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%8B\">6.实现三栏布局有哪些方法, 分别描述一下</a></li>\n<li><a href=\"#7css3%E5%AE%9E%E7%8E%B005px%E7%9A%84%E7%BB%86%E7%BA%BF\">7.css3实现0.5px的细线</a></li>\n<li><a href=\"#8link-%E4%B8%8E-import-%E7%9A%84%E5%8C%BA%E5%88%AB\">8.link 与 @import 的区别</a></li>\n<li><a href=\"#9%E5%BC%80%E5%8F%91%E4%B8%AD%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%9D%E5%A7%8B%E5%8C%96css%E6%A0%B7%E5%BC%8F\">9.开发中为什么要初始化css样式</a></li>\n<li><a href=\"#10css%E4%BC%98%E5%8C%96%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B\">10.CSS优化、提高性能的方法有哪些</a></li>\n</ul>","r":{"minutes":12.74,"words":3823},"t":"10个css高频面试题","y":"a"} }],
  ["/posts/css/css.html", { loader: () => import(/* webpackChunkName: "posts_css_css.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/css/css.html.js"), meta: {"d":1558224000000,"l":"2019年5月19日","g":["CSS"],"e":"\n<h2>1. BFC 机制</h2>\n<p>BFC(Block Formatting Context)，<strong>块级格式化上下文</strong>，是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。</p>\n<ul>\n<li>触发条件 (以下任意一条)\n<ul>\n<li>float 的值不为 none</li>\n<li>overflow 的值不为 visible</li>\n<li>display 的值为 table-cell、tabble-caption 和 inline-block 之一</li>\n<li>position 的值不为 static 或则 releative 中的任何一个</li>\n</ul>\n</li>\n</ul>","r":{"minutes":19.47,"words":5840},"t":"前端面试 10个css高频面试题","y":"a"} }],
  ["/posts/css/", { loader: () => import(/* webpackChunkName: "posts_css_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/css/index.html.js"), meta: {"e":"\n<h3>vue相关</h3>\n<ul>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#%E5%AF%B9%E4%BA%8Emvvm%E7%9A%84%E7%90%86%E8%A7%A3\" target=\"_blank\">对于MVVM的理解</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8C%87%E4%BB%A4%E6%9C%89%E5%93%AA%E4%BA%9B\" target=\"_blank\">开发中常用的指令有哪些</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#%E8%AF%B7%E8%AF%A6%E7%BB%86%E8%AF%B4%E4%B8%8B%E4%BD%A0%E5%AF%B9vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E7%90%86%E8%A7%A3\" target=\"_blank\">请详细说下你对vue生命周期的理解</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#vue%E7%9A%84%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88\" target=\"_blank\">Vue的双向数据绑定原理是什么</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#proxy%E7%9B%B8%E6%AF%94%E4%BA%8Edefineproperty%E7%9A%84%E4%BC%98%E5%8A%BF\" target=\"_blank\">Proxy相比于defineProperty的优势</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#vue-router%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB\" target=\"_blank\">vue-router有哪几种导航守卫?</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#vue%E7%9A%84%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0-hash%E6%A8%A1%E5%BC%8F%E5%92%8Chistory%E6%A8%A1%E5%BC%8F\" target=\"_blank\">Vue的路由实现：hash模式 和 history模式</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC%E9%80%9A%E4%BF%A1\" target=\"_blank\">组件之间的传值通信</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#vue%E4%B8%8Eangular%E4%BB%A5%E5%8F%8Areact%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\" target=\"_blank\">Vue与Angular以及React的区别？</a></li>\n<li><a href=\"/zy-vuepress/posts/css/vue.html#vuex%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%EF%BC%9F%E5%93%AA%E7%A7%8D%E5%8A%9F%E8%83%BD%E5%9C%BA%E6%99%AF%E4%BD%BF%E7%94%A8%E5%AE%83%EF%BC%9F\" target=\"_blank\">vuex是什么？怎么使用？哪种功能场景使用它？</a></li>\n</ul>","r":{"minutes":2.67,"words":800},"t":"css相关","y":"a"} }],
  ["/posts/css/render.html", { loader: () => import(/* webpackChunkName: "posts_css_render.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/css/render.html.js"), meta: {"d":1572220800000,"l":"2019年10月28日","g":["浏览器"],"e":"\n<h2>系列文章</h2>\n<p>(<a href=\"http://img.xiaogangzai.cn/16e05cfa4cbc2139_cssrender.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">http://img.xiaogangzai.cn/16e05cfa4cbc2139_cssrender.jpg</a>)</p>\n<p>说一下为什么写这个系列？</p>\n<ul>\n<li>原因一：该文章系列不管你是前端开发者，还是后端开发者在面试中经常会被问到一个问题 <code>“从浏览器输入url到页面显示经历了哪些？”</code> 一个<code>非常</code>常见的问题，看了该系列绝对能惊到面试官，可能就因为这一道面试题就收了你呢！嘿嘿。</li>\n<li>原因二：自己主要是后端方向，该系列文章也是为了学习记录，方便以后查阅。极客时间李兵老师也开了这个专栏，看后还有几个疑问的点，自己查询资料学习整理一遍。</li>\n</ul>","r":{"minutes":9.9,"words":2971},"t":"渲染树的形成原理","y":"a"} }],
  ["/posts/brower/renderTree.html", { loader: () => import(/* webpackChunkName: "posts_brower_renderTree.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/brower/renderTree.html.js"), meta: {"d":1572220800000,"l":"2019年10月28日","g":["CSS","渲染树","浏览器"],"e":"<figure><img src=\"http://img.xiaogangzai.cn/16e05cfa4cbc2139.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>说一下为什么写这个系列？</p>\n<ul>\n<li>原因一：该文章系列不管你是前端开发者，还是后端开发者在面试中经常会被问到一个问题 <code>“从浏览器输入url到页面显示经历了哪些？”</code> 一个<code>非常</code>常见的问题，看了该系列绝对能惊到面试官，可能就因为这一道面试题就收了你呢！嘿嘿。</li>\n<li>原因二：自己主要是后端方向，该系列文章也是为了学习记录，方便以后查阅。极客时间李兵老师也开了这个专栏，看后还有几个疑问的点，自己查询资料学习整理一遍。</li>\n</ul>","r":{"minutes":9.3,"words":2790},"t":"渲染树的形成原理","y":"a"} }],
  ["/posts/demo/", { loader: () => import(/* webpackChunkName: "posts_demo_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/demo/index.html.js"), meta: {"c":["使用指南"],"r":{"minutes":0.07,"words":22},"t":"主要功能与配置演示","i":"laptop-code","y":"a"} }],
  ["/posts/demo/disable.html", { loader: () => import(/* webpackChunkName: "posts_demo_disable.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/demo/disable.html.js"), meta: {"c":["使用指南"],"g":["禁用"],"e":"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n","r":{"minutes":0.43,"words":128},"t":"布局与功能禁用","i":"gears","O":4,"y":"a"} }],
  ["/posts/demo/encrypt.html", { loader: () => import(/* webpackChunkName: "posts_demo_encrypt.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/demo/encrypt.html.js"), meta: {"c":["使用指南"],"g":["加密"],"e":"\n<p>实际的文章内容。</p>\n<p>段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。</p>\n<p>段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。</p>\n","r":{"minutes":0.51,"words":154},"t":"密码加密的文章","i":"lock","y":"a"} }],
  ["/posts/demo/layout.html", { loader: () => import(/* webpackChunkName: "posts_demo_layout.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/demo/layout.html.js"), meta: {"c":["指南"],"g":["布局"],"e":"<p>布局包括:</p>\n<ul>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/navbar.html\" target=\"_blank\" rel=\"noopener noreferrer\">导航栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html\" target=\"_blank\" rel=\"noopener noreferrer\">侧边栏</a></li>\n<li><a href=\"https://theme-hope.vuejs.press/zh/guide/layout/footer.html\" target=\"_blank\" rel=\"noopener noreferrer\">页脚</a></li>\n</ul>","r":{"minutes":0.53,"words":159},"t":"布局","i":"object-group","O":2,"y":"a"} }],
  ["/posts/demo/markdown.html", { loader: () => import(/* webpackChunkName: "posts_demo_markdown.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/demo/markdown.html.js"), meta: {"c":["使用指南"],"g":["Markdown"],"e":"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n","r":{"minutes":3.47,"words":1041},"t":"Markdown 展示","i":"fa6-brands:markdown","O":2,"y":"a"} }],
  ["/posts/demo/page.html", { loader: () => import(/* webpackChunkName: "posts_demo_page.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/demo/page.html.js"), meta: {"a":"Ms.Hope","d":1577836800000,"l":"2020年1月1日","c":["使用指南"],"g":["页面配置","使用指南"],"u":true,"v":"/assets/images/cover1.jpg","e":"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n","r":{"minutes":1.76,"words":529},"t":"页面配置","i":"file","O":3,"y":"a"} }],
  ["/posts/database/baseFrame.html", { loader: () => import(/* webpackChunkName: "posts_database_baseFrame.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/baseFrame.html.js"), meta: {"d":1557619200000,"l":"2019年5月12日","g":["MySQL"],"e":"<h2>提出问题：</h2>\n<p>对于一个做后台不久的我，起初做项目只是实现了功能，所谓的增删改查，和基本查询索引的建立。直到有一个面试官问我一个问题，一条sql查询语句在mysql数据库中具体是怎么执行的？我被虐了，很开心，感谢他。于是开始了深入学习mysql。本篇文章通过</p>\n<blockquote>\n<p>一条sql查询语句在mysql数据库中具体是怎么执行的？</p>\n</blockquote>\n<p>来具体讲解mysql的基础架构。</p>\n<h2>mysql的基础架构</h2>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>mysql&gt; select * from Student where ID=1;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":9.77,"words":2932},"t":"MySQL 基础架构你不知道的那些事！","y":"a"} }],
  ["/posts/database/choice.html", { loader: () => import(/* webpackChunkName: "posts_database_choice.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/choice.html.js"), meta: {"d":1559001600000,"l":"2019年5月28日","g":["数据库"],"e":"<h2>概念</h2>\n<h3>关系型数据库</h3>\n<p>SQL (Structured Query Language) 数据库，指关系型数据库 - 主要代表：SQL Server，Oracle，MySQL(开源)，PostgreSQL(开源)。</p>\n<h3>非关系型数据库</h3>\n<p>NoSQL（Not Only SQL）泛指非关系型数据库 - 主要代表：MongoDB，Redis，CouchDB。</p>\n<h2>二者对比</h2>\n<h3>存储方式：</h3>\n<p>SQL数据存在特定结构的表中；而 NoSQL 则更加灵活和可扩展，存储方式可以省是JSON文档、哈希表或者其他方式。</p>","r":{"minutes":5.81,"words":1742},"t":"SQL 和 NoSQL 的区别与选择","y":"a"} }],
  ["/posts/database/detail-redis1.html", { loader: () => import(/* webpackChunkName: "posts_database_detail-redis1.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/detail-redis1.html.js"), meta: {"d":1557187200000,"l":"2019年5月7日","g":["Redis"],"e":"<h2>什么是Redis</h2>\n<ul>\n<li>\n<p>基本概念</p>\n<p>redis是一个开源的、使用C语言编写的、支持网络交互的、可基于内存也可持久化的Key-Value数据库（非关系性数据库）。</p>\n</li>\n<li>\n<p>redis的优势</p>\n</li>\n</ul>\n<ol>\n<li>\n<p>速度快，因为数据存在内存中，类似于HashMap，HashMap的优势就是查找和操作的时间复杂度都是O(1)</p>\n</li>\n<li>\n<p>支持丰富数据类型，支持string，list，set，sorted set，hash</p>\n</li>\n<li>\n<p>支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行</p>\n</li>\n<li>\n<p>丰富的特性：可用于缓存，消息，按key设置过期时间，过期后将会自动删除</p>\n</li>\n</ol>","r":{"minutes":5.88,"words":1765},"t":"Redis详细学习 入门篇","y":"a"} }],
  ["/posts/database/detail-redis2.html", { loader: () => import(/* webpackChunkName: "posts_database_detail-redis2.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/detail-redis2.html.js"), meta: {"d":1557360000000,"l":"2019年5月9日","g":["Redis"],"e":"<h2>redis多数据库</h2>\n<p>说明：一个redis实例可以包含多个数据库，客户端可以指定连接某个数据库（与MySql客户端我们创建多个数据库类似）一个redis实例最多可以提供16个数据库，下标是从0到15，默认连接的是第0号数据库。</p>\n<p>代码相关演示:</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>127.0.0.1:6379&gt; select 1  //选择数据库1</span></span>\n<span class=\"line\"><span>OK</span></span>\n<span class=\"line\"><span>127.0.0.1:6379[1]&gt; keys *</span></span>\n<span class=\"line\"><span>(empty list or set)</span></span>\n<span class=\"line\"><span>127.0.0.1:6379[1]&gt; select 0</span></span>\n<span class=\"line\"><span>OK</span></span>\n<span class=\"line\"><span>127.0.0.1:6379&gt; set string1 2 </span></span>\n<span class=\"line\"><span>OK</span></span>\n<span class=\"line\"><span>127.0.0.1:6379&gt; keys *  //查询所有的key</span></span>\n<span class=\"line\"><span>1) \"hsah1\"</span></span>\n<span class=\"line\"><span>2) \"list1\"</span></span>\n<span class=\"line\"><span>3) \"set1\"</span></span>\n<span class=\"line\"><span>4) \"list2\"</span></span>\n<span class=\"line\"><span>5) \"string1\"</span></span>\n<span class=\"line\"><span>6) \"hash1\"</span></span>\n<span class=\"line\"><span>7) \"string2\"</span></span>\n<span class=\"line\"><span>127.0.0.1:6379&gt; move list1 1  //移动list1到数据库1</span></span>\n<span class=\"line\"><span>(integer) 1</span></span>\n<span class=\"line\"><span>127.0.0.1:6379&gt; move set1 1</span></span>\n<span class=\"line\"><span>(integer) 1</span></span>\n<span class=\"line\"><span>127.0.0.1:6379&gt; keys *</span></span>\n<span class=\"line\"><span>1) \"hsah1\"</span></span>\n<span class=\"line\"><span>2) \"list2\"</span></span>\n<span class=\"line\"><span>3) \"string1\"</span></span>\n<span class=\"line\"><span>4) \"hash1\"</span></span>\n<span class=\"line\"><span>5) \"string2\"</span></span>\n<span class=\"line\"><span>127.0.0.1:6379&gt; select 1 </span></span>\n<span class=\"line\"><span>OK</span></span>\n<span class=\"line\"><span>127.0.0.1:6379[1]&gt; keys *</span></span>\n<span class=\"line\"><span>1) \"list1\"</span></span>\n<span class=\"line\"><span>2) \"set1\"</span></span>\n<span class=\"line\"><span>127.0.0.1:6379[1]&gt; type set1 //获取数据类型</span></span>\n<span class=\"line\"><span>set</span></span>\n<span class=\"line\"><span>127.0.0.1:6379[1]&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":5.03,"words":1508},"t":"Redis详细学习 进阶篇","y":"a"} }],
  ["/posts/database/detail-redis3.html", { loader: () => import(/* webpackChunkName: "posts_database_detail-redis3.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/detail-redis3.html.js"), meta: {"d":1557532800000,"l":"2019年5月11日","g":["Redis"],"e":"<h2>前言:</h2>\n<p>本篇文章会介绍Redis在项目开发中会有那些应用场景，对每个应用场景会有一个简要概述，并且会在接下来的时间对每个场景整理出文章与对应代码供开发者阅读。</p>\n<h2>应用场景</h2>\n<h4>本人应用到的场景</h4>\n<ul>\n<li>\n<p>博客文章或者热点文章新闻等访问量计数</p>\n<p>说明：把这几种计数直接放在redis中，有些开发者可能会认为成本高，实际情况往往会有一些不一样：</p>\n<pre><code> 1、COST，对于有一定吞吐需求的应用来说，肯定会单独申请DB、Cache资源，很多担心DB写入性能的同学还会主动将DB更新记入异步队列，而这三块的资源的利用率一般都不会太高。资源算下来，你惊异的发现：反而纯内存的方案会更精简！\n 2、KISS原则，这对于开发是非常友好的，我只需要建立一套连接池，不用担心数据一致性的维护，不用维护异步队列。\n 3、Cache穿透风险，如果后端使用DB，肯定不会提供很高的吞吐能力，cache宕机如果没有妥善处理，那就悲剧了。\n</code></pre>\n</li>\n<li>\n<p>登录session缓存</p>\n<p>说明：web端用户，用于登陆缓存session数据，登陆的一些信息存到session中，缓存到redis中，没次用户再次登录判断redis只能够是否存在或者已过期。</p>\n</li>\n<li>\n<p>购物车缓存</p>\n<p>说明：<br>\n每个用户的购物车是一个哈希表，用户id作为key，存储了 itemId 与 商品加车数量之间的关系。购物车提供数量设置，购物车不随用户登录退出删除。<br>\n说明：</p>\n</li>\n<li>\n<p>产品运营总会让你展示最近、最热、点击率最高、活跃度最高等等条件的top list。</p>\n<p>说明：很多更新较频繁的列表如果使用MC+MySQL维护的话缓存失效的可能性会比较大，鉴于占用内存较小的情况，使用Redis做存储也是相当不错的。     这种最近，最热在mysql中如何记录，假如记录最活跃不可能在mysql 中活跃一次记录一条记录，最后统计看哪个用户的记录数多，这样的话mysql数据库也是很累的，数据量也是很大的，最好的办法是通过redis记录一个类型，然后直接根据用户id查询哪个多就可以，速度快很多，存储方便，一个string或者hash就搞定了。</p>\n</li>\n<li>\n<p>用户最近访问记录</p>\n<p>说明:比如想知道最近访问的20个用户，如果用mysql数据库实现很麻烦，可以使用redis实现，这时候要用到redis队列属性这么个事，先进先出原则，和redis提供的lpush lpop  这两个函数具体使用<a href=\"http://www.redis.net.cn/order/3584.html%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.redis.net.cn/order/3584.html。</a></p>\n</li>\n<li>\n<p>redis锁防刷机制实现</p>\n<p>说明: redis数据类型中有一个set类型，set结构在存储数据的时候是无序的，而且每个值是不一样的，不能重复，这样就可以快速的查找元素中某个值是否存在，精确的进行增加删除操作。例如设置一个值不重复并且设置失效时间一天就可以达到一天一个用户只能投票一次的效果</p>\n</li>\n<li>\n<p>应用家庭体系切换登录(互相挤掉用户单点登录)<br>\n说明：用户家庭账号体系的建立，前提（小程序开发，前端无法检测小程序彻底退出），家庭中的成员账号A切换登录之前还需要判断另一个账B号的最后使用时间，如果账号A在<strong>两个小</strong>时内登录过，会对账号A有一个提示，是否挤掉账号B，同时账号B再调用请求的时候，也会收到被账号A挤掉通知，退出到授权登录界面。解决方案：使用Redis，Redis中为每一个账号设置一个有效时间（2小时）的token值，通过判断每一个用户token值是否存在，来判断挤掉账号时候各种提醒内容。但是这里会有一个问题，需求要求token失效时间是2小时，上一个账号两个小时内登录过才会进行提醒(需要判断上一个账号最后更新token时间)，所以前端在每个请求调用的时候，后端都需要更新一下redis的过期时间。</p>\n</li>\n<li>\n<p>redis分布式锁</p>\n<p>说明:可以解决高并发问题，和磁盘存储数据库中的锁类似。对于一些要频繁返回给前端的数据并且请求量很大，当有大量数据库sql操作时候，为了避免每次接口请求都要去查询数据库，可以把一些数据缓存到redis中，redis非关系型数据库存储，这样是直接从内存中获取数据，速度会增快很多。</p>\n</li>\n</ul>","r":{"minutes":4.33,"words":1298},"t":"Redis详细学习 实战篇","y":"a"} }],
  ["/posts/database/logSystem.html", { loader: () => import(/* webpackChunkName: "posts_database_logSystem.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/logSystem.html.js"), meta: {"d":1557964800000,"l":"2019年5月16日","g":["数据库","日志系统"],"e":"<p>提出问题:</p>\n<ol>\n<li>服务器数据库异常重启了会造成什么样的影响？</li>\n<li>不小心删除了数据库怎么办，或者不小心删除了数据库表中数据怎么办？</li>\n<li>一条更新语句在数据库系统内部执行时与数据库日志系统有什么联系？</li>\n<li>数据库备份，是每天一备比较好，还是每周一备比较好？<br>\n接下来在讲解日志系统的同时，回答上面的几个问题。</li>\n</ol>\n<h1>日志系统详解</h1>\n<h2>redo日志(重做日志)</h2>\n<p><code>redo</code>是引擎层的日志，而且是InnoDB特有的。InnoDB的<code>redo log</code>是有固定大小的，比如可以配置为 一组4个文件（logfile-1，logfile-2，logfile-3，logfile-4），每个文件的大小是1GB，那么它总共可以记录4GB的操作。一个环状循环结构，从头开始写，写到末尾又回到开始循环写。</p>","r":{"minutes":7.63,"words":2289},"t":"删库跑路后真的没有办法弥补了吗？！","y":"a"} }],
  ["/posts/database/optimize.html", { loader: () => import(/* webpackChunkName: "posts_database_optimize.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/optimize.html.js"), meta: {"d":1558137600000,"l":"2019年5月18日","g":["数据库"],"e":"\n<blockquote>\n<p>需求1: 最近写的一个用户数据统计相关接口，需要用到按照每天进行分组统计。</p>\n</blockquote>\n<h2>直接看语句</h2>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>SELECT DATE_FORMAT( create_time, \"%Y-%m-%d\" ) ,sum(user_id) FROM orders WHERE order_state=2 GROUP BY DATE_FORMAT( create_time, \"%Y-%m-%d\" ) ;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":2.57,"words":770},"t":"常用的数据库语句","y":"a"} }],
  ["/posts/database/writeSql.html", { loader: () => import(/* webpackChunkName: "posts_database_writeSql.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/writeSql.html.js"), meta: {"d":1558828800000,"l":"2019年5月26日","g":["数据库"],"e":"<h2>前言：</h2>\n<p>上一篇讲Mysql基本架构时，以<code>sql</code>查询语句在MySql架构中具体是怎么执行的？”进行了全面的讲解。知道了sql查询语句在MySql架构中的具体执行流程，但是为了能够更好更快的写出sql语句，我觉得非常有必要知道sql语句中各子句的执行顺序。看过上一篇文章的小伙伴应该都知道，sql语句最后各子句的执行应该是在执行器中完成的，存储引擎对执行器提供的数据读写接口。现在开始我们的学习</p>\n<h2>语句中各子句完整执行顺序概括（按照顺序号执行）</h2>\n<ol>\n<li>from (注:这里也包括from中的子语句)</li>\n<li>join</li>\n<li>on</li>\n<li>where</li>\n<li>group by(开始使用select中的别名，后面的语句中都可以使用)</li>\n<li>avg,sum.... 等聚合函数</li>\n<li>having</li>\n<li>select</li>\n<li>distinct</li>\n<li>order by</li>\n<li>limit</li>\n</ol>","r":{"minutes":10.15,"words":3044},"t":"如何写优雅的SQL原生语句？","y":"a"} }],
  ["/posts/interview/1.html", { loader: () => import(/* webpackChunkName: "posts_interview_1.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/1.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>数据类型隐式转换</h2>\n<p><strong>Object 类型与 Number 类型进行比较时，Object 类型会转换为 Number 类型。转换为时会尝试调用 Object.value</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//下面代码什么时候会打印1？</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    console.log(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":6.32,"words":1895},"t":"面试题","y":"a"} }],
  ["/posts/interview/JS3.html", { loader: () => import(/* webpackChunkName: "posts_interview_JS3.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/JS3.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>1.apply、call、bind</h2>\n<p>apply、call、bind 这三个方法之间有什么区别?<br>\n<strong>call的性能比apply要好那么一丢丢 尤其参数在三个以上的时候</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fn1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // console.log(this, 'this')</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">   console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fn2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// call 的特点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 1.可以改变当前函数this指向</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 2.让当前函数执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// fn1.call(fn2); //1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// fn1.call.call(fn2); //2  如果多个call 会让fn2执行</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":12.2,"words":3659},"t":"JS 底层原理的实现","y":"a"} }],
  ["/posts/interview/api.html", { loader: () => import(/* webpackChunkName: "posts_interview_api.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/api.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>JQ Ajax、Axios、Fetch的核心区别</h2>\n<p><strong>Ajax前后端数据通信「同源、跨域」</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> xhr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> XMLHttpRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">xhr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'get'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'http://127.0.0.1:8888/user/list'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">xhr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onreadystatechange</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> () {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">xhr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">readyState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 4</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> xhr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">status</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 200</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> text</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> xhr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">responseText</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">JSON</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">text</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">xhr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">send</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.64,"words":791},"t":"关于前端服务请求","y":"a"} }],
  ["/posts/interview/css-others.html", { loader: () => import(/* webpackChunkName: "posts_interview_css-others.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/css-others.html.js"), meta: {"d":1558224000000,"l":"2019年5月19日","g":["CSS","面试"],"e":"\n<h2>1. BFC 机制</h2>\n<p>BFC(Block Formatting Context)，<strong>块级格式化上下文</strong>，是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。</p>\n<ul>\n<li>触发条件 (以下任意一条)\n<ul>\n<li>float 的值不为 none</li>\n<li>overflow 的值不为 visible</li>\n<li>display 的值为 table-cell、tabble-caption 和 inline-block 之一</li>\n<li>position 的值不为 static 或则 releative 中的任何一个</li>\n</ul>\n</li>\n</ul>","r":{"minutes":11.15,"words":3346},"t":"前端面试 css","y":"a"} }],
  ["/posts/interview/css.html", { loader: () => import(/* webpackChunkName: "posts_interview_css.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/css.html.js"), meta: {"d":1558224000000,"l":"2019年5月19日","g":["CSS","面试"],"e":"\n<h2>1. BFC 机制</h2>\n<p>BFC(Block Formatting Context)，<strong>块级格式化上下文</strong>，是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。</p>\n<ul>\n<li>触发条件 (以下任意一条)\n<ul>\n<li>float 的值不为 none</li>\n<li>overflow 的值不为 visible</li>\n<li>display 的值为 table-cell、tabble-caption 和 inline-block 之一</li>\n<li>position 的值不为 static 或则 releative 中的任何一个</li>\n</ul>\n</li>\n</ul>","r":{"minutes":19.47,"words":5842},"t":"前端面试 10个css高频面试题","y":"a"} }],
  ["/posts/interview/js10.html", { loader: () => import(/* webpackChunkName: "posts_interview_js10.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/js10.html.js"), meta: {"d":1558742400000,"l":"2019年5月25日","g":["Javascript","面试"],"e":"\n<p>本文中讲述到的面试题：</p>\n<ul>\n<li>说说对闭包的认识, 它解决了什么问题?</li>\n<li>跨域问题有哪些处理方式?</li>\n<li>for...in 和 for...of的区别?</li>\n<li>new一个对象, 这个过程中发生了什么?</li>\n<li>js的防抖和节流是什么?</li>\n<li>数组中常用的方法有哪些?</li>\n<li>怎么判断一个object是否是数组?</li>\n<li>继承有哪些方式?</li>\n<li>说说js中call,apply,bind之间的关系?</li>\n<li>你了解promise吗?</li>\n</ul>\n<h2>1.说说你对闭包的认识</h2>","r":{"minutes":35.56,"words":10668},"t":"js高频面试题","y":"a"} }],
  ["/posts/interview/myself.html", { loader: () => import(/* webpackChunkName: "posts_interview_myself.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/myself.html.js"), meta: {"d":1564876800000,"l":"2019年8月4日","g":["ES6"],"e":"<h2>浏览器渲染</h2>\n<p>性能优化是前端开发中避不开的问题，性能问题无外乎两方面原因：渲染速度慢、请求时间长。性能优化虽然涉及很多复杂的原因和解决方案，但其实只要通过合理地使用标签，就可以在一定程度上提升渲染速度以及减少请求时间。</p>\n<h3>script 标签：调整加载顺序提升渲染速度</h3>\n<p>由于浏览器的底层运行机制，渲染引擎在解析 HTML 时，若遇到 script 标签引用文件，则会暂停解析过程，同时通知网络线程加载文件，文件加载后会切换至 JavaScript 引擎来执行对应代码，代码执行完成之后切换至渲染引擎继续渲染页面。</p>\n<p>在这一过程中可以看到，页面渲染过程中包含了请求文件以及执行文件的时间，但页面的首次渲染可能并不依赖这些文件，这些请求和执行文件的动作反而延长了用户看到页面的时间，从而降低了用户体验。</p>","r":{"minutes":69.09,"words":20727},"t":"面试题总结","y":"a"} }],
  ["/posts/interview/notes.html", { loader: () => import(/* webpackChunkName: "posts_interview_notes.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/notes.html.js"), meta: {"d":1558915200000,"l":"2019年5月27日","g":["面试"],"e":"<p>​<br>\n又是七月面试季节，又一波大学生进入社会，面临着各种面试问题，网上有很多面经，但更多的是在讲面试的经历或者面试被问到的技术相关的。这里我给大家分享一些无关乎技术，但在面试中需要注意的一些事项。</p>\n<blockquote>\n<p>友情提示：去面试的时候，千万别空着手去啊！</p>\n</blockquote>\n<p>不要误会，不是让你给面试官送礼，毕竟我们都是金光闪闪的程序员，靠技术说话，不吃这一套。</p>\n<h2>带上个人简历</h2>\n<p>面试的时候：一定要带简历！带简历！带简历！重要的事情说三遍。我在面试其他人的时候，都会先看对方的简历，然后才开始面试。从你的简历中能够看出非常多的信息，甚至看到你的简历就能初步确定你是不是我们要找的人（因为约面试一般是hr处理的，技术面你时不一定看过你的简历）。</p>","r":{"minutes":7.12,"words":2135},"t":"面试注意事项","y":"a"} }],
  ["/posts/interview/project.html", { loader: () => import(/* webpackChunkName: "posts_interview_project.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/project.html.js"), meta: {"d":1560211200000,"l":"2019年6月11日","g":["Vue","Vuex"],"e":"\n<h2>项目中tab栏切换</h2>\n<p>问题描述: 每次切换tab栏的时候，请求了后端接口，如何保证内容的正确性<br>\n因为 连续请求后端的时候 接口是异步的 无法保证最后一个回来的内容是你想要的<br>\n解决方案:</p>\n<ul>\n<li>1.按钮禁用</li>\n<li>2.请求接口的时候，给接口传个标识，返回的结果加上这个标识，如果是想要的内容才显示</li>\n<li>3.用axios.CancelToken<br>\n1.实例化axios</li>\n</ul>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> AjaxRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  constructor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // development production</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">baseURL</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">env</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">NODE_ENV</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !==</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'production'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\"> ?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'http://localhost:3000/api'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\">      :</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '/'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 基础路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">timeout</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 超时时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  setInterceptor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">instance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    instance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">interceptors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">use</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 请求拦截</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> Cancel</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> axios</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">CancelToken</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      // 每次请求前 将token 放到请求中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">headers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">token</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> localStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getItem</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'token'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">||</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ''</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">cancelToken</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Cancel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        store</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">commit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">types</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">PUSH_TOKEN</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//订阅</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      }));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> =&gt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">reject</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> instance</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> axios</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> config</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">      ...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      baseURL</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">baseURL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      timeout</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">timeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 给这个实例增加拦截器</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setInterceptor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">instance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 给这个实例增加拦截功能</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> instance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 返回的是一个promise</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\"> default</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> AjaxRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":6.29,"words":1888},"t":"项目实战","y":"a"} }],
  ["/posts/interview/promise.html", { loader: () => import(/* webpackChunkName: "posts_interview_promise.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/promise.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Promise"],"e":"<p>Promise是ES6中的特性，现在很多前端框架像AngularJS，Vue等在HTTP请求之后都是返回的Promise处理，因此Promise是必须要掌握的一个知识点。<br>\n本文将为大家分享15道由易到难的ES6 Promise题, 帮助你快速理解Promise。<br>\n基础题<br>\n01</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> promise</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">reject</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":8.99,"words":2697},"t":"Promise","y":"a"} }],
  ["/posts/interview/questions.html", { loader: () => import(/* webpackChunkName: "posts_interview_questions.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/questions.html.js"), meta: {"d":1564876800000,"l":"2019年8月4日","g":["ES6"],"e":"<h2>数组的并集 交集 差集</h2>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> arr1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//[1,2,3,4]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> arr2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//[2,3,4,5] 差集 [1]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//并集</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> union</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">([</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">])];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//交集 [2,3]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> inserction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">s1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">x</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> =&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> s2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">has</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">inserction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">())</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> deff</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">s1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">x</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> =&gt;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">s2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">has</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.89,"words":568},"t":"常见面试题","y":"a"} }],
  ["/posts/interview/", { loader: () => import(/* webpackChunkName: "posts_interview_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/index.html.js"), meta: {"e":"\n<h3>vue相关</h3>\n<ul>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#%E5%AF%B9%E4%BA%8Emvvm%E7%9A%84%E7%90%86%E8%A7%A3\" target=\"_blank\">对于MVVM的理解</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8C%87%E4%BB%A4%E6%9C%89%E5%93%AA%E4%BA%9B\" target=\"_blank\">开发中常用的指令有哪些</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#%E8%AF%B7%E8%AF%A6%E7%BB%86%E8%AF%B4%E4%B8%8B%E4%BD%A0%E5%AF%B9vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E7%90%86%E8%A7%A3\" target=\"_blank\">请详细说下你对vue生命周期的理解</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#vue%E7%9A%84%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88\" target=\"_blank\">Vue的双向数据绑定原理是什么</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#proxy%E7%9B%B8%E6%AF%94%E4%BA%8Edefineproperty%E7%9A%84%E4%BC%98%E5%8A%BF\" target=\"_blank\">Proxy相比于defineProperty的优势</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#vue-router%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB\" target=\"_blank\">vue-router有哪几种导航守卫?</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#vue%E7%9A%84%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0-hash%E6%A8%A1%E5%BC%8F%E5%92%8Chistory%E6%A8%A1%E5%BC%8F\" target=\"_blank\">Vue的路由实现：hash模式 和 history模式</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC%E9%80%9A%E4%BF%A1\" target=\"_blank\">组件之间的传值通信</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#vue%E4%B8%8Eangular%E4%BB%A5%E5%8F%8Areact%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\" target=\"_blank\">Vue与Angular以及React的区别？</a></li>\n<li><a href=\"/zy-vuepress/posts/interview/vue.html#vuex%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%EF%BC%9F%E5%93%AA%E7%A7%8D%E5%8A%9F%E8%83%BD%E5%9C%BA%E6%99%AF%E4%BD%BF%E7%94%A8%E5%AE%83%EF%BC%9F\" target=\"_blank\">vuex是什么？怎么使用？哪种功能场景使用它？</a></li>\n</ul>","r":{"minutes":2.66,"words":799},"t":"面试","y":"a"} }],
  ["/posts/interview/rewriteJs.html", { loader: () => import(/* webpackChunkName: "posts_interview_rewriteJs.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/rewriteJs.html.js"), meta: {"d":1579737600000,"l":"2020年1月23日","g":["Javascript","面试"],"e":"\n<p><strong>前言</strong><br>\n有些内容虽然不用，但是不代表面试不考。这里为大家送上5道常见的手写面试题，希望你们在面试中能遇到某一道也好，这样这篇文章就没有白写。</p>\n<h2>模仿实现new创建对象</h2>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * 模仿 new</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@</span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">return</span><span style=\"--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic\"> {}</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> createNew</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> obj</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> context</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [].</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">shift</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 获取构造函数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">apply</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, [</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// @test</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Person</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">  this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> p</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> createNew</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Person</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'kaola'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.21,"words":364},"t":"面试之手写代码","y":"a"} }],
  ["/posts/interview/vue.html", { loader: () => import(/* webpackChunkName: "posts_interview_vue.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/interview/vue.html.js"), meta: {"d":1561680000000,"l":"2019年6月28日","g":["Vue","面试"],"e":"<h2>快速导航</h2>\n<ul>\n<li><a href=\"#%E5%BF%AB%E9%80%9F%E5%AF%BC%E8%88%AA\">快速导航</a></li>\n<li><a href=\"#%E5%AF%B9%E4%BA%8Emvvm%E7%9A%84%E7%90%86%E8%A7%A3\">对于MVVM的理解</a></li>\n<li><a href=\"#%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8C%87%E4%BB%A4%E6%9C%89%E5%93%AA%E4%BA%9B\">开发中常用的指令有哪些</a></li>\n<li><a href=\"#%E8%AF%B7%E8%AF%A6%E7%BB%86%E8%AF%B4%E4%B8%8B%E4%BD%A0%E5%AF%B9vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E7%90%86%E8%A7%A3\">请详细说下你对vue生命周期的理解</a></li>\n<li><a href=\"#vue%E7%9A%84%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88\">Vue的双向数据绑定原理是什么</a></li>\n<li><a href=\"#proxy%E7%9B%B8%E6%AF%94%E4%BA%8Edefineproperty%E7%9A%84%E4%BC%98%E5%8A%BF\">Proxy相比于defineProperty的优势</a></li>\n<li><a href=\"#vue-router%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB\">vue-router有哪几种导航守卫</a>\n<ul>\n<li><a href=\"#1%E5%85%A8%E5%B1%80%E5%AE%88%E5%8D%AB\">1.全局守卫</a></li>\n<li><a href=\"#2%E8%B7%AF%E7%94%B1%E7%8B%AC%E4%BA%AB%E5%AE%88%E5%8D%AB\">2.路由独享守卫</a></li>\n<li><a href=\"#3%E8%B7%AF%E7%94%B1%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB\">3.路由组件内的守卫</a></li>\n</ul>\n</li>\n<li><a href=\"#vue%E7%9A%84%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0hash%E6%A8%A1%E5%BC%8F%E5%92%8Chistory%E6%A8%A1%E5%BC%8F\">Vue的路由实现:hash模式和history模式</a>\n<ul>\n<li><a href=\"#hash%E6%A8%A1%E5%BC%8F\">hash模式：</a></li>\n<li><a href=\"#history%E6%A8%A1%E5%BC%8F\">history模式：</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC%E9%80%9A%E4%BF%A1\">组件之间的传值通信</a>\n<ul>\n<li><a href=\"#1%E7%88%B6%E7%BB%84%E4%BB%B6%E7%BB%99%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC\">1.父组件给子组件传值</a></li>\n<li><a href=\"#2%E5%AD%90%E7%BB%84%E4%BB%B6%E5%90%91%E7%88%B6%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1\">2.子组件向父组件通信</a></li>\n<li><a href=\"#3%E9%9D%9E%E7%88%B6%E5%AD%90%E5%85%84%E5%BC%9F%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1\">3.非父子,兄弟组件之间通信</a></li>\n</ul>\n</li>\n<li><a href=\"#vue%E4%B8%8Eangular%E4%BB%A5%E5%8F%8Areact%E7%9A%84%E5%8C%BA%E5%88%AB\">Vue与Angular以及React的区别？</a>\n<ul>\n<li><a href=\"#vue%E4%B8%8Eangularjs%E7%9A%84%E5%8C%BA%E5%88%AB\">Vue与AngularJS的区别</a></li>\n<li><a href=\"#vue%E4%B8%8Ereact%E7%9A%84%E5%8C%BA%E5%88%AB\">Vue与React的区别</a></li>\n</ul>\n</li>\n<li><a href=\"#vuex%E6%98%AF%E4%BB%80%E4%B9%88%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%E5%93%AA%E7%A7%8D%E5%8A%9F%E8%83%BD%E5%9C%BA%E6%99%AF%E4%BD%BF%E7%94%A8%E5%AE%83\">vuex是什么？怎么使用？哪种功能场景使用它？</a>\n<ul>\n<li><a href=\"#state\">state</a></li>\n<li><a href=\"#mutations\">mutations</a></li>\n<li><a href=\"#getters\">getters</a></li>\n<li><a href=\"#action\">action</a></li>\n<li><a href=\"#%E5%85%AC%E4%BC%97%E5%8F%B7%E6%8A%80%E6%9C%AF%E6%A0%88%E8%B7%AF%E7%BA%BF\">公众号技术栈路线</a></li>\n<li><a href=\"#%E5%8A%A0%E5%85%A5%E6%88%91%E4%BB%AC\">加入我们</a></li>\n</ul>\n</li>\n</ul>","r":{"minutes":16.23,"words":4870},"t":"vue常考面试题","y":"a"} }],
  ["/posts/javascript/closure.html", { loader: () => import(/* webpackChunkName: "posts_javascript_closure.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/closure.html.js"), meta: {"d":1559692800000,"l":"2019年6月5日","g":["Javascript"],"e":"<h2>快速导航</h2>\n<ul>\n<li><a href=\"#%E5%BF%AB%E9%80%9F%E5%AF%BC%E8%88%AA\">快速导航</a></li>\n<li><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E9%97%AD%E5%8C%85\">什么是闭包</a></li>\n<li><a href=\"#%E9%97%AD%E5%8C%85%E7%9A%84%E5%B8%B8%E8%A7%81%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90\">闭包的常见案例分析</a><br>\n- <a href=\"#%E6%A1%88%E4%BE%8B1-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D\">案例1-基本介绍</a><br>\n- <a href=\"#%E6%A1%88%E4%BE%8B2-%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6\">案例2-前端实现点击事件</a><br>\n- <a href=\"#%E6%A1%88%E4%BE%8B3-ajax%E8%AF%B7%E6%B1%82\">案例3-ajax请求</a><br>\n- <a href=\"#%E6%A1%88%E4%BE%8B4-for%E5%BE%AA%E7%8E%AF%E6%A1%88%E4%BE%8B\">案例4-for循环案例</a></li>\n<li><a href=\"#%E9%97%AD%E5%8C%85%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F\">闭包与内存泄漏</a></li>\n<li><a href=\"#%E9%97%AD%E5%8C%85%E7%9A%84%E5%BA%94%E7%94%A8\">闭包的应用</a></li>\n<li><a href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90\">面试题分析</a></li>\n<li><a href=\"#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ul>","r":{"minutes":6.4,"words":1919},"t":"javascript中的闭包","y":"a"} }],
  ["/posts/javascript/copy.html", { loader: () => import(/* webpackChunkName: "posts_javascript_copy.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/copy.html.js"), meta: {"d":1563062400000,"l":"2019年7月14日","g":["Javascript"],"e":"\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>本篇所讲的浅拷贝和深拷贝都是对于引用类型的，对于基础类型不会有这种操作</p>\n</div>\n<h2>数据类型与堆栈的关系</h2>\n<h3>基本类型与引用类型</h3>\n<ul>\n<li>\n<p>基本类型：undefined,null,Boolean,String,Number,Symbol</p>\n</li>\n<li>\n<p>引用类型：Object,Array,Date,Function,RegExp 等</p>\n</li>\n</ul>\n<h3>存储方式</h3>","r":{"minutes":5.21,"words":1562},"t":"搞不懂JS中赋值·浅拷贝·深拷贝的请看这里","y":"a"} }],
  ["/posts/javascript/datatype.html", { loader: () => import(/* webpackChunkName: "posts_javascript_datatype.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/datatype.html.js"), meta: {"d":1560470400000,"l":"2019年6月14日","g":["Javascript"],"e":"<h2>前言</h2>\n<p>之前面试了几个开发者，他们确实做过不少项目，能力也是不错的，但是发现js基础不扎实, 于是决定写一下这篇javascrip数据类型相关的基础文章，其实也不仅仅是因为面试了他们，之前自己在面试的时候，也曾经被虐过，面试官说过的最深刻的一句话我到现在都记得。</p>\n<blockquote>\n<p>基础很重要，只有基础好才会很少出<code>bug</code>，大多数的<code>bug</code>都是基础不扎实造成的。</p>\n</blockquote>\n<h2>快速导航</h2>\n<ul>\n<li><a href=\"#%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98\"><code>[问题引出]</code> 常见面试题</a></li>\n<li><a href=\"#js%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">js中的数据类型</a>\n<ul>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B\">基本类型</a></li>\n<li><a href=\"#%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B\">对象类型</a></li>\n</ul>\n</li>\n<li><a href=\"#js%E5%BC%B1%E7%B1%BB%E5%9E%8B%E8%AF%AD%E8%A8%80\">js弱类型语言</a></li>\n<li><a href=\"#js%E4%B8%AD%E7%9A%84%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99\">js中的强制转换规则</a>\n<ul>\n<li><a href=\"#ToPrimitive(%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8E%9F%E5%A7%8B%E5%80%BC)\">ToPrimitive(转换为原始值)</a></li>\n<li><a href=\"#toString\">toString</a></li>\n<li><a href=\"#valueOf\">valueOf</a></li>\n<li><a href=\"#Number\">Number</a></li>\n<li><a href=\"#String\">String</a></li>\n<li><a href=\"#Boolean\">Boolean</a></li>\n</ul>\n</li>\n<li><a href=\"#js%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99%E4%B8%8D%E5%90%8C%E5%9C%BA%E6%99%AF%E5%BA%94%E7%94%A8\">js转换规则不同场景应用</a></li>\n<li><a href=\"#js%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD\">js中的数据类型判断</a></li>\n<li><a href=\"#NaN%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93\">NaN相关总结</a></li>\n<li><a href=\"#%E8%AF%AF%E5%8C%BA\">误区</a></li>\n</ul>","r":{"minutes":14.38,"words":4315},"t":"面试常问javascript数据类型","y":"a"} }],
  ["/posts/javascript/exports.html", { loader: () => import(/* webpackChunkName: "posts_javascript_exports.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/exports.html.js"), meta: {"d":1565913600000,"l":"2019年8月16日","g":["Javascript"],"e":"<h2>面试会问</h2>\n<blockquote>\n<p>require 的运行机制和缓存策略你了解吗？</p>\n</blockquote>\n<blockquote>\n<p>require 加载模块的是同步还是异步？谈谈你的理解</p>\n</blockquote>\n<blockquote>\n<p>exports 和 module.exports 的区别是什么？</p>\n</blockquote>\n<blockquote>\n<p>require 加载模块的时候加载的究竟是什么？</p>\n</blockquote>\n<h2>require</h2>\n<p>提到 exports 和 module.exports 我们不得不提到 require 关键字。大家都知道 Node.js 遵循 CommonJS 规范，使用 require 关键字来加载模块。</p>","r":{"minutes":4.14,"words":1241},"t":"exports 和 module.exports","y":"a"} }],
  ["/posts/javascript/highFunc.html", { loader: () => import(/* webpackChunkName: "posts_javascript_highFunc.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/highFunc.html.js"), meta: {"d":1609286400000,"l":"2020年12月30日","g":["Node.js"],"e":"\n<h2>目标</h2>\n<ul>\n<li>\n<p>掌握高阶函数的使用，使用高阶函数解决异步问题。</p>\n</li>\n<li>\n<p>掌握发布订阅模式和观察者模式</p>\n</li>\n<li>\n<p>掌握promise核心应用，使用promise解决异步编程问题</p>\n</li>\n<li>\n<p>实现一个完整的promise库</p>\n</li>\n<li>\n<p>掌握promise中常见的面试题</p>\n</li>\n<li>\n<p>扩展promise中常见方法 all,race,finally...</p>\n</li>\n<li>\n<p>async await 实现原理</p>\n</li>\n</ul>","r":{"minutes":1.85,"words":556},"t":"从零开始，手写完整的Promise原理","y":"a"} }],
  ["/posts/javascript/higherFunc.html", { loader: () => import(/* webpackChunkName: "posts_javascript_higherFunc.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/higherFunc.html.js"), meta: {"d":1566259200000,"l":"2019年8月20日","g":["Javascript"],"e":"<figure><img src=\"http://img.xiaogangzai.cn/16bec3fc59d12ae5_highfunction.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n\n<h2>前言</h2>\n<p>一道经典面试题：</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//JS实现一个无限累加的add函数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//1 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//6</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":12.5,"words":3750},"t":"高阶函数详解与实战训练","y":"a"} }],
  ["/posts/javascript/js10.html", { loader: () => import(/* webpackChunkName: "posts_javascript_js10.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/js10.html.js"), meta: {"d":1558742400000,"l":"2019年5月25日","g":["Javascript","面试"],"e":"\n<p>本文中讲述到的面试题：</p>\n<ul>\n<li>说说对闭包的认识, 它解决了什么问题?</li>\n<li>跨域问题有哪些处理方式?</li>\n<li>for...in 和 for...of的区别?</li>\n<li>new一个对象, 这个过程中发生了什么?</li>\n<li>js的防抖和节流是什么?</li>\n<li>数组中常用的方法有哪些?</li>\n<li>怎么判断一个object是否是数组?</li>\n<li>继承有哪些方式?</li>\n<li>说说js中call,apply,bind之间的关系?</li>\n<li>你了解promise吗?</li>\n</ul>\n<h2>1.说说你对闭包的认识</h2>","r":{"minutes":35.56,"words":10668},"t":"js高频面试题","y":"a"} }],
  ["/posts/javascript/promise.html", { loader: () => import(/* webpackChunkName: "posts_javascript_promise.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/promise.html.js"), meta: {"d":1609286400000,"l":"2020年12月30日","g":["Node.js"],"e":"\n<h2>目标</h2>\n<ul>\n<li>\n<p>掌握高阶函数的使用，使用高阶函数解决异步问题。</p>\n</li>\n<li>\n<p>掌握发布订阅模式和观察者模式</p>\n</li>\n<li>\n<p>掌握 promise 核心应用，使用 promise 解决异步编程问题</p>\n</li>\n<li>\n<p>实现一个完整的 promise 库</p>\n</li>\n<li>\n<p>扩展 promise 中常见方法 all,race,finally...</p>\n</li>\n<li>\n<p>async await 实现原理</p>\n</li>\n</ul>\n<p>promise完整代码仓库路径 Anna0314zy/node-zy/2.promise/promise</p>","r":{"minutes":12.69,"words":3808},"t":"从零开始，手写完整的Promise原理","y":"a"} }],
  ["/posts/javascript/prototype.html", { loader: () => import(/* webpackChunkName: "posts_javascript_prototype.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/prototype.html.js"), meta: {"d":1560902400000,"l":"2019年6月19日","g":["Javascript"],"e":"\n<h2>总结</h2>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//es3 构造函数充当类</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  //构造函数中的属性 都是实例上的属性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  //以_明明都是私有属性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">  this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">type</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"哺乳类\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">  this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 20</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">  this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {}; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//返回一个引用类型</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">say</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"say\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">flag</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"动物\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//静态属性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//{}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//每个对象都有一个__proto__指向所属类的原型</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 每个原型会有一个constuctor 指向所属类</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">constructor</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">constructor</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">Animal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">__proto__</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">prototype</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//true</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":3.93,"words":1178},"t":"javascript中的原型链","y":"a"} }],
  ["/posts/javascript/recircleFun.html", { loader: () => import(/* webpackChunkName: "posts_javascript_recircleFun.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/recircleFun.html.js"), meta: {"d":1570579200000,"l":"2019年10月9日","g":["Javascript"],"e":"<h2>本篇文章你将学到</h2>\n<figure><img src=\"http://img.xiaogangzai.cn/article_12.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>为什么要写这篇文章</h2>\n<ol>\n<li>“递归”算法对于一个程序员应该算是最经典的算法之一，而且它越想越乱，很多复杂算法的实现也都用到了递归，例如深度优先搜索，二叉树遍历等。</li>\n<li>面试中常常会问递归相关的内容(深拷贝，对象格式化，数组拍平，走台阶问题等)</li>\n<li>最近项目中有一个需求，裂变分享，但是不仅仅给分享人返利，还会给最终分享人返利，但是只做到4级分销（也用到了递归，文中会讲解）</li>\n</ol>","r":{"minutes":13.22,"words":3965},"t":"聊聊面试必考-递归思想与实战","y":"a"} }],
  ["/posts/javascript/scoped.html", { loader: () => import(/* webpackChunkName: "posts_javascript_scoped.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/scoped.html.js"), meta: {"d":1561593600000,"l":"2019年6月27日","g":["Javascript"],"e":"<h2>快速导航</h2>\n<ul>\n<li><a href=\"#_1%E4%BB%80%E4%B9%88%E6%98%AF%E4%BD%9C%E7%94%A8%E5%9F%9F\">1.什么是作用域</a></li>\n<li><a href=\"#_2JavaScript%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\">2.JavaScript中的作用域</a>\n<ul>\n<li><a href=\"#_21%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F\">2.1全局作用域</a></li>\n<li><a href=\"#_22%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F\">2.2局部作用域</a></li>\n</ul>\n</li>\n<li><a href=\"#_3%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE\">3.作用域链</a>\n<ul>\n<li><a href=\"#_31JavaScript%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84%EF%BC%9F\">JavaScript是如何执行的？</a></li>\n<li><a href=\"#_32%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E6%A6%82%E5%BF%B5\">作用域链概念</a></li>\n<li><a href=\"#_33%E6%89%BE%E8%BF%87%E7%A8%8BLHS%E5%92%8CRHS%E6%9F%A5%E8%AF%A2%E7%89%B9%E6%AE%8A%E8%AF%B4%E6%98%8E\"><code>找</code> 过程LHS和RHS查询特殊说明</a></li>\n<li><a href=\"#_34%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E6%80%BB%E7%BB%93\">作用域链总结</a></li>\n</ul>\n</li>\n</ul>","r":{"minutes":11.31,"words":3392},"t":"javascript中作用域与作用域链","y":"a"} }],
  ["/posts/javascript/this.html", { loader: () => import(/* webpackChunkName: "posts_javascript_this.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/this.html.js"), meta: {"d":1567987200000,"l":"2019年9月9日","g":["Javascript"],"e":"<h2>为什么要学习this关键字</h2>\n<ol>\n<li>\n<p>面试会问啊！<br>\n总有一些面试官喜欢问你一段不可能这么写的代码。<br>\n看一道经典且古老的面试题(学完本文后，末尾会有一道更复杂的面试题等着你哦！)</p>\n<p>代码如下:</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> obj</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  a </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  foo</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> bar</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>我在读 Events 的 lib/events 源码的时候发现多次用到call关键字，看来有必要搞懂 this 与 call 相关的所有内容。</p>\n<p>其中几句代码是这样写的</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 场景1:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> EventEmitter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  EventEmitter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 场景2:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">listener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 场景3:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> listenerCount</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">emitter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>箭头函数使用不当报错，在封装 Node.js 的一个 ORM 映射框架 Sequelize 时，封装表关联关系，由于使用箭头函数造成了读到的上下文发生变化，不是想要的 model 信息，而是指向了全局 。</p>\n</li>\n<li>\n<p>call 关键字在写代码过程中还是比较常用的，有时候我们常常会使用 call 关键字来指定某个函数运行时的上下文，有时候还使用 call 关键字实现继承。</p>\n</li>\n</ol>","r":{"minutes":11.52,"words":3457},"t":"this关键字","y":"a"} }],
  ["/posts/javascript/unique.html", { loader: () => import(/* webpackChunkName: "posts_javascript_unique.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/unique.html.js"), meta: {"d":1577318400000,"l":"2019年12月26日","g":["Javascript"],"e":"<h2>为什么写这篇文章？</h2>\n<ol>\n<li>数组去重应该是面试<strong>必考</strong>问题之一。</li>\n<li>虽然它是一道并不复杂的问题，但是也能看出面试者的<strong>广度和深度</strong>，还有考虑问题的全面性。</li>\n<li>实际开发中我们应该选择哪种方式数组去重，本文告诉你。</li>\n<li>你以为的不一定你以为，面试官不只是让你去重一个数组，他想知道的有点多，包括你的思想。</li>\n</ol>\n<h2>当面试官问到时怎么回答？</h2>\n<h3>首先:我知道多少种去重方式</h3>\n<h4>双层 for 循环</h4>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> distinct</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">len</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">len</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">len</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">                arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">splice</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                // splice 会改变数组长度，所以要将数组长度 len 和下标 j 减一</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                len</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":8.39,"words":2516},"t":"js中数组去重","y":"a"} }],
  ["/posts/js/JS2.html", { loader: () => import(/* webpackChunkName: "posts_js_JS2.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/js/JS2.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>代码基本功测试（上）：JS 的数据类型你了解多少？</h2>\n<h2>数据类型概念</h2>\n<p>JavaScript 的数据类型有下图所示的 8 种：</p>\n<figure><figcaption></figcaption></figure>\n<p>其中，前 7 种类型为基础类型，最后 1 种（Object）为引用类型，也是你需要重点关注的，因为它在日常工作中是使用得最频繁，也是需要关注最多技术细节的数据类型。</p>\n<p>而引用数据类型（Object）又分为图上这几种常见的类型：Array - 数组对象、RegExp - 正则对象、Date - 日期对象、Math - 数学函数、Function - 函数对象。</p>","r":{"minutes":16.35,"words":4904},"t":"JS 的数据类型","y":"a"} }],
  ["/posts/js/JS3.html", { loader: () => import(/* webpackChunkName: "posts_js_JS3.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/js/JS3.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>1.apply、call、bind</h2>\n<p>apply、call、bind 这三个方法之间有什么区别?<br>\n<strong>call的性能比apply要好那么一丢丢 尤其参数在三个以上的时候</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fn1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // console.log(this, 'this')</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">   console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fn2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// call 的特点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 1.可以改变当前函数this指向</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 2.让当前函数执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// fn1.call(fn2); //1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// fn1.call.call(fn2); //2  如果多个call 会让fn2执行</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":12.2,"words":3659},"t":"JS 底层原理的实现","y":"a"} }],
  ["/posts/js/math.html", { loader: () => import(/* webpackChunkName: "posts_js_math.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/js/math.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>排序</h2>\n<h3>1.冒泡排序</h3>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 冒泡排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * 核心思想 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> *    让数组中的当前项和后一项进项比较，如果当前项比后一项大 则两项交换位置 大的靠后</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> arr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">15</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">24</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">8</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@</span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">param</span><span style=\"--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic\"> {*}</span><span style=\"--shiki-light:#E45649;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> ary</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@</span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">return</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> ary 排序后的数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> bubble</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //外层控制i比较的轮数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //里层控制每一轮比较的次数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                //当前项大于后一项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                [</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">j</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ary</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bubble</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":3.13,"words":938},"t":"算法","y":"a"} }],
  ["/posts/js/modules.html", { loader: () => import(/* webpackChunkName: "posts_js_modules.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/js/modules.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>其他参考资料</h2>\n<ul>\n<li><a href=\"http://www.zhufengpeixun.com/grow/html/53.design.html#t18523.3%20%E4%BB%A3%E7%A0%81\" target=\"_blank\" rel=\"noopener noreferrer\">设计模式</a></li>\n<li><a href=\"http://www.zhufengpeixun.com/grow/html/47.oauth.html\" target=\"_blank\" rel=\"noopener noreferrer\">OAUTH</a></li>\n</ul>","r":{"minutes":0.11,"words":34},"t":"设计模式","y":"a"} }],
  ["/posts/js/regexp.html", { loader: () => import(/* webpackChunkName: "posts_js_regexp.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/js/regexp.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["JS"],"e":"<h2>编写正则表达式</h2>\n<h3>创建方式</h3>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> str</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hello'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> reg</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\"> /</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">\\d</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#D19A66\">+</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">reg</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">test</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">str</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">reg</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> RegExp</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(“\\\\</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">d</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">”) </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//必须要转译 \\</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":12,"words":3601},"t":"正则","y":"a"} }],
  ["/posts/node/APIGateway.html", { loader: () => import(/* webpackChunkName: "posts_node_APIGateway.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/APIGateway.html.js"), meta: {"d":1586304000000,"l":"2020年4月8日","g":["Node.js","API 网关"],"e":"<blockquote>\n<p>原文：Building an API Gateway using Node.js</p>\n<p>地址：<a href=\"https://blog.risingstack.com/building-an-api-gateway-using-nodejs/\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.risingstack.com/building-an-api-gateway-using-nodejs/</a></p>\n</blockquote>\n<h1>node 学习笔记</h1>\n<p>外部客户端访问微服务架构中的服务时，服务端会对认证和传输有一些常见的要求。API 网关提供共享层来处理服务协议之间的差异，并满足特定客户端（如桌面浏览器、移动设备和老系统）的要求。</p>","r":{"minutes":8.21,"words":2464},"t":"使用 Node.js 搭建一个 API 网关(助力微服务)","y":"a"} }],
  ["/posts/node/AsyncIO.html", { loader: () => import(/* webpackChunkName: "posts_node_AsyncIO.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/AsyncIO.html.js"), meta: {"d":1578528000000,"l":"2020年1月9日","g":["Node.js","异步I/O"],"e":"\n<p>本文你能学到：</p>\n<ul>\n<li>Node.js 与底层之间是如何执行异步I/O调用的？和事件循环怎么联系上的呢？</li>\n<li>为什么说 Node 高性能，Node 的异步I/O 对高性能助力了什么？</li>\n<li>Node 的事件循环，你对事件怎么理解？</li>\n</ul>\n<blockquote>\n<p>看完本文后，你应该能更好的去理解事件循环，知道事件是怎么来的，Node 究竟执行异步I/O调用。如果面试官再问事件循环还有Node与底层之间如何执行异步I/O，我觉得你把本文的流程说清楚，应该能加分！本文对事件循环中的具体步骤没有详细讲解，每个步骤看官方文档更佳。</p>\n</blockquote>","r":{"minutes":8.43,"words":2528},"t":"Node 与底层之间如何执行异步 I/O 调用","y":"a"} }],
  ["/posts/node/", { loader: () => import(/* webpackChunkName: "posts_node_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/index.html.js"), meta: {"e":"\n<h2>node必知必会系列</h2>\n<ul>\n<li><a href=\"/zy-vuepress/posts/webframe/javascript/promise.html\" target=\"_blank\">深度了解promise</a></li>\n<li><a href=\"/zy-vuepress/posts/node/what.html\" target=\"_blank\">node.js究竟是什么</a></li>\n<li><a href=\"/zy-vuepress/posts/node/event_loop.html\" target=\"_blank\">node事件循环</a></li>\n<li><a href=\"/zy-vuepress/posts/node/path.html\" target=\"_blank\">node核心模块-path</a></li>\n<li><a href=\"/zy-vuepress/posts/node/module_fs.html\" target=\"_blank\">node核心模块-fs</a></li>\n<li><a href=\"/zy-vuepress/posts/node/stream.html\" target=\"_blank\">node核心模块-stream</a></li>\n<li><a href=\"/zy-vuepress/posts/node/buffer.html\" target=\"_blank\">node核心模块-buffer</a></li>\n<li><a href=\"/zy-vuepress/posts/node/processAndThread.html\" target=\"_blank\">深入理解进程与线程</a></li>\n<li><a href=\"/zy-vuepress/posts/node/queue.html\" target=\"_blank\">Node.js中的消息队列</a></li>\n<li><a href=\"/zy-vuepress/posts/node/overflow.html\" target=\"_blank\">Node.js 内存溢出时如何处理？</a></li>\n<li><a href=\"/zy-vuepress/posts/node/events.html\" target=\"_blank\">[源码解读]一文彻底搞懂Events模块</a></li>\n<li><a href=\"/zy-vuepress/posts/node/errors.html\" target=\"_blank\">nodejs十个常见误区</a></li>\n<li><a href=\"/zy-vuepress/posts/node/AsyncIO.html\" target=\"_blank\">Node 与底层之间如何执行异步 I/O 调用</a></li>\n</ul>","r":{"minutes":0.78,"words":235},"t":"node","y":"a"} }],
  ["/posts/node/buffer.html", { loader: () => import(/* webpackChunkName: "posts_node_buffer.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/buffer.html.js"), meta: {"d":1560038400000,"l":"2019年6月9日","g":["Node.js"],"e":"<p><strong>前言</strong></p>\n<p>写完上一篇文章<a href=\"/zy-vuepress/node/stream.html\" target=\"_blank\">想学Node.js，stream先有必要搞清楚</a><br>\n留下了悬念，<code>stream</code>对象数据流转的具体内容是什么？本篇文章将为大家进行深入讲解。</p>\n<h2>Buffer探究</h2>\n<p>看一段之前使用<code>stream</code>操作文件的例子：</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fileName</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">__dirname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'data.txt'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> stream</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">createReadStream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">fileName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'stream内容'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">stream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">stream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">on</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'data'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">chunk</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">chunk</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> instanceof</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Buffer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">chunk</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":11.9,"words":3571},"t":"Node.js核心模块-buffer","y":"a"} }],
  ["/posts/node/errors.html", { loader: () => import(/* webpackChunkName: "posts_node_errors.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/errors.html.js"), meta: {"d":1566777600000,"l":"2019年8月26日","g":["Node.js"],"e":"<ul>\n<li>译：koala</li>\n<li>原文地址：<a href=\"http://www.toptal.com/nodejs/top-10-common-nodejs-developer-mistakes\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.toptal.com/nodejs/top-10-common-nodejs-developer-mistakes</a></li>\n<li>原文作者：MAHMUD RIDWAN</li>\n</ul>\n<p><strong>前言</strong></p>\n<p>自 Node.js 面世以来，它获得了大量的赞美和批判。这种争论会一直持续，短时间内都不会结束。而在这些争论中，我们常常会忽略掉所有语言和平台都是基于一些核心问题来批判的，就是我们怎么去使用这些平台。无论使用 Node.js 编写可靠的代码有多难，而编写高并发代码又是多么的简单，这个平台终究是有那么一段时间了，而且被用来创建了大量的健壮而又复杂的 web 服务。这些 web 服务不仅拥有良好的扩展性，而且通过在互联网上持续的时间证明了它们的健壮性。</p>","r":{"minutes":13.06,"words":3918},"t":"node.js十个常见误区","y":"a"} }],
  ["/posts/node/event_loop.html", { loader: () => import(/* webpackChunkName: "posts_node_event_loop.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/event_loop.html.js"), meta: {"g":["Node.js"],"e":"<p><strong>本文涵盖</strong></p>\n<ul>\n<li>面试题的引入</li>\n<li>笔者对事件循环面试题执行顺序的一些疑问</li>\n<li>通过面试题对微任务、事件循环、定时器等对深入理解</li>\n<li>结论总计</li>\n</ul>\n<h2>面试题</h2>\n<p>面试题如下，大家可以先试着写一下输出结果，然后再看我下面的详细讲解，看看会不会有什么出入，如果把整个顺序弄清楚node.js的执行顺序应该就没问题了。</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">async</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> async1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'async1 start'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    await</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> async2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'async1 end'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">async</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> async2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'async2'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'script start'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setTimeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'setTimeout0'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">},</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setTimeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'setTimeout3'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">},</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setImmediate</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'setImmediate'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nextTick</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'nextTick'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">async1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'promise1'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'promise2'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'promise3'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'script end'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":7.59,"words":2278},"t":"node事件循环","y":"a"} }],
  ["/posts/node/events.html", { loader: () => import(/* webpackChunkName: "posts_node_events.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/events.html.js"), meta: {"d":1567641600000,"l":"2019年9月5日","g":["Node.js","Events"],"e":"<p><strong>前言</strong></p>\n<p>为什么写这篇文章？</p>\n<ul>\n<li>清楚的记得刚找node工作和面试官聊到了事件循环，然后面试官问事件是如何产生的？什么情况下产生事件。。。</li>\n<li>Events 在哪些场景应用到了？</li>\n<li>之前封装了一个 RxJava 的开源网络请求框架，也是基于发布-订阅模式，语言都是相通的，挺有趣。表情符号</li>\n<li>Events 模块是我公众号 Node.js 进阶路线的一部分</li>\n</ul>\n<p>作者简介：koala，专注完整的 Node.js 技术栈分享，从 JavaScript 到 Node.js,再到后端数据库，祝您成为优秀的高级 Node.js 工程师。【程序员成长指北】作者，Github 博客开源项目 <a href=\"https://github.com/koala-coding/goodBlog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/koala-coding/goodBlog</a></p>","r":{"minutes":13.75,"words":4126},"t":"源码解读,一文彻底搞懂Events模块","y":"a"} }],
  ["/posts/node/highFunc.html", { loader: () => import(/* webpackChunkName: "posts_node_highFunc.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/highFunc.html.js"), meta: {"d":1609286400000,"l":"2020年12月30日","g":["Node.js"],"e":"\n<h2>目标</h2>\n<ul>\n<li>\n<p>掌握高阶函数的使用，使用高阶函数解决异步问题。</p>\n</li>\n<li>\n<p>掌握发布订阅模式和观察者模式</p>\n</li>\n<li>\n<p>掌握promise核心应用，使用promise解决异步编程问题</p>\n</li>\n<li>\n<p>实现一个完整的promise库</p>\n</li>\n<li>\n<p>掌握promise中常见的面试题</p>\n</li>\n<li>\n<p>扩展promise中常见方法 all,race,finally...</p>\n</li>\n<li>\n<p>async await 实现原理</p>\n</li>\n</ul>","r":{"minutes":1.85,"words":556},"t":"从零开始，手写完整的Promise原理","y":"a"} }],
  ["/posts/node/module_fs.html", { loader: () => import(/* webpackChunkName: "posts_node_module_fs.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/module_fs.html.js"), meta: {"d":1564444800000,"l":"2019年7月30日","g":["Node.js"],"e":"<blockquote>\n<p>人所缺乏的不是才干而是志向，不是成功的能力而是勤劳的意志。 —— 部尔卫</p>\n</blockquote>\n<p><strong>前言</strong></p>\n<p>文件操作是开发过程中并不可少的一部分。Node.js 中的 fs 模块是文件操作的封装，它提供了文件读取、写入、更名、删除、遍历目录、链接等 POSIX 文件系统操作。与其它模块不同的是，fs 模块中所有的操作都提供了异步和同步的两个版本,具有 sync 后缀的方法为同步方法，不具有 sync 后缀的方法为异步方法</p>\n<h2>文章概览</h2>\n<ul>\n<li>\n<p>计算机中关于系统和文件的一些常识</p>\n<p>-- 权限位 mode</p>\n<p>-- 标识位 flag</p>\n<p>-- 文件描述符 fs</p>\n</li>\n<li>\n<p>Node.js 中 fs 模块的 api 详细讲解与对应 Demo</p>\n<p>-- 常规文件操作</p>\n<p>-- 高级文件操作</p>\n<p>-- 文件目录操纵</p>\n</li>\n<li>\n<p>Node.js 中 fs 模块的 api 对应 demo</p>\n</li>\n<li>\n<p>fs 模块的应用场景及实战训练(大小文件实现拷贝)</p>\n</li>\n</ul>","r":{"minutes":14.66,"words":4398},"t":"node核心模块 -fs模块","y":"a"} }],
  ["/posts/node/npm.html", { loader: () => import(/* webpackChunkName: "posts_node_npm.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/npm.html.js"), meta: {"d":1593302400000,"l":"2020年6月28日","g":["npm","工具"],"e":"<p>正在整理，可以上公众号查看</p>\n","r":{"minutes":0.12,"words":36},"t":"Node.js 进阶-你应该知道的 npm 知识都在这","y":"a"} }],
  ["/posts/node/overflow.html", { loader: () => import(/* webpackChunkName: "posts_node_overflow.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/overflow.html.js"), meta: {"d":1566172800000,"l":"2019年8月19日","g":["Node.js"],"e":"<p>Node.js 做密集型运算，或者所操作的数组、对象本身较大时，容易出现内存溢出的问题，这是由于 Node.js 的运行环境依赖 V8 引擎导致的。如果经常有较大数据量运算等操作，需要对 Node.js 运行环境限制有充分的了解。</p>\n<h2>本文涵盖</h2>\n<ol>\n<li>内存溢出问题</li>\n<li>为什么会内存溢出\n<ul>\n<li>2.1 V8内存分配机制</li>\n<li>2.2 内存溢出的原因</li>\n</ul>\n</li>\n<li>如何解决内存溢出问题</li>\n</ol>\n<blockquote>\n<p>作者简介：koala，专注完整的 Node.js 技术栈分享，从 JavaScript 到 Node.js,再到后端数据库，祝您成为优秀的高级 Node.js 工程师。【程序员成长指北】作者，Github 博客开源项目 <a href=\"https://github.com/koala-coding/goodBlog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/koala-coding/goodBlog</a></p>\n</blockquote>","r":{"minutes":4.89,"words":1466},"t":"Node.js 内存溢出时如何处理？","y":"a"} }],
  ["/posts/node/path.html", { loader: () => import(/* webpackChunkName: "posts_node_path.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/path.html.js"), meta: {"d":1564444800000,"l":"2019年7月30日","g":["Node.js"],"e":"<p><strong>前言</strong></p>\n<p>之前在做<code>webpack</code>配置时候多次用到路径相关内容，最近在写项目的时候，有一个文件需要上传到阿里云oss的功能，同时本地服务器也需要保留一个文件备份。多次用到了文件路径相关内容以及Node核心API的<code>path</code>模块，所以系统的学习了一下，整理了这篇文章。</p>\n<h1>node中的路径分类</h1>\n<p>node中的路径大致分5类，<code>dirname</code>,<code>filename</code>,<code>process.cwd()</code>,<code>./</code>,<code>../</code>,其中<code>dirname</code>,<code>filename</code>,<code>process.cwd()</code>绝对路径</p>","r":{"minutes":6.66,"words":1997},"t":"node核心模块 -文件路径path","y":"a"} }],
  ["/posts/node/processAndThread.html", { loader: () => import(/* webpackChunkName: "posts_node_processAndThread.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/processAndThread.html.js"), meta: {"d":1565222400000,"l":"2019年8月8日","g":["Node.js","进程","线程"],"e":"<p><strong>前言</strong></p>\n<p><code>进程</code>与<code>线程</code>是一个程序员的必知概念，面试经常被问及，但是一些文章内容只是讲讲理论知识，可能一些小伙伴并没有真的理解，在实际开发中应用也比较少。本篇文章除了介绍概念，通过Node.js 的角度讲解<code>进程</code>与<code>线程</code>，并且讲解一些在项目中的实战的应用，让你不仅能迎战面试官还可以在实战中完美应用。</p>\n<h2>文章导览</h2>\n<figure><img src=\"http://img.xiaogangzai.cn/16c6cf612c275894.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>","r":{"minutes":23.19,"words":6956},"t":"深入理解Node.js 中的进程与线程","y":"a"} }],
  ["/posts/node/promise.html", { loader: () => import(/* webpackChunkName: "posts_node_promise.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/promise.html.js"), meta: {"d":1609286400000,"l":"2020年12月30日","g":["Node.js"],"e":"\n<h2>目标</h2>\n<ul>\n<li>\n<p>掌握高阶函数的使用，使用高阶函数解决异步问题。</p>\n</li>\n<li>\n<p>掌握发布订阅模式和观察者模式</p>\n</li>\n<li>\n<p>掌握 promise 核心应用，使用 promise 解决异步编程问题</p>\n</li>\n<li>\n<p>实现一个完整的 promise 库</p>\n</li>\n<li>\n<p>扩展 promise 中常见方法 all,race,finally...</p>\n</li>\n<li>\n<p>async await 实现原理</p>\n</li>\n</ul>\n<p>promise完整代码仓库路径 Anna0314zy/node-zy/2.promise/promise</p>","r":{"minutes":12.69,"words":3808},"t":"从零开始，手写完整的Promise原理","y":"a"} }],
  ["/posts/node/queue.html", { loader: () => import(/* webpackChunkName: "posts_node_queue.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/queue.html.js"), meta: {"d":1574380800000,"l":"2019年11月22日","g":["Node.js"],"e":"<h2>为什么写这篇文章</h2>\n<ul>\n<li>现在的面试要求越来越高了，打开看了看几个BOSS招聘 Node.js 全栈开发的，其中都有一条“了解消息队列，并在项目中应用过”，呜呜呜</li>\n<li>后端开发者应该都知道消息队列，但是一些前端开发者可能知道的并不多，但是你们可能好奇<code>抢票,商品秒杀</code>等功能是如何实现的，其实没有多么高大上，看了消息队列就知道了。</li>\n</ul>\n<h2>文章导图(你能学到)</h2>\n<figure><img src=\"http://img.xiaogangzai.cn/queue_01.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>","r":{"minutes":20.63,"words":6189},"t":"消息队列助- Node.js实践篇","y":"a"} }],
  ["/posts/node/stream.html", { loader: () => import(/* webpackChunkName: "posts_node_stream.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/stream.html.js"), meta: {"d":1560470400000,"l":"2019年6月14日","g":["Node.js"],"e":"<h3>stream定义</h3>\n<p>流的英文<code>stream</code>，流（Stream）是一个抽象的数据接口，<code>Node.js</code>中很多对象都实现了流，流是<code>EventEmitter</code>对象的一个实例，总之它是会冒数据（以 <code>Buffer</code> 为单位），或者能够吸收数据的东西，它的本质就是让数据流动起来。<br>\n可能看一张图会更直观：</p>\n<figure><img src=\"http://img.xiaogangzai.cn/16bdbb113be0341a.jpg\" alt=\"水桶管道流转图\" tabindex=\"0\" loading=\"lazy\"><figcaption>水桶管道流转图</figcaption></figure>","r":{"minutes":10.41,"words":3124},"t":"Node.js中stream模块详解","y":"a"} }],
  ["/posts/node/util.html", { loader: () => import(/* webpackChunkName: "posts_node_util.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/util.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"<p><strong>前言</strong><br>\nutil 是一个Node.js 核心模块，提供常用函数的集合，用于弥补核心 JavaScript 的功能 过于精简的不足。</p>\n<p>使用方法如下：</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> util</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'util'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":2.03,"words":610},"t":"Node.js核心模块-utils","y":"a"} }],
  ["/posts/node/what.html", { loader: () => import(/* webpackChunkName: "posts_node_what.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node/what.html.js"), meta: {"d":1560038400000,"l":"2019年6月9日","g":["Node.js"],"e":"\n<p><strong>前言</strong></p>\n<p>如果你有一定的前端基础，比如 <code>HTML、CSS、JavaScript、JQ、Vue</code>；那么，<code>Node.js</code> 能让你以最低的成本快速过渡成为一个全栈工程师(我称这个全栈为伪全栈，我认为的全栈也要精通数据库，不喜勿喷)，从而触及后端和移动端的开发。当然，Node.js也不是万能的、也不是说学了它就可以完全取代后端的其他开发语言，它有自己的使命和擅长的应用领域。</p>\n<p>除此之外现在非常火热的 <code>Vue.js，React.js</code> ，等很多数据层动态交互优先选用了<code>Node.js</code>，一些比较流行的打包工具也是如此；综上，为你为什么要学习它又增加了一大理由。</p>","r":{"minutes":8.79,"words":2638},"t":"看这里，能知道 Node.js 究竟是什么","y":"a"} }],
  ["/posts/node-quick/Cookie.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_Cookie.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/Cookie.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.课程主题</h2>\n<p>权限校验</p>\n<h2>二.课程规划</h2>\n<ul>\n<li>cookie+session 在koa中的应用</li>\n<li>jwt 和 cookie实战</li>\n<li>实现简易express</li>\n</ul>\n<h2>三.知识点</h2>\n<p>cookie+session实现登录权限</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">yarn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> koa</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> koa</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">router</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> koa</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">views</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> koa</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">bodyparser</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> koa</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">session</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":2.62,"words":785},"t":"Cookie、Session、JWT","y":"a"} }],
  ["/posts/node-quick/", { loader: () => import(/* webpackChunkName: "posts_node-quick_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/index.html.js"), meta: {"e":"\n","r":{"minutes":0.02,"words":5},"t":"node 学习笔记","y":"a"} }],
  ["/posts/node-quick/buffer.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_buffer.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/buffer.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.编码的发展</h2>\n<p>一个字节由8个位组成，gbk中一个汉字2个字节，utf8中一个汉字3个字节</p>\n<ul>\n<li>ASCII编码</li>\n<li>GB2312</li>\n<li>GBK</li>\n<li>GB18030</li>\n<li>Unicode</li>\n<li>UTF-8<br>\nNode中不支持GBK编码，我们需要将GBK转为UTF8编码</li>\n</ul>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> iconv</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'iconv-lite'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> readGBKText</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">pathname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> bin</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">readFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">pathname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> iconv</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">decode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">bin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'gbk'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.93,"words":879},"t":"Buffer的应用","y":"a"} }],
  ["/posts/node-quick/eventLoop.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_eventLoop.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/eventLoop.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.Promise.all原理</h2>\n<p>// 判断是否是promise</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> isPromise</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> =&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\">typeof</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> value</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'object'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> value</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">||</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\">typeof</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> value</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'function'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\"> typeof</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'function'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">all</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">promises</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">reject</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> arr</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> []; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        let</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> processData</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 保证返回结果顺序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> promises</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                resolve</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> promises</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> promises</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isPromise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">                current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">data</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{ </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                    processData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                },</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">reject</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                processData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    })</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":3.29,"words":987},"t":"异步&事件环","y":"a"} }],
  ["/posts/node-quick/express.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_express.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/express.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<p>原理图片<br>\n</p>\n<h2>一.创建express服务</h2>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> express</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'./express'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> app</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> express</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 最基本的模型</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">app</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'/'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">req</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">\tres</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'ok'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">app</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">listen</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":7.47,"words":2241},"t":"Express应用+原理","y":"a"} }],
  ["/posts/node-quick/fs.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_fs.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/fs.html.js"), meta: {"d":1564444800000,"l":"2019年7月30日","g":["Node.js"],"e":"<blockquote>\n<p>人所缺乏的不是才干而是志向，不是成功的能力而是勤劳的意志。 —— 部尔卫</p>\n</blockquote>\n<p><strong>前言</strong></p>\n<p>文件操作是开发过程中并不可少的一部分。Node.js 中的 fs 模块是文件操作的封装，它提供了文件读取、写入、更名、删除、遍历目录、链接等 POSIX 文件系统操作。与其它模块不同的是，fs 模块中所有的操作都提供了异步和同步的两个版本,具有 sync 后缀的方法为同步方法，不具有 sync 后缀的方法为异步方法</p>\n<h2>文章概览</h2>\n<ul>\n<li>\n<p>计算机中关于系统和文件的一些常识</p>\n<p>-- 权限位 mode</p>\n<p>-- 标识位 flag</p>\n<p>-- 文件描述符 fs</p>\n</li>\n<li>\n<p>Node.js 中 fs 模块的 api 详细讲解与对应 Demo</p>\n<p>-- 常规文件操作</p>\n<p>-- 高级文件操作</p>\n<p>-- 文件目录操纵</p>\n</li>\n<li>\n<p>Node.js 中 fs 模块的 api 对应 demo</p>\n</li>\n<li>\n<p>fs 模块的应用场景及实战训练(大小文件实现拷贝)</p>\n</li>\n</ul>","r":{"minutes":14.45,"words":4335},"t":"node核心模块 -fs模块","y":"a"} }],
  ["/posts/node-quick/http-header.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_http-header.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/http-header.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.课程主题：</h2>\n<ul>\n<li>\n<p>HTTP中静态服务的编写</p>\n</li>\n<li>\n<p>ajax的使用和跨域问题</p>\n</li>\n<li>\n<p>http缓存(强制缓存和对比缓存)</p>\n</li>\n<li>\n<p>压缩问题 zlib 转化流</p>\n</li>\n<li>\n<p>多语言切换</p>\n</li>\n</ul>\n<h2>二.课程内容</h2>\n<h3>1.实现静态服务</h3>\n<p>mime模块处理请求文件类型</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>npm install mime -g</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":12.67,"words":3801},"t":"HTTP中Header的应用","y":"a"} }],
  ["/posts/node-quick/http.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_http.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/http.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.课程主题：</h2>\n<ul>\n<li>\n<p>1.掌握HTTP中必备的概念</p>\n</li>\n<li>\n<p>2.掌握node中的http服务的创建及应用</p>\n</li>\n<li>\n<p>url模块的使用</p>\n</li>\n<li>\n<p>客户端和服务端的创建</p>\n</li>\n<li>\n<p>http静态服务封装</p>\n</li>\n</ul>\n<h2>二.课程内容：</h2>\n<h3>1）什么是HTTP?应用层</h3>\n<p>通常的网络是在TCP/IP协议族的基础上来运作的，HTTP是一个子集。</p>\n<h3>2）TCP/IP协议族 (HTTP应用层协议 在传输层的基础上增加了一些自己的内容)</h3>","r":{"minutes":4.72,"words":1416},"t":"HTTP核心概念","y":"a"} }],
  ["/posts/node-quick/koa.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_koa.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/koa.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<p>原理图片<br>\n</p>\n","r":{"minutes":0.07,"words":22},"t":"koa应用+原理","y":"a"} }],
  ["/posts/node-quick/linkedList.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_linkedList.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/linkedList.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<p>链表实际上是线性表的链式存储结构。</p>\n<h2>一.单向链表</h2>\n<p>各个节点数据通过指针的方法串联起来,构成链表。（单向指针）</p>\n<h3>实现单向链表</h3>\n<figure><figcaption></figcaption></figure>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    constructor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">element</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * add(index,element)  指定索引添加元素 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * add(element)  直接添加元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * get(index)  获取指定索引元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * set(index,element) 修改指定索引节点内容</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * remove(index) 删除指定索引节点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * clear() 清空链表 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LinkedList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    constructor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    _node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &gt;=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'越界'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            current</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">arguments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            element</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'越界'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> head</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> prevNode</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">_node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">            prevNode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">prevNode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">_node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> node</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">_node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">element</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    remove</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> &gt;=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'越界'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> prevNode</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">_node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">index</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">            prevNode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> prevNode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> --</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    clear</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">size</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.94,"words":883},"t":"什么是链表(LinkedList)","y":"a"} }],
  ["/posts/node-quick/node-loop.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_node-loop.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/node-loop.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<ul>\n<li>进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位</li>\n<li>线程（Thread）是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。<br>\n<strong>Node特点主线程是单线程的</strong> 一个进程只开一个主线程,基于事件驱动的、异步非阻塞I/O，可以应用于高并发场景</li>\n</ul>\n<p>Nodejs中没有多线程，为了充分利用多核cpu,可以使用子进程实现内核的负载均衡</p>\n<p><strong>那我们就要解决以下问题</strong></p>\n<ul>\n<li>Node.js 做耗时的计算时候阻塞问题</li>\n<li>Node.js如何开启多进程</li>\n<li>开发过程中如何实现进程守护</li>\n</ul>","r":{"minutes":5.03,"words":1508},"t":"Node.js中的进程与线程","y":"a"} }],
  ["/posts/node-quick/node-modules.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_node-modules.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/node-modules.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.commonjs 规范</h2>\n<p>开发会有命名冲突 命名空间防止冲突（调用时不方便）<br>\nesModule commonjs umd 统一模块 amd 模块(很少)<br>\nimport export 浏览器 es6<br>\nrequire module.exports node 使用的（node 中使用需要使用 es6 babel 编译）</p>\n<ul>\n<li>1.每个 js 文件都是一个模块</li>\n<li>2.模块的导出 module.exports</li>\n<li>3.模块的导入 require</li>\n</ul>\n<h2>二.node 中的模块的分类</h2>","r":{"minutes":5.03,"words":1508},"t":"Node中的模块","y":"a"} }],
  ["/posts/node-quick/node.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_node.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/node.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.Node 是什么?</h2>\n<p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境(runtime),Node 不是一门语言是让 js 运行在后端的运行时,并且不包括 javascript 全集,因为在服务端中不包含 DOM 和 BOM,Node 也提供了一些新的模块例如 http,fs 模块等。Node.js 使用了事件驱动、非阻塞式 I/O 的模型，使其轻量又高效并且 Node.js 的包管理器 npm，是全球最大的开源库生态系统。事件驱动与非阻塞 IO 后面我们会一一介绍。到此我们已经对 node 有了简单的概念。</p>\n<h2>二.Node 解决了哪些问题?</h2>","r":{"minutes":5.9,"words":1771},"t":"Node基本概念","y":"a"} }],
  ["/posts/node-quick/npm.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_npm.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/npm.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<p>全称 node package manager 是世界上最大规模的包管理系统,官网是这样介绍的 Build amazing things...</p>\n<h2>一.npm init</h2>\n<p>默认大家肯定比较熟悉了，直接 npm init -y 了事，这回我们再来仔细看看</p>\n<p>包的描述信息</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>  \"name\": \"my-pack\",</span></span>\n<span class=\"line\"><span>  \"version\": \"1.0.0\",</span></span>\n<span class=\"line\"><span>  \"main\": \"index.js\",</span></span>\n<span class=\"line\"><span>  \"scripts\": {},</span></span>\n<span class=\"line\"><span>  \"license\": \"ISC\"</span></span>\n<span class=\"line\"><span>}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":7.47,"words":2242},"t":"NPM中常用命令","y":"a"} }],
  ["/posts/node-quick/path.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_path.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/path.html.js"), meta: {"d":1564444800000,"l":"2019年7月30日","g":["Node.js"],"e":"<p><strong>前言</strong></p>\n<p>之前在做<code>webpack</code>配置时候多次用到路径相关内容，最近在写项目的时候，有一个文件需要上传到阿里云oss的功能，同时本地服务器也需要保留一个文件备份。多次用到了文件路径相关内容以及Node核心API的<code>path</code>模块，所以系统的学习了一下，整理了这篇文章。</p>\n<h1>node中的路径分类</h1>\n<p>node中的路径大致分5类，<code>dirname</code>,<code>filename</code>,<code>process.cwd()</code>,<code>./</code>,<code>../</code>,其中<code>dirname</code>,<code>filename</code>,<code>process.cwd()</code>绝对路径</p>","r":{"minutes":6.47,"words":1940},"t":"node核心模块 -文件路径path","y":"a"} }],
  ["/posts/node-quick/promise.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_promise.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/promise.html.js"), meta: {"d":1609286400000,"l":"2020年12月30日","g":["Node.js"],"e":"\n<h2>目标</h2>\n<ul>\n<li>\n<p>掌握高阶函数的使用，使用高阶函数解决异步问题。</p>\n</li>\n<li>\n<p>掌握发布订阅模式和观察者模式</p>\n</li>\n<li>\n<p>掌握 promise 核心应用，使用 promise 解决异步编程问题</p>\n</li>\n<li>\n<p>实现一个完整的 promise 库</p>\n</li>\n<li>\n<p>扩展 promise 中常见方法 all,race,finally...</p>\n</li>\n<li>\n<p>async await 实现原理</p>\n</li>\n</ul>\n<p>promise完整代码仓库路径 Anna0314zy/node-zy/2.promise/promise</p>","r":{"minutes":13.02,"words":3905},"t":"从零开始，手写完整的Promise原理","y":"a"} }],
  ["/posts/node-quick/stream.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_stream.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/stream.html.js"), meta: {"d":1560470400000,"l":"2019年6月14日","g":["Node.js"],"e":"<h2>1.流的概念</h2>\n<ul>\n<li>流是一组有序的，有起点和终点的字节数据传输手段</li>\n<li>它不关心文件的整体内容，只关注是否从文件中读到了数据，以及读到数据之后的处理</li>\n<li>流是一个抽象接口，被 Node 中的很多对象所实现。比如HTTP 服务器request和response对象都是流。</li>\n</ul>\n<h2>2.如何实现拷贝文件</h2>\n<p>基于fs实现 读一点写一点 -缺陷耦合严重</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'fs'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> copy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">source</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">cb</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> BUFFER_LENGTH</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> read_position</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> write_positon</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> buffer</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Buffer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">alloc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">BUFFER_LENGTH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">   fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">source</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'r'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">rfd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'w'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">wfd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">                fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">read</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">rfd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">buffer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">BUFFER_LENGTH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">read_position</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">bytesRead</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> cb</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">bytesRead</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">                        fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">write</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">wfd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">buffer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">bytesRead</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">write_positon</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">written</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            read_position</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> bytesRead</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            write_positon</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> bytesRead</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                            next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                        });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    }</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">                        fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">rfd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,() </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">                        fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">wfd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,() </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                        cb</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                   </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                })</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        })</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">   })</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">copy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'./2.js'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'./xxx.js'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'copy-success'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":14.56,"words":4367},"t":"Node.js中stream模块详解","y":"a"} }],
  ["/posts/node-quick/tree.html", { loader: () => import(/* webpackChunkName: "posts_node-quick_tree.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-quick/tree.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["Node.js"],"e":"\n<h2>一.树形结构</h2>\n<p>像数组、栈、队列、默认都是线性结构类型。常见的树形结构有二叉树和多叉树（大于两个叉的树）。</p>\n<p>开发中常见的树形结构有: 文件夹目录、DOM结构、路由的配置...... （树的数据结构是非常重要的）</p>\n<h2>常见概念</h2>\n<ul>\n<li>\n<p>节点 （根节点、父节点、字节点、兄弟节点）</p>\n</li>\n<li>\n<p>子树 （左子树、右子树）,子树的个数称之为度</p>\n</li>\n<li>\n<p>叶子节点 （度为0的节点） 非叶子节点 （度不为0的节点）</p>\n</li>\n<li>\n<p>节点的深度 （从根节点到当前节点所经过的节点总数）</p>\n</li>\n<li>\n<p>节点的高度 （从当前节点到最远叶子节点经过的节点总数）</p>\n</li>\n<li>\n<p>树的层数 （树的高度、树的深度）</p>\n</li>\n<li>\n<p>有序树( 节点按照顺序排列）、无序树</p>\n</li>\n</ul>","r":{"minutes":5.98,"words":1794},"t":"树","y":"a"} }],
  ["/posts/node-zy/", { loader: () => import(/* webpackChunkName: "posts_node-zy_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-zy/index.html.js"), meta: {"e":"\n<h2>node必知必会系列</h2>\n<ul>\n<li><a href=\"/zy-vuepress/posts/node-zy/what.html\" target=\"_blank\">node.js究竟是什么</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/event_loop.html\" target=\"_blank\">node事件循环</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/path.html\" target=\"_blank\">node核心模块-path</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/module_fs.html\" target=\"_blank\">node核心模块-fs</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/stream.html\" target=\"_blank\">node核心模块-stream</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/buffer.html\" target=\"_blank\">node核心模块-buffer</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/processAndThread.html\" target=\"_blank\">深入理解进程与线程</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/queue.html\" target=\"_blank\">Node.js中的消息队列</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/overflow.html\" target=\"_blank\">Node.js 内存溢出时如何处理？</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/events.html\" target=\"_blank\">[源码解读]一文彻底搞懂Events模块</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/errors.html\" target=\"_blank\">nodejs十个常见误区</a></li>\n<li><a href=\"/zy-vuepress/posts/node-zy/AsyncIO.html\" target=\"_blank\">Node 与底层之间如何执行异步 I/O 调用</a></li>\n</ul>","r":{"minutes":0.78,"words":233},"t":"node 学习笔记","y":"a"} }],
  ["/posts/node-zy/path.html", { loader: () => import(/* webpackChunkName: "posts_node-zy_path.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-zy/path.html.js"), meta: {"d":1564444800000,"l":"2019年7月30日","g":["Node.js"],"e":"<p><strong>前言</strong></p>\n<p>之前在做<code>webpack</code>配置时候多次用到路径相关内容，最近在写项目的时候，有一个文件需要上传到阿里云oss的功能，同时本地服务器也需要保留一个文件备份。多次用到了文件路径相关内容以及Node核心API的<code>path</code>模块，所以系统的学习了一下，整理了这篇文章。</p>\n<h1>node中的路径分类</h1>\n<p>node中的路径大致分5类，<code>dirname</code>,<code>filename</code>,<code>process.cwd()</code>,<code>./</code>,<code>../</code>,其中<code>dirname</code>,<code>filename</code>,<code>process.cwd()</code>绝对路径</p>","r":{"minutes":6.66,"words":1997},"t":"node核心模块 -文件路径path","y":"a"} }],
  ["/posts/node-zy/stream.html", { loader: () => import(/* webpackChunkName: "posts_node-zy_stream.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/node-zy/stream.html.js"), meta: {"d":1560470400000,"l":"2019年6月14日","g":["Node.js"],"e":"<h3>stream定义</h3>\n<p>流的英文<code>stream</code>，流（Stream）是一个抽象的数据接口，<code>Node.js</code>中很多对象都实现了流，流是<code>EventEmitter</code>对象的一个实例，总之它是会冒数据（以 <code>Buffer</code> 为单位），或者能够吸收数据的东西，它的本质就是让数据流动起来。<br>\n可能看一张图会更直观：</p>\n<figure><img src=\"http://img.xiaogangzai.cn/16bdbb113be0341a.jpg\" alt=\"水桶管道流转图\" tabindex=\"0\" loading=\"lazy\"><figcaption>水桶管道流转图</figcaption></figure>","r":{"minutes":10.41,"words":3124},"t":"Node.js中stream模块详解","y":"a"} }],
  ["/posts/react/", { loader: () => import(/* webpackChunkName: "posts_react_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/react/index.html.js"), meta: {"e":"\n","r":{"minutes":0.02,"words":5},"t":"react 学习笔记","y":"a"} }],
  ["/posts/react/react1.html", { loader: () => import(/* webpackChunkName: "posts_react_react1.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/react/react1.html.js"), meta: {"d":1546732800000,"l":"2019年1月6日","g":["react"],"e":"<h2>01 | 你真的了解 React 吗？</h2>\n<p>你真的了解 React 吗？我们在面试中往往涉及 React 时，第一个问题就是“解释 React 是什么”。解释一种技术是什么，在面试中也是非常常见的引起 话题的题目。所以本讲我就带你通过讲解“如何解释 React 是什么”，让你掌握这一类概念题在面试中的解答技巧。</p>\n<p><strong>破题</strong></p>\n<p>“如何解释 React 是什么？”还有一种常见的问法是这样的：“谈一谈你对 React 的理解”。</p>\n<p>这个题目看似很容易，却很不好回答，因为大部分人拿到这个问题首先会“线性思考”，即一种直线的、单向的思维方式，表现为：想到哪儿讲到哪儿，缺乏全盘考虑。然后凭直觉作答，这样显然是不行的。可以看看这样一个在面试中很常见的场景。</p>","r":{"minutes":234.99,"words":70498},"t":"React面试","y":"a"} }],
  ["/posts/react/react%E5%85%A8%E5%AE%B6%E6%A1%B6.html", { loader: () => import(/* webpackChunkName: "posts_react_react全家桶.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/react/react全家桶.html.js"), meta: {"e":"<p>[TOC]</p>\n<h1>react基础用法</h1>\n<h3>ref 的用法</h3>\n<div class=\"language-ba line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"ba\" data-title=\"ba\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>1.ref的值是一个字符串</span></span>\n<span class=\"line\"><span>2.ref的值是一个函数</span></span>\n<span class=\"line\"><span>3.为DOM元素添加ref</span></span>\n<span class=\"line\"><span>4.为class组件添加ref</span></span>\n<span class=\"line\"><span>5.ref转发</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":46.42,"words":13925},"t":"react基础用法","y":"a"} }],
  ["/posts/tool/", { loader: () => import(/* webpackChunkName: "posts_tool_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/index.html.js"), meta: {"e":"\n\n<h2>常用软件下载</h2>\n<ul>\n<li>teamviewer破解版 远程控制软件(附带破解视频教学) 提取码：7aud<a href=\"https://pan.baidu.com/s/1O_9hBfqq1vBLkx9E51RrWA\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></li>\n<li>centOS mac版本<a href=\"https://pan.baidu.com/s/1geK2kF5\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></li>\n<li>postman破解版 接口调试工具 提取码：t5e9 <a href=\"https://pan.baidu.com/s/1FB82YFv6r2eSvj-5O3nczA\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></li>\n<li>git win_x64 提取码：v3f1 <a href=\"https://pan.baidu.com/s/112SCA8KeS2Up6mekDl1uGw\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></li>\n<li>git win_32 提取码：01fk <a href=\"https://pan.baidu.com/s/1tMG-7agcfELfcbzBIsC2hQ\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></li>\n<li>navicat for mysql10.0.11简体中文破解版 提取码：z59z [下载](<a href=\"https://pan.baidu.com/s/1udENOBe6P_KQ7d8fyMBR6A\" target=\"_blank\" rel=\"noopener noreferrer\">https://pan.baidu.com/s/1udENOBe6P_KQ7d8fyMBR6A</a></li>\n<li>axureRP 9 破解版 提取码：t7jh <a href=\"https://pan.baidu.com/s/164DU5VoB8hYxqoT-QQd8Wg\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></li>\n</ul>","r":{"minutes":0.94,"words":283},"t":"工具","y":"a"} }],
  ["/posts/tool/chrome.html", { loader: () => import(/* webpackChunkName: "posts_tool_chrome.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/chrome.html.js"), meta: {"d":1589500800000,"l":"2020年5月15日","g":["工具","chrome"],"e":"<blockquote>\n<p>写在前面： 本文所有插件的获取方式以及如何安装都写在文末</p>\n</blockquote>\n<h2>开发相关拓展插件</h2>\n<h3>1. WEB前端助手（<code>FeHelper</code>)</h3>\n<p>FeHelper简直就是前端开发人员的神器，它是由国人开发的一款前端工具集合的小插件，插件功能齐全，基本上涵盖了前端从业者经常会使用到的<strong>基础功能</strong>，使用起来也很顺手。<br>\n下面就来感受一下强大的功能：</p>\n<!-- ![](https://user-gold-cdn.xitu.io/2020/3/1/17095b006ac97cce?w=916&h=684&f=png&s=97942) -->","r":{"minutes":7.83,"words":2348},"t":"无形中提高你工作效率的chrome插件","y":"a"} }],
  ["/posts/tool/git.html", { loader: () => import(/* webpackChunkName: "posts_tool_git.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/git.html.js"), meta: {"d":1584230400000,"l":"2020年3月15日","g":["工具","git"],"e":"\n<h2>前言</h2>\n<p>Git 命令对于程序员的你来说再熟悉不过，但是发现好多小伙伴都是会一些基本的提交流程，当使用过程中遇到问题的时，查到的命令还不敢用，总是请教组里那几个精通 Git 小伙伴。本文对 Git 使用过程中常出现的问题进行总结并且对 Git 的一些误区概念说明了一些，看完后记得自己尝试下，希望你也能成为组里被请教的那 个 Git 小能手。</p>\n<h2>Git 经典图</h2>\n<p>(../../.vuepress/public/images/170defa8173379ee.jpg)</p>\n<p>一张经典的 Git 流程图(来源阮一峰老师的博客)</p>\n<h3>图中的几个专用名词解释：</h3>","r":{"minutes":10.08,"words":3025},"t":"如何进阶成公司 Git 小能手(常见问题总结)","y":"a"} }],
  ["/posts/tool/markdown.html", { loader: () => import(/* webpackChunkName: "posts_tool_markdown.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/markdown.html.js"), meta: {"d":1593993600000,"l":"2020年7月6日","g":["markdown","工具"],"e":"<h2>无序列表</h2>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第一项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第二项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第三项</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第一项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第二项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第三项</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第一项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第二项</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 第三项</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.6,"words":479},"t":"markdown + vuepress扩展语法","y":"a"} }],
  ["/posts/tool/node-versions.html", { loader: () => import(/* webpackChunkName: "posts_tool_node-versions.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/node-versions.html.js"), meta: {"g":["工具"],"e":"\n<h2>node以往的版本</h2>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Date</th>\n<th>V8</th>\n<th>npm</th>\n<th>NODE_MODULE_<br>VERSION</th>\n<th>download</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Node.js 13.9.0</td>\n<td>2020-02-18</td>\n<td>7.9.317.25</td>\n<td>6.13.7</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.9.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.8.0</td>\n<td>2020-02-05</td>\n<td>7.9.317.25</td>\n<td>6.13.6</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.8.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.7.0</td>\n<td>2020-01-21</td>\n<td>7.9.317.25</td>\n<td>6.13.6</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.7.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.6.0</td>\n<td>2020-01-07</td>\n<td>7.9.317.25</td>\n<td>6.13.4</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.6.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.5.0</td>\n<td>2019-12-18</td>\n<td>7.9.317.25</td>\n<td>6.13.4</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.5.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.4.0</td>\n<td>2019-12-17</td>\n<td>7.9.317.25</td>\n<td>6.13.4</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.4.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.3.0</td>\n<td>2019-12-03</td>\n<td>7.9.317.25</td>\n<td>6.13.1</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.3.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.2.0</td>\n<td>2019-11-21</td>\n<td>7.9.317.23</td>\n<td>6.13.1</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.2.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.1.0</td>\n<td>2019-11-05</td>\n<td>7.8.279.17</td>\n<td>6.12.1</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.1.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.0.1</td>\n<td>2019-10-23</td>\n<td>7.8.279.17</td>\n<td>6.12.0</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.0.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 13.0.0</td>\n<td>2019-10-10</td>\n<td>7.8.279.17</td>\n<td>6.12.0</td>\n<td>79</td>\n<td><a href=\"https://nodejs.org/download/release/v13.0.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.16.1</td>\n<td>2020-02-14</td>\n<td>7.8.279.23</td>\n<td>6.13.4</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.16.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.16.0</td>\n<td>2020-02-11</td>\n<td>7.8.279.23</td>\n<td>6.13.4</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.16.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.15.0</td>\n<td>2020-02-05</td>\n<td>7.7.299.13</td>\n<td>6.13.4</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.15.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.14.1</td>\n<td>2020-01-07</td>\n<td>7.7.299.13</td>\n<td>6.13.4</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.14.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.14.0</td>\n<td>2019-12-16</td>\n<td>7.7.299.13</td>\n<td>6.13.4</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.14.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.13.1</td>\n<td>2019-11-19</td>\n<td>7.7.299.13</td>\n<td>6.12.1</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.13.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.13.0</td>\n<td>2019-10-21</td>\n<td>7.7.299.13</td>\n<td>6.12.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.13.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.12.0</td>\n<td>2019-10-11</td>\n<td>7.7.299.13</td>\n<td>6.11.3</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.12.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.11.1</td>\n<td>2019-10-01</td>\n<td>7.7.299.11</td>\n<td>6.11.3</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.11.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.11.0</td>\n<td>2019-09-25</td>\n<td>7.7.299.11</td>\n<td>6.11.3</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.11.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.10.0</td>\n<td>2019-09-04</td>\n<td>7.6.303.29</td>\n<td>6.10.3</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.10.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.9.1</td>\n<td>2019-08-26</td>\n<td>7.6.303.29</td>\n<td>6.10.2</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.9.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.9.0</td>\n<td>2019-08-20</td>\n<td>7.6.303.29</td>\n<td>6.10.2</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.9.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.8.1</td>\n<td>2019-08-15</td>\n<td>7.5.288.22</td>\n<td>6.10.2</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.8.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.8.0</td>\n<td>2019-08-06</td>\n<td>7.5.288.22</td>\n<td>6.10.2</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.8.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.7.0</td>\n<td>2019-07-23</td>\n<td>7.5.288.22</td>\n<td>6.10.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.7.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.6.0</td>\n<td>2019-07-03</td>\n<td>7.5.288.22</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.6.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.5.0</td>\n<td>2019-06-26</td>\n<td>7.5.288.22</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.5.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.4.0</td>\n<td>2019-06-04</td>\n<td>7.4.288.27</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.4.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.3.1</td>\n<td>2019-05-22</td>\n<td>7.4.288.27</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.3.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.3.0</td>\n<td>2019-05-21</td>\n<td>7.4.288.27</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.3.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.2.0</td>\n<td>2019-05-07</td>\n<td>7.4.288.21</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.2.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.1.0</td>\n<td>2019-04-29</td>\n<td>7.4.288.21</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.1.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 12.0.0</td>\n<td>2019-04-23</td>\n<td>7.4.288.21</td>\n<td>6.9.0</td>\n<td>72</td>\n<td><a href=\"https://nodejs.org/download/release/v12.0.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.15.0</td>\n<td>2019-04-30</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.15.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.14.0</td>\n<td>2019-04-10</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.14.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.13.0</td>\n<td>2019-03-28</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.13.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.12.0</td>\n<td>2019-03-14</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.12.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.11.0</td>\n<td>2019-03-05</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.11.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.10.1</td>\n<td>2019-02-28</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.10.1/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.10.0</td>\n<td>2019-02-14</td>\n<td>7.0.276.38</td>\n<td>6.7.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.10.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.9.0</td>\n<td>2019-01-30</td>\n<td>7.0.276.38</td>\n<td>6.5.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.9.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.8.0</td>\n<td>2019-01-24</td>\n<td>7.0.276.38</td>\n<td>6.5.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.8.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.7.0</td>\n<td>2019-01-17</td>\n<td>7.0.276.38</td>\n<td>6.5.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.7.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.6.0</td>\n<td>2018-12-26</td>\n<td>7.0.276.38</td>\n<td>6.5.0-next.0</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.6.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.5.0</td>\n<td>2018-12-18</td>\n<td>7.0.276.38</td>\n<td>6.4.1</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.5.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.4.0</td>\n<td>2018-12-07</td>\n<td>7.0.276.38</td>\n<td>6.4.1</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.4.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.3.0</td>\n<td>2018-11-27</td>\n<td>7.0.276.38</td>\n<td>6.4.1</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.3.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.2.0</td>\n<td>2018-11-15</td>\n<td>7.0.276.38</td>\n<td>6.4.1</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.2.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.1.0</td>\n<td>2018-10-30</td>\n<td>7.0.276.32</td>\n<td>6.4.1</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.1.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td>Node.js 11.0.0</td>\n<td>2018-10-23</td>\n<td>7.0.276.28</td>\n<td>6.4.1</td>\n<td>67</td>\n<td><a href=\"https://nodejs.org/download/release/v11.0.0/\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n</tbody>\n</table>","r":{"minutes":2.14,"words":643},"t":"node","y":"a"} }],
  ["/posts/tool/shell.html", { loader: () => import(/* webpackChunkName: "posts_tool_shell.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/shell.html.js"), meta: {"d":1593993600000,"l":"2020年7月6日","g":["shell","工具"],"e":"<h2>curl</h2>\n<p><code>curl</code> 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 <code>URL</code> 工具的意思。<code>curl</code> 功能非常强大，它的命令可以直接放到 <code>postman</code> 使用，<code>postman</code> 也是支持 <code>curl</code> 的请求方式。</p>\n<h3>常用的结果参数</h3>\n<p><code>curl</code> 的参数包括很多，这里只说几个常用的，如果遇到复杂情况可以参考文档。</p>\n<p>不知道是不是还有的小伙伴不知道 <code>postman</code> 直接支持 <code>curl</code> 命令,在 <code>postman</code> 中点击 <code>code</code> 就会出现对应请求的<code>curl</code>命令</p>","r":{"minutes":5.31,"words":1592},"t":"我常用的前端提效 shell 命令","y":"a"} }],
  ["/posts/tool/vuepressBlog.html", { loader: () => import(/* webpackChunkName: "posts_tool_vuepressBlog.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/tool/vuepressBlog.html.js"), meta: {"d":1589932800000,"l":"2020年5月20日","g":["工具","Vue","Vuepress"],"e":"\n<h2>为什么选择vuepress</h2>\n<p>之前使用docsify部署过个人博客, 在此之前也使用过gitbook, 这次使用vuepress来改版, 根据自己的体验, 将这三者做一个对比</p>\n<ul>\n<li>\n<p>从阅读体验来说(个人感觉): gitbook &gt; docsify =vuepress</p>\n</li>\n<li>\n<p>从配置上来说, docsify相比于vuepress和gitbook都要简单一些.</p>\n</li>\n<li>\n<p>从性能上来说: vuepress &gt; docsify</p>\n<p>虽然docsify也是基于vue的, docsify是运行时解析, vuepress是预先渲染HTML</p>\n</li>\n<li>\n<p>灵活性上, vuepress也是相当占优势的, 对vue熟悉的朋友可以编写vue组件实现你想要的功能样式</p>\n</li>\n</ul>","r":{"minutes":11.86,"words":3559},"t":"使用Vuepress搭建博客","y":"a"} }],
  ["/posts/typescript/interface.html", { loader: () => import(/* webpackChunkName: "posts_typescript_interface.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/typescript/interface.html.js"), meta: {"d":1574035200000,"l":"2019年11月18日","g":["Typescript"],"e":"<h2>接口带来了什么好处</h2>\n<h3>好处One —— 过去我们写 JavaScript</h3>\n<p>JavaScript 中定义一个函数，用来获取一个用户的姓名和年龄的字符串：</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getUserInfo</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">user</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">$</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{user.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">$</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{user.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">age</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":10.11,"words":3033},"t":"Typescript系列之接口篇","y":"a"} }],
  ["/posts/vue-quick/", { loader: () => import(/* webpackChunkName: "posts_vue-quick_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/vue-quick/index.html.js"), meta: {"e":"\n","r":{"minutes":0.01,"words":3},"t":"vue学习","y":"a"} }],
  ["/posts/vue-quick/messageWays.html", { loader: () => import(/* webpackChunkName: "posts_vue-quick_messageWays.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/vue-quick/messageWays.html.js"), meta: {"d":1560211200000,"l":"2019年6月11日","g":["Vue","Vuex","通信方式"],"e":"\n<blockquote>\n<p>之前写了一篇关于vue面试总结的文章, 有不少网友提出组件之间通信方式还有很多, 这篇文章便是专门总结组件之间通信的</p>\n</blockquote>\n<p>vue是数据驱动视图更新的框架, 所以对于vue来说组件间的数据通信非常重要，那么组件之间如何进行数据通信的呢？<br>\n首先我们需要知道在vue中组件之间存在什么样的关系, 才更容易理解他们的通信方式, 就好像过年回家，坐着一屋子的陌生人，相互之间怎么称呼，这时就需要先知道自己和他们之间是什么样的关系。<br>\nvue组件中关系说明:<br>\n<img src=\"http://img.xiaogangzai.cn/16bde5b613aac4ee.jpg\" alt=\"image\" loading=\"lazy\"></p>","r":{"minutes":10.75,"words":3226},"t":"vue中8种组件通信方式","y":"a"} }],
  ["/posts/vue-quick/vue-up-1.html", { loader: () => import(/* webpackChunkName: "posts_vue-quick_vue-up-1.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/vue-quick/vue-up-1.html.js"), meta: {"d":1563062400000,"l":"2019年7月14日","g":["Javascript"],"e":"\n<h2>一.什么是库？什么是框架?</h2>\n<p>库是将代码集合成一个产品,库是我们调用库中的方法实现自己的功能。<br>\n框架则是为解决一类问题而开发的产品,框架是我们在指定的位置编写好代码，框架帮我们调用。</p>\n<h2>二.MVC 和 MVVM 区别</h2>\n<ul>\n<li>传统的 MVC 指的是,用户操作会请求服务端路由，路由会调用对应的控制器来处理,控制器会获取数 据。将结果返回给前端,页面重新渲染</li>\n<li>MVVM :传统的前端会将数据手动渲染到页面上, MVVM 模式不需要用户收到操作 dom 元素,将数据绑 定到 viewModel 层上，会自动将数据渲染到页面中，视图变化会通知 viewModel层 更新数据。 ViewModel 就是我们 MVVM 模式中的桥梁.<br>\nVue并没有完全遵循MVVM模型，严格的MVVM模式中,View层不能直接和Model层通信,只能通过ViewModel来进行通信。</li>\n</ul>","r":{"minutes":8.81,"words":2644},"t":"进阶Vue篇（一）","y":"a"} }],
  ["/posts/vue-quick/vue-up-2.html", { loader: () => import(/* webpackChunkName: "posts_vue-quick_vue-up-2.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/vue-quick/vue-up-2.html.js"), meta: {"d":1563062400000,"l":"2019年7月14日","g":["Javascript"],"e":"\n<p>本节主要掌握 Vue 组件的应用及组件间的数据交互。</p>\n<p>为什么要实现组件化开发？ 可复用、方便维护、减少不必要的更新操作</p>\n<h2>一.vue-cli 项目创建</h2>\n<h3>1.安装</h3>\n<div class=\"language-markdown line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"markdown\" data-title=\"markdown\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">npm install -g @vue/cli</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">npm install -g @vue/cli-service-global</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">vue create vue-online-edit</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":7.73,"words":2320},"t":"进阶Vue篇（二）","y":"a"} }],
  ["/posts/vue-quick/vue-up-3.html", { loader: () => import(/* webpackChunkName: "posts_vue-quick_vue-up-3.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/vue-quick/vue-up-3.html.js"), meta: {"d":1563062400000,"l":"2019年7月14日","g":["Javascript"],"e":"\n<h2>一.render函数的应用</h2>\n<h3>1.模板缺陷</h3>\n<p>模板的最大特点是扩展难度大，不易扩展。可能会造成逻辑冗余</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Level</span><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\"> :type=\"1\"&gt;哈哈&lt;/Level&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">&lt;Level</span><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\"> :type=\"2\"&gt;哈哈&lt;/Level&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">&lt;Level</span><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\"> :type=\"3\"&gt;哈哈&lt;/Level&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.52,"words":757},"t":"进阶Vue篇（三）","y":"a"} }],
  ["/posts/webpack/", { loader: () => import(/* webpackChunkName: "posts_webpack_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/webpack/index.html.js"), meta: {"e":"\n","r":{"minutes":0.01,"words":3},"t":"webpack 学习","y":"a"} }],
  ["/posts/webpack/base.html", { loader: () => import(/* webpackChunkName: "posts_webpack_base.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/webpack/base.html.js"), meta: {"e":"\n<h2>1.概念</h2>\n<figure><figcaption>WX20201123-091449@2x</figcaption></figure>\n<p>对比 <a href=\"https://nodejs.org/api/modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js 模块</a>，webpack <em>模块</em>能够以各种方式表达它们的依赖关系，几个例子如下：</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\" target=\"_blank\" rel=\"noopener noreferrer\">ES2015 <code>import</code></a> 语句</li>\n<li><a href=\"http://www.commonjs.org/specs/modules/1.0/\" target=\"_blank\" rel=\"noopener noreferrer\">CommonJS</a> <code>require()</code> 语句</li>\n<li><a href=\"https://github.com/amdjs/amdjs-api/blob/master/AMD.md\" target=\"_blank\" rel=\"noopener noreferrer\">AMD</a> <code>define</code> 和 <code>require</code> 语句</li>\n<li>css/sass/less 文件中的 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@import\" target=\"_blank\" rel=\"noopener noreferrer\"><code>@import</code> 语句</a>。</li>\n<li>样式(<code>url(...)</code>)或 HTML 文件(<code>&lt;img src=...&gt;</code>)中的图片链接(image url)</li>\n</ul>","r":{"minutes":9.92,"words":2977},"t":"1.基础应用","y":"a"} }],
  ["/posts/webpack/webpack%E5%8E%9F%E7%90%86.html", { loader: () => import(/* webpackChunkName: "posts_webpack_webpack原理.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/webpack/webpack原理.html.js"), meta: {"e":"<h2>webpack原理</h2>\n<h3>1.webpack插件机制</h3>\n<h3>2.tapable分类</h3>\n<figure><figcaption>image-20201201185400154</figcaption></figure>\n<figure><figcaption>image-20201202225518704</figcaption></figure>\n<p>Webpack 本质上是一种事件流的机制，它的工作流程就是将各个插件串联起来，而实现这一切的核心就是 <code>tapable</code>，Webpack 中最核心的，负责编译的 <code>Compiler</code> 和负责创建 <code>bundles</code> 的 <code>Compilation</code> 都是 <code>tapable</code> 构造函数的实例。</p>","r":{"minutes":41.74,"words":12522},"t":"webpack的loader的原理和实现-博文推荐","y":"a"} }],
  ["/404.html", { loader: () => import(/* webpackChunkName: "404.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/404.html.js"), meta: {"t":""} }],
  ["/posts/", { loader: () => import(/* webpackChunkName: "posts_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/index.html.js"), meta: {"t":"Posts"} }],
  ["/posts/es6_%E7%B3%BB%E5%88%97/", { loader: () => import(/* webpackChunkName: "posts_es6_系列_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/es6_系列/index.html.js"), meta: {"t":"Es6 系列"} }],
  ["/posts/brower/", { loader: () => import(/* webpackChunkName: "posts_brower_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/brower/index.html.js"), meta: {"t":"Brower"} }],
  ["/posts/database/", { loader: () => import(/* webpackChunkName: "posts_database_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/database/index.html.js"), meta: {"t":"Database"} }],
  ["/posts/javascript/", { loader: () => import(/* webpackChunkName: "posts_javascript_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/javascript/index.html.js"), meta: {"t":"Javascript"} }],
  ["/posts/js/", { loader: () => import(/* webpackChunkName: "posts_js_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/js/index.html.js"), meta: {"t":"Js"} }],
  ["/posts/typescript/", { loader: () => import(/* webpackChunkName: "posts_typescript_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/posts/typescript/index.html.js"), meta: {"t":"Typescript"} }],
  ["/category/", { loader: () => import(/* webpackChunkName: "category_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/category/index.html.js"), meta: {"t":"分类","I":false} }],
  ["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/", { loader: () => import(/* webpackChunkName: "category_使用指南_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/category/使用指南/index.html.js"), meta: {"t":"使用指南 分类","I":false} }],
  ["/category/%E6%8C%87%E5%8D%97/", { loader: () => import(/* webpackChunkName: "category_指南_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/category/指南/index.html.js"), meta: {"t":"指南 分类","I":false} }],
  ["/tag/", { loader: () => import(/* webpackChunkName: "tag_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/index.html.js"), meta: {"t":"标签","I":false} }],
  ["/tag/%E7%A6%81%E7%94%A8/", { loader: () => import(/* webpackChunkName: "tag_禁用_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/禁用/index.html.js"), meta: {"t":"标签: 禁用","I":false} }],
  ["/tag/%E5%8A%A0%E5%AF%86/", { loader: () => import(/* webpackChunkName: "tag_加密_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/加密/index.html.js"), meta: {"t":"标签: 加密","I":false} }],
  ["/tag/%E5%B8%83%E5%B1%80/", { loader: () => import(/* webpackChunkName: "tag_布局_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/布局/index.html.js"), meta: {"t":"标签: 布局","I":false} }],
  ["/tag/markdown/", { loader: () => import(/* webpackChunkName: "tag_markdown_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/markdown/index.html.js"), meta: {"t":"标签: Markdown","I":false} }],
  ["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/", { loader: () => import(/* webpackChunkName: "tag_页面配置_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/页面配置/index.html.js"), meta: {"t":"标签: 页面配置","I":false} }],
  ["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/", { loader: () => import(/* webpackChunkName: "tag_使用指南_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/使用指南/index.html.js"), meta: {"t":"标签: 使用指南","I":false} }],
  ["/tag/%E7%94%B5%E5%AD%90%E4%B9%A6/", { loader: () => import(/* webpackChunkName: "tag_电子书_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/电子书/index.html.js"), meta: {"t":"标签: 电子书","I":false} }],
  ["/tag/%E5%85%B6%E4%BB%96/", { loader: () => import(/* webpackChunkName: "tag_其他_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/其他/index.html.js"), meta: {"t":"标签: 其他","I":false} }],
  ["/tag/es6/", { loader: () => import(/* webpackChunkName: "tag_es6_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/es6/index.html.js"), meta: {"t":"标签: ES6","I":false} }],
  ["/tag/await/", { loader: () => import(/* webpackChunkName: "tag_await_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/await/index.html.js"), meta: {"t":"标签: await","I":false} }],
  ["/tag/async/", { loader: () => import(/* webpackChunkName: "tag_async_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/async/index.html.js"), meta: {"t":"标签: async","I":false} }],
  ["/tag/class/", { loader: () => import(/* webpackChunkName: "tag_class_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/class/index.html.js"), meta: {"t":"标签: class","I":false} }],
  ["/tag/css/", { loader: () => import(/* webpackChunkName: "tag_css_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/css/index.html.js"), meta: {"t":"标签: CSS","I":false} }],
  ["/tag/%E6%B5%8F%E8%A7%88%E5%99%A8/", { loader: () => import(/* webpackChunkName: "tag_浏览器_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/浏览器/index.html.js"), meta: {"t":"标签: 浏览器","I":false} }],
  ["/tag/%E6%B8%B2%E6%9F%93%E6%A0%91/", { loader: () => import(/* webpackChunkName: "tag_渲染树_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/渲染树/index.html.js"), meta: {"t":"标签: 渲染树","I":false} }],
  ["/tag/mysql/", { loader: () => import(/* webpackChunkName: "tag_mysql_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/mysql/index.html.js"), meta: {"t":"标签: MySQL","I":false} }],
  ["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/", { loader: () => import(/* webpackChunkName: "tag_数据库_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/数据库/index.html.js"), meta: {"t":"标签: 数据库","I":false} }],
  ["/tag/redis/", { loader: () => import(/* webpackChunkName: "tag_redis_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/redis/index.html.js"), meta: {"t":"标签: Redis","I":false} }],
  ["/tag/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/", { loader: () => import(/* webpackChunkName: "tag_日志系统_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/日志系统/index.html.js"), meta: {"t":"标签: 日志系统","I":false} }],
  ["/tag/js/", { loader: () => import(/* webpackChunkName: "tag_js_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/js/index.html.js"), meta: {"t":"标签: JS","I":false} }],
  ["/tag/%E9%9D%A2%E8%AF%95/", { loader: () => import(/* webpackChunkName: "tag_面试_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/面试/index.html.js"), meta: {"t":"标签: 面试","I":false} }],
  ["/tag/javascript/", { loader: () => import(/* webpackChunkName: "tag_javascript_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/javascript/index.html.js"), meta: {"t":"标签: Javascript","I":false} }],
  ["/tag/vue/", { loader: () => import(/* webpackChunkName: "tag_vue_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/vue/index.html.js"), meta: {"t":"标签: Vue","I":false} }],
  ["/tag/vuex/", { loader: () => import(/* webpackChunkName: "tag_vuex_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/vuex/index.html.js"), meta: {"t":"标签: Vuex","I":false} }],
  ["/tag/promise/", { loader: () => import(/* webpackChunkName: "tag_promise_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/promise/index.html.js"), meta: {"t":"标签: Promise","I":false} }],
  ["/tag/node.js/", { loader: () => import(/* webpackChunkName: "tag_node.js_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/node.js/index.html.js"), meta: {"t":"标签: Node.js","I":false} }],
  ["/tag/api-%E7%BD%91%E5%85%B3/", { loader: () => import(/* webpackChunkName: "tag_api-网关_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/api-网关/index.html.js"), meta: {"t":"标签: API 网关","I":false} }],
  ["/tag/%E5%BC%82%E6%AD%A5io/", { loader: () => import(/* webpackChunkName: "tag_异步io_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/异步io/index.html.js"), meta: {"t":"标签: 异步I/O","I":false} }],
  ["/tag/events/", { loader: () => import(/* webpackChunkName: "tag_events_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/events/index.html.js"), meta: {"t":"标签: Events","I":false} }],
  ["/tag/npm/", { loader: () => import(/* webpackChunkName: "tag_npm_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/npm/index.html.js"), meta: {"t":"标签: npm","I":false} }],
  ["/tag/%E5%B7%A5%E5%85%B7/", { loader: () => import(/* webpackChunkName: "tag_工具_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/工具/index.html.js"), meta: {"t":"标签: 工具","I":false} }],
  ["/tag/%E8%BF%9B%E7%A8%8B/", { loader: () => import(/* webpackChunkName: "tag_进程_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/进程/index.html.js"), meta: {"t":"标签: 进程","I":false} }],
  ["/tag/%E7%BA%BF%E7%A8%8B/", { loader: () => import(/* webpackChunkName: "tag_线程_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/线程/index.html.js"), meta: {"t":"标签: 线程","I":false} }],
  ["/tag/react/", { loader: () => import(/* webpackChunkName: "tag_react_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/react/index.html.js"), meta: {"t":"标签: react","I":false} }],
  ["/tag/chrome/", { loader: () => import(/* webpackChunkName: "tag_chrome_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/chrome/index.html.js"), meta: {"t":"标签: chrome","I":false} }],
  ["/tag/git/", { loader: () => import(/* webpackChunkName: "tag_git_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/git/index.html.js"), meta: {"t":"标签: git","I":false} }],
  ["/tag/markdown/", { loader: () => import(/* webpackChunkName: "tag_markdown_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/markdown/index.html.js"), meta: {"t":"标签: markdown","I":false} }],
  ["/tag/shell/", { loader: () => import(/* webpackChunkName: "tag_shell_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/shell/index.html.js"), meta: {"t":"标签: shell","I":false} }],
  ["/tag/vuepress/", { loader: () => import(/* webpackChunkName: "tag_vuepress_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/vuepress/index.html.js"), meta: {"t":"标签: Vuepress","I":false} }],
  ["/tag/typescript/", { loader: () => import(/* webpackChunkName: "tag_typescript_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/typescript/index.html.js"), meta: {"t":"标签: Typescript","I":false} }],
  ["/tag/%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/", { loader: () => import(/* webpackChunkName: "tag_通信方式_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/tag/通信方式/index.html.js"), meta: {"t":"标签: 通信方式","I":false} }],
  ["/article/", { loader: () => import(/* webpackChunkName: "article_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/article/index.html.js"), meta: {"t":"文章","I":false} }],
  ["/star/", { loader: () => import(/* webpackChunkName: "star_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/star/index.html.js"), meta: {"t":"星标","I":false} }],
  ["/timeline/", { loader: () => import(/* webpackChunkName: "timeline_index.html" */"/Users/aimwhy/Desktop/工作文档/zy/vuepress/zy-vuepress/src/.vuepress/.temp/pages/timeline/index.html.js"), meta: {"t":"时间轴","I":false} }],
]);

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updateRoutes) {
    __VUE_HMR_RUNTIME__.updateRoutes(routes)
  }
  if (__VUE_HMR_RUNTIME__.updateRedirects) {
    __VUE_HMR_RUNTIME__.updateRedirects(redirects)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ routes, redirects }) => {
    __VUE_HMR_RUNTIME__.updateRoutes(routes)
    __VUE_HMR_RUNTIME__.updateRedirects(redirects)
  })
}
